

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 18 22:21:58 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _TMR1	set	4046
    94  0000                     _PORTBbits	set	3969
    95  0000                     _TRISBbits	set	3987
    96  0000                     _PORTDbits	set	3971
    97  0000                     _T1CONbits	set	4045
    98  0000                     _T1CON	set	4045
    99  0000                     _ADCON1	set	4033
   100  0000                     _TRISDbits	set	3989
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	opt callstack 0
   105  000800  00                 	db	0
   106  000801                     STR_1:
   107  000801  4C                 	db	76	;'L'
   108  000802  6F                 	db	111	;'o'
   109  000803  6E                 	db	110	;'n'
   110  000804  67                 	db	103	;'g'
   111  000805  75                 	db	117	;'u'
   112  000806  69                 	db	105	;'i'
   113  000807  74                 	db	116	;'t'
   114  000808  75                 	db	117	;'u'
   115  000809  64                 	db	100	;'d'
   116  00080A  00                 	db	0
   117  00080B                     STR_3:
   118  00080B  25                 	db	37
   119  00080C  2E                 	db	46
   120  00080D  32                 	db	50	;'2'
   121  00080E  66                 	db	102	;'f'
   122  00080F  00                 	db	0
   123  000810                     STR_4:
   124  000810  49                 	db	73	;'I'
   125  000811  4E                 	db	78	;'N'
   126  000812  46                 	db	70	;'F'
   127  000813  00                 	db	0
   128  000814                     STR_8:
   129  000814  4E                 	db	78	;'N'
   130  000815  41                 	db	65	;'A'
   131  000816  4E                 	db	78	;'N'
   132  000817  00                 	db	0
   133  000818                     STR_5:
   134  000818  69                 	db	105	;'i'
   135  000819  6E                 	db	110	;'n'
   136  00081A  66                 	db	102	;'f'
   137  00081B  00                 	db	0
   138  00081C                     STR_9:
   139  00081C  6E                 	db	110	;'n'
   140  00081D  61                 	db	97	;'a'
   141  00081E  6E                 	db	110	;'n'
   142  00081F  00                 	db	0
   143  000820                     STR_12:
   144  000820  6C                 	db	108	;'l'
   145  000821  66                 	db	102	;'f'
   146  000822  00                 	db	0
   147  000823                     STR_2:
   148  000823  63                 	db	99	;'c'
   149  000824  6D                 	db	109	;'m'
   150  000825  00                 	db	0
   151  0000                     
   152                           ; #config settings
   153  000826  00                 	db	0	; dummy byte at the end
   154  0000                     
   155                           	psect	cinit
   156  003A66                     __pcinit:
   157                           	opt callstack 0
   158  003A66                     start_initialization:
   159                           	opt callstack 0
   160  003A66                     __initialization:
   161                           	opt callstack 0
   162                           
   163                           ; Clear objects allocated to BANK1 (80 bytes)
   164  003A66  EE01  F000         	lfsr	0,__pbssBANK1
   165  003A6A  0E50               	movlw	80
   166  003A6C                     clear_0:
   167  003A6C  6AEE               	clrf	postinc0,c
   168  003A6E  06E8               	decf	wreg,f,c
   169  003A70  E1FD               	bnz	clear_0
   170                           
   171                           ; Clear objects allocated to BANK0 (16 bytes)
   172  003A72  EE00  F0B0         	lfsr	0,__pbssBANK0
   173  003A76  0E10               	movlw	16
   174  003A78                     clear_1:
   175  003A78  6AEE               	clrf	postinc0,c
   176  003A7A  06E8               	decf	wreg,f,c
   177  003A7C  E1FD               	bnz	clear_1
   178  003A7E                     end_of_initialization:
   179                           	opt callstack 0
   180  003A7E                     __end_of__initialization:
   181                           	opt callstack 0
   182  003A7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  003A80  6EF8               	movwf	tblptru,c
   184  003A82  0100               	movlb	0
   185  003A84  EF09  F015         	goto	_main	;jump to C main() function
   186                           
   187                           	psect	bssBANK0
   188  0000B0                     __pbssBANK0:
   189                           	opt callstack 0
   190  0000B0                     floorf@F524:
   191                           	opt callstack 0
   192  0000B0                     	ds	4
   193  0000B4                     ___fpclassifyf@F463:
   194                           	opt callstack 0
   195  0000B4                     	ds	4
   196  0000B8                     _nout:
   197                           	opt callstack 0
   198  0000B8                     	ds	2
   199  0000BA                     _width:
   200                           	opt callstack 0
   201  0000BA                     	ds	2
   202  0000BC                     _prec:
   203                           	opt callstack 0
   204  0000BC                     	ds	2
   205  0000BE                     _flags:
   206                           	opt callstack 0
   207  0000BE                     	ds	2
   208                           
   209                           	psect	bssBANK1
   210  000100                     __pbssBANK1:
   211                           	opt callstack 0
   212  000100                     _dbuf:
   213                           	opt callstack 0
   214  000100                     	ds	80
   215                           
   216                           	psect	cstackBANK0
   217  000060                     __pcstackBANK0:
   218                           	opt callstack 0
   219  000060                     efgtoa@ou:
   220                           	opt callstack 0
   221                           
   222                           ; 4 bytes @ 0x0
   223  000060                     	ds	4
   224  000064                     _efgtoa$587:
   225                           	opt callstack 0
   226                           
   227                           ; 2 bytes @ 0x4
   228  000064                     	ds	2
   229  000066                     _efgtoa$588:
   230                           	opt callstack 0
   231                           
   232                           ; 2 bytes @ 0x6
   233  000066                     	ds	2
   234  000068                     _efgtoa$593:
   235                           	opt callstack 0
   236                           
   237                           ; 2 bytes @ 0x8
   238  000068                     	ds	2
   239  00006A                     _efgtoa$597:
   240                           	opt callstack 0
   241                           
   242                           ; 2 bytes @ 0xA
   243  00006A                     	ds	2
   244  00006C                     _efgtoa$598:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0xC
   248  00006C                     	ds	2
   249  00006E                     _efgtoa$599:
   250                           	opt callstack 0
   251                           
   252                           ; 2 bytes @ 0xE
   253  00006E                     	ds	2
   254  000070                     efgtoa@t:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x10
   258  000070                     	ds	2
   259  000072                     efgtoa@pp:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0x12
   263  000072                     	ds	2
   264  000074                     efgtoa@m:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0x14
   268  000074                     	ds	2
   269  000076                     efgtoa@ne:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0x16
   273  000076                     	ds	2
   274  000078                     efgtoa@d:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x18
   278  000078                     	ds	2
   279  00007A                     efgtoa@sign:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0x1A
   283  00007A                     	ds	2
   284  00007C                     efgtoa@p:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x1C
   288  00007C                     	ds	2
   289  00007E                     efgtoa@nmode:
   290                           	opt callstack 0
   291                           
   292                           ; 1 bytes @ 0x1E
   293  00007E                     	ds	1
   294  00007F                     efgtoa@w:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x1F
   298  00007F                     	ds	2
   299  000081                     efgtoa@mode:
   300                           	opt callstack 0
   301                           
   302                           ; 1 bytes @ 0x21
   303  000081                     	ds	1
   304  000082                     efgtoa@h:
   305                           	opt callstack 0
   306                           
   307                           ; 4 bytes @ 0x22
   308  000082                     	ds	4
   309  000086                     efgtoa@l:
   310                           	opt callstack 0
   311                           
   312                           ; 4 bytes @ 0x26
   313  000086                     	ds	4
   314  00008A                     efgtoa@i:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x2A
   318  00008A                     	ds	2
   319  00008C                     efgtoa@g:
   320                           	opt callstack 0
   321                           
   322                           ; 4 bytes @ 0x2C
   323  00008C                     	ds	4
   324  000090                     efgtoa@e:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x30
   328  000090                     	ds	2
   329  000092                     efgtoa@n:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x32
   333  000092                     	ds	2
   334  000094                     efgtoa@u:
   335                           	opt callstack 0
   336                           
   337                           ; 4 bytes @ 0x34
   338  000094                     	ds	6
   339  00009A                     sprintf@ap:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x3A
   343  00009A                     	ds	2
   344  00009C                     sprintf@f:
   345                           	opt callstack 0
   346                           
   347                           ; 6 bytes @ 0x3C
   348  00009C                     	ds	6
   349  0000A2                     ??_main:
   350                           
   351                           ; 1 bytes @ 0x42
   352  0000A2                     	ds	2
   353  0000A4                     main@pepe:
   354                           	opt callstack 0
   355                           
   356                           ; 4 bytes @ 0x44
   357  0000A4                     	ds	4
   358  0000A8                     main@Lon:
   359                           	opt callstack 0
   360                           
   361                           ; 4 bytes @ 0x48
   362  0000A8                     	ds	4
   363  0000AC                     main@a:
   364                           	opt callstack 0
   365                           
   366                           ; 4 bytes @ 0x4C
   367  0000AC                     	ds	4
   368                           
   369                           	psect	cstackCOMRAM
   370  000001                     __pcstackCOMRAM:
   371                           	opt callstack 0
   372  000001                     ??_LCD_Port:
   373  000001                     ??_LCD_CfgPort:
   374  000001                     ?_strlen:
   375                           	opt callstack 0
   376  000001                     ?___fpclassifyf:
   377                           	opt callstack 0
   378  000001                     ?_isupper:
   379                           	opt callstack 0
   380  000001                     ?_isdigit:
   381                           	opt callstack 0
   382  000001                     ?_strncmp:
   383                           	opt callstack 0
   384  000001                     ?_isspace:
   385                           	opt callstack 0
   386  000001                     ?___wmul:
   387                           	opt callstack 0
   388  000001                     ?___awdiv:
   389                           	opt callstack 0
   390  000001                     ?___awmod:
   391                           	opt callstack 0
   392  000001                     ?___fladd:
   393                           	opt callstack 0
   394  000001                     ?___fldiv:
   395                           	opt callstack 0
   396  000001                     ?___flmul:
   397                           	opt callstack 0
   398  000001                     ?___flneg:
   399                           	opt callstack 0
   400  000001                     ?___fltol:
   401                           	opt callstack 0
   402  000001                     ?___xxtofl:
   403                           	opt callstack 0
   404  000001                     LCD_CodigoCGROM@Caracter:
   405                           	opt callstack 0
   406  000001                     ___wmul@multiplier:
   407                           	opt callstack 0
   408  000001                     ___awdiv@dividend:
   409                           	opt callstack 0
   410  000001                     ___awmod@dividend:
   411                           	opt callstack 0
   412  000001                     isdigit@c:
   413                           	opt callstack 0
   414  000001                     isspace@c:
   415                           	opt callstack 0
   416  000001                     isupper@c:
   417                           	opt callstack 0
   418  000001                     fputc@c:
   419                           	opt callstack 0
   420  000001                     strcpy@dest:
   421                           	opt callstack 0
   422  000001                     strlen@s:
   423                           	opt callstack 0
   424  000001                     strncmp@_l:
   425                           	opt callstack 0
   426  000001                     ___fleq@ff1:
   427                           	opt callstack 0
   428  000001                     ___flneg@f1:
   429                           	opt callstack 0
   430  000001                     ___fltol@f1:
   431                           	opt callstack 0
   432  000001                     ___fladd@b:
   433                           	opt callstack 0
   434  000001                     ___fldiv@b:
   435                           	opt callstack 0
   436  000001                     ___flmul@b:
   437                           	opt callstack 0
   438  000001                     ___xxtofl@val:
   439                           	opt callstack 0
   440  000001                     ___fpclassifyf@x:
   441                           	opt callstack 0
   442                           
   443                           ; 4 bytes @ 0x0
   444  000001                     	ds	1
   445  000002                     LCD_Port@Dato:
   446                           	opt callstack 0
   447  000002                     LCD_CfgPort@Cfg:
   448                           	opt callstack 0
   449                           
   450                           ; 1 bytes @ 0x1
   451  000002                     	ds	1
   452  000003                     ??_LCD_Envia:
   453  000003                     ??_isupper:
   454  000003                     ??_isdigit:
   455  000003                     ??_isspace:
   456  000003                     ___wmul@multiplicand:
   457                           	opt callstack 0
   458  000003                     ___awdiv@divisor:
   459                           	opt callstack 0
   460  000003                     ___awmod@divisor:
   461                           	opt callstack 0
   462  000003                     fputc@fp:
   463                           	opt callstack 0
   464  000003                     strcpy@src:
   465                           	opt callstack 0
   466  000003                     strlen@a:
   467                           	opt callstack 0
   468  000003                     strncmp@_r:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x2
   472  000003                     	ds	2
   473  000005                     ??_fputc:
   474  000005                     ??___fpclassifyf:
   475  000005                     ??_strcpy:
   476  000005                     ??___fltol:
   477  000005                     ??___xxtofl:
   478  000005                     ___awdiv@counter:
   479                           	opt callstack 0
   480  000005                     ___awmod@counter:
   481                           	opt callstack 0
   482  000005                     ___wmul@product:
   483                           	opt callstack 0
   484  000005                     strncmp@n:
   485                           	opt callstack 0
   486  000005                     ___fleq@ff2:
   487                           	opt callstack 0
   488  000005                     ___fladd@a:
   489                           	opt callstack 0
   490  000005                     ___fldiv@a:
   491                           	opt callstack 0
   492  000005                     ___flmul@a:
   493                           	opt callstack 0
   494                           
   495                           ; 4 bytes @ 0x4
   496  000005                     	ds	1
   497  000006                     ___awdiv@sign:
   498                           	opt callstack 0
   499  000006                     ___awmod@sign:
   500                           	opt callstack 0
   501                           
   502                           ; 1 bytes @ 0x5
   503  000006                     	ds	1
   504  000007                     ??_strncmp:
   505  000007                     ?_tolower:
   506                           	opt callstack 0
   507  000007                     _isspace$1119:
   508                           	opt callstack 0
   509  000007                     ___awdiv@quotient:
   510                           	opt callstack 0
   511  000007                     strcpy@s:
   512                           	opt callstack 0
   513  000007                     tolower@c:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x6
   517  000007                     	ds	1
   518  000008                     ?_atoi:
   519                           	opt callstack 0
   520  000008                     atoi@s:
   521                           	opt callstack 0
   522  000008                     strncmp@l:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x7
   526  000008                     	ds	1
   527  000009                     ??_tolower:
   528  000009                     ??___fladd:
   529  000009                     ??___fldiv:
   530  000009                     ??___flmul:
   531  000009                     ??___fleq:
   532  000009                     ___fltol@sign1:
   533                           	opt callstack 0
   534  000009                     ___xxtofl@sign:
   535                           	opt callstack 0
   536  000009                     ___fpclassifyf@e:
   537                           	opt callstack 0
   538  000009                     strcpy@d:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x8
   542  000009                     	ds	1
   543  00000A                     ??_atoi:
   544  00000A                     ___fltol@exp1:
   545                           	opt callstack 0
   546  00000A                     ___xxtofl@exp:
   547                           	opt callstack 0
   548  00000A                     fputs@s:
   549                           	opt callstack 0
   550  00000A                     strncmp@r:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x9
   554  00000A                     	ds	1
   555  00000B                     LCD_Envia@Dato:
   556                           	opt callstack 0
   557  00000B                     ___xxtofl@arg:
   558                           	opt callstack 0
   559  00000B                     ___fpclassifyf@u:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0xA
   563  00000B                     	ds	1
   564  00000C                     LCD_Envia@LCD_GuardaTRIS:
   565                           	opt callstack 0
   566  00000C                     fputs@fp:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0xB
   570  00000C                     	ds	1
   571  00000D                     LCD_EnviaComando@Comando:
   572                           	opt callstack 0
   573  00000D                     LCD_EnviaCaracter@Caracter:
   574                           	opt callstack 0
   575  00000D                     ___fladd@signs:
   576                           	opt callstack 0
   577  00000D                     ___flmul@sign:
   578                           	opt callstack 0
   579  00000D                     _tolower$1204:
   580                           	opt callstack 0
   581  00000D                     ___fldiv@rem:
   582                           	opt callstack 0
   583                           
   584                           ; 4 bytes @ 0xC
   585  00000D                     	ds	1
   586  00000E                     ??_LCD_Inicializa:
   587  00000E                     LCD_PosicionLinea1@Pos:
   588                           	opt callstack 0
   589  00000E                     LCD_PosicionLinea2@Pos:
   590                           	opt callstack 0
   591  00000E                     ___fladd@aexp:
   592                           	opt callstack 0
   593  00000E                     fputs@c:
   594                           	opt callstack 0
   595  00000E                     LCD_EnviaCadena@Cadena:
   596                           	opt callstack 0
   597  00000E                     atoi@neg:
   598                           	opt callstack 0
   599  00000E                     ___flmul@grs:
   600                           	opt callstack 0
   601                           
   602                           ; 4 bytes @ 0xD
   603  00000E                     	ds	1
   604  00000F                     ___fladd@bexp:
   605                           	opt callstack 0
   606  00000F                     fputs@i:
   607                           	opt callstack 0
   608                           
   609                           ; 2 bytes @ 0xE
   610  00000F                     	ds	1
   611  000010                     ___fladd@grs:
   612                           	opt callstack 0
   613  000010                     _atoi$1088:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0xF
   617  000010                     	ds	1
   618  000011                     ?_pad:
   619                           	opt callstack 0
   620  000011                     ___fldiv@sign:
   621                           	opt callstack 0
   622  000011                     pad@fp:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0x10
   626  000011                     	ds	1
   627  000012                     ___flmul@aexp:
   628                           	opt callstack 0
   629  000012                     ___fldiv@new_exp:
   630                           	opt callstack 0
   631  000012                     _atoi$1090:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0x11
   635  000012                     	ds	1
   636  000013                     ___flmul@bexp:
   637                           	opt callstack 0
   638  000013                     pad@buf:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x12
   642  000013                     	ds	1
   643  000014                     _atoi$1089:
   644                           	opt callstack 0
   645  000014                     ___fldiv@grs:
   646                           	opt callstack 0
   647  000014                     ___flmul@prod:
   648                           	opt callstack 0
   649                           
   650                           ; 4 bytes @ 0x13
   651  000014                     	ds	1
   652  000015                     pad@p:
   653                           	opt callstack 0
   654  000015                     atoi@n:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0x14
   658  000015                     	ds	2
   659  000017                     ??_pad:
   660                           
   661                           ; 1 bytes @ 0x16
   662  000017                     	ds	1
   663  000018                     ___fldiv@bexp:
   664                           	opt callstack 0
   665  000018                     pad@i:
   666                           	opt callstack 0
   667  000018                     ___flmul@temp:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x17
   671  000018                     	ds	1
   672  000019                     ___fldiv@aexp:
   673                           	opt callstack 0
   674                           
   675                           ; 1 bytes @ 0x18
   676  000019                     	ds	1
   677  00001A                     ?_floorf:
   678                           	opt callstack 0
   679  00001A                     ?___flsub:
   680                           	opt callstack 0
   681  00001A                     pad@w:
   682                           	opt callstack 0
   683  00001A                     ___flge@ff1:
   684                           	opt callstack 0
   685  00001A                     ___flsub@b:
   686                           	opt callstack 0
   687  00001A                     floorf@x:
   688                           	opt callstack 0
   689                           
   690                           ; 4 bytes @ 0x19
   691  00001A                     	ds	4
   692  00001E                     ??_floorf:
   693  00001E                     ___flge@ff2:
   694                           	opt callstack 0
   695  00001E                     ___flsub@a:
   696                           	opt callstack 0
   697                           
   698                           ; 4 bytes @ 0x1D
   699  00001E                     	ds	4
   700  000022                     ??___flge:
   701                           
   702                           ; 1 bytes @ 0x21
   703  000022                     	ds	2
   704  000024                     floorf@m:
   705                           	opt callstack 0
   706                           
   707                           ; 4 bytes @ 0x23
   708  000024                     	ds	4
   709  000028                     floorf@e:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0x27
   713  000028                     	ds	2
   714  00002A                     floorf@u:
   715                           	opt callstack 0
   716                           
   717                           ; 4 bytes @ 0x29
   718  00002A                     	ds	4
   719  00002E                     ?_efgtoa:
   720                           	opt callstack 0
   721  00002E                     efgtoa@fp:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x2D
   725  00002E                     	ds	2
   726  000030                     efgtoa@f:
   727                           	opt callstack 0
   728                           
   729                           ; 4 bytes @ 0x2F
   730  000030                     	ds	4
   731  000034                     efgtoa@c:
   732                           	opt callstack 0
   733                           
   734                           ; 1 bytes @ 0x33
   735  000034                     	ds	1
   736  000035                     ??_efgtoa:
   737                           
   738                           ; 1 bytes @ 0x34
   739  000035                     	ds	5
   740  00003A                     ?_vfpfcnvrt:
   741                           	opt callstack 0
   742  00003A                     vfpfcnvrt@fp:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x39
   746  00003A                     	ds	2
   747  00003C                     vfpfcnvrt@fmt:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x3B
   751  00003C                     	ds	2
   752  00003E                     vfpfcnvrt@ap:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x3D
   756  00003E                     	ds	2
   757  000040                     ??_vfpfcnvrt:
   758                           
   759                           ; 1 bytes @ 0x3F
   760  000040                     	ds	4
   761  000044                     _vfpfcnvrt$613:
   762                           	opt callstack 0
   763                           
   764                           ; 2 bytes @ 0x43
   765  000044                     	ds	2
   766  000046                     _vfpfcnvrt$617:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0x45
   770  000046                     	ds	2
   771  000048                     vfpfcnvrt@f:
   772                           	opt callstack 0
   773                           
   774                           ; 4 bytes @ 0x47
   775  000048                     	ds	4
   776  00004C                     vfpfcnvrt@ct:
   777                           	opt callstack 0
   778                           
   779                           ; 3 bytes @ 0x4B
   780  00004C                     	ds	3
   781  00004F                     vfpfcnvrt@c:
   782                           	opt callstack 0
   783                           
   784                           ; 1 bytes @ 0x4E
   785  00004F                     	ds	1
   786  000050                     ?_vfprintf:
   787                           	opt callstack 0
   788  000050                     vfprintf@fp:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0x4F
   792  000050                     	ds	2
   793  000052                     vfprintf@fmt:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x51
   797  000052                     	ds	2
   798  000054                     vfprintf@ap:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x53
   802  000054                     	ds	2
   803  000056                     vfprintf@cfmt:
   804                           	opt callstack 0
   805                           
   806                           ; 2 bytes @ 0x55
   807  000056                     	ds	2
   808  000058                     ?_sprintf:
   809                           	opt callstack 0
   810  000058                     sprintf@s:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x57
   814  000058                     	ds	2
   815  00005A                     sprintf@fmt:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x59
   819  00005A                     	ds	6
   820  000060                     
   821                           ; 1 bytes @ 0x5F
   822 ;;
   823 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   824 ;;
   825 ;; *************** function _main *****************
   826 ;; Defined at:
   827 ;;		line 80 in file "princil.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  pepe            4   68[BANK0 ] unsigned char [4]
   832 ;;  a               4   76[BANK0 ] float 
   833 ;;  Lon             4   72[BANK0 ] float 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   843 ;;      Params:         0       0       0       0       0       0       0       0       0
   844 ;;      Locals:         0      12       0       0       0       0       0       0       0
   845 ;;      Temps:          0       2       0       0       0       0       0       0       0
   846 ;;      Totals:         0      14       0       0       0       0       0       0       0
   847 ;;Total ram usage:       14 bytes
   848 ;; Hardware stack levels required when called:    8
   849 ;; This function calls:
   850 ;;		_LCD_EnviaCadena
   851 ;;		_LCD_Inicializa
   852 ;;		_LCD_PosicionLinea1
   853 ;;		_LCD_PosicionLinea2
   854 ;;		___fldiv
   855 ;;		___xxtofl
   856 ;;		_sprintf
   857 ;; This function is called by:
   858 ;;		Startup code after reset
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text0
   863  002A12                     __ptext0:
   864                           	opt callstack 0
   865  002A12                     _main:
   866                           	opt callstack 23
   867  002A12                     
   868                           ;princil.c: 82:     float Lon;;princil.c: 83:     char pepe[4];;princil.c: 84:     float
      +                           a;;princil.c: 86:     TRISDbits.RD7 =0;
   869  002A12  9E95               	bcf	149,7,c	;volatile
   870                           
   871                           ;princil.c: 87:     TRISDbits.RD6=1;
   872  002A14  8C95               	bsf	149,6,c	;volatile
   873  002A16                     
   874                           ;princil.c: 89:     ADCON1=0b001111;
   875  002A16  0E0F               	movlw	15
   876  002A18  6EC1               	movwf	193,c	;volatile
   877                           
   878                           ;princil.c: 90:     T1CON=0b10000000;
   879  002A1A  0E80               	movlw	128
   880  002A1C  6ECD               	movwf	205,c	;volatile
   881  002A1E                     
   882                           ;princil.c: 92:     LCD_Inicializa();
   883  002A1E  ECF3  F01A         	call	_LCD_Inicializa	;wreg free
   884  002A22                     
   885                           ;princil.c: 93:     LCD_PosicionLinea1(0);
   886  002A22  0E00               	movlw	0
   887  002A24  EC54  F01D         	call	_LCD_PosicionLinea1
   888  002A28                     
   889                           ;princil.c: 94:     LCD_EnviaCadena("Longuitud");
   890  002A28  0E01               	movlw	low STR_1
   891  002A2A  6E0E               	movwf	LCD_EnviaCadena@Cadena^0,c
   892  002A2C  0E08               	movlw	high STR_1
   893  002A2E  6E0F               	movwf	(LCD_EnviaCadena@Cadena+1)^0,c
   894  002A30  EC97  F01B         	call	_LCD_EnviaCadena	;wreg free
   895  002A34                     
   896                           ;princil.c: 95:     LCD_PosicionLinea2(14);
   897  002A34  0E0E               	movlw	14
   898  002A36  EC4E  F01D         	call	_LCD_PosicionLinea2
   899  002A3A                     
   900                           ;princil.c: 96:     LCD_EnviaCadena("cm");
   901  002A3A  0E23               	movlw	low STR_2
   902  002A3C  6E0E               	movwf	LCD_EnviaCadena@Cadena^0,c
   903  002A3E  0E08               	movlw	high STR_2
   904  002A40  6E0F               	movwf	(LCD_EnviaCadena@Cadena+1)^0,c
   905  002A42  EC97  F01B         	call	_LCD_EnviaCadena	;wreg free
   906  002A46                     
   907                           ;princil.c: 98:    TMR1=0;
   908  002A46  0E00               	movlw	0
   909  002A48  6ECF               	movwf	207,c	;volatile
   910  002A4A  0E00               	movlw	0
   911  002A4C  6ECE               	movwf	206,c	;volatile
   912  002A4E                     
   913                           ;princil.c: 99:    T1CONbits.TMR1ON=0;
   914  002A4E  90CD               	bcf	205,0,c	;volatile
   915  002A50                     l4113:
   916                           
   917                           ;princil.c: 103:             PORTDbits.RD7= 0; _delay((unsigned long)((10)*(20000000UL/4
      +                          000000.0)));
   918  002A50  9E83               	bcf	131,7,c	;volatile
   919  002A52  0E10               	movlw	16
   920  002A54                     u5917:
   921  002A54  2EE8               	decfsz	wreg,f,c
   922  002A56  D7FE               	bra	u5917
   923  002A58  D000               	nop2	
   924  002A5A                     
   925                           ;princil.c: 104:             PORTDbits.RD7= 1; _delay((unsigned long)((10)*(20000000UL/4
      +                          000000.0)));
   926  002A5A  8E83               	bsf	131,7,c	;volatile
   927  002A5C  0E10               	movlw	16
   928  002A5E                     u5927:
   929  002A5E  2EE8               	decfsz	wreg,f,c
   930  002A60  D7FE               	bra	u5927
   931  002A62  D000               	nop2	
   932  002A64                     
   933                           ;princil.c: 105:             PORTDbits.RD7= 0;
   934  002A64  9E83               	bcf	131,7,c	;volatile
   935  002A66                     l30:
   936  002A66  AC83               	btfss	131,6,c	;volatile
   937  002A68  EF38  F015         	goto	u5861
   938  002A6C  EF3A  F015         	goto	u5860
   939  002A70                     u5861:
   940  002A70  EF33  F015         	goto	l30
   941  002A74                     u5860:
   942  002A74  0E00               	movlw	0
   943  002A76  6ECF               	movwf	207,c	;volatile
   944  002A78  0E00               	movlw	0
   945  002A7A  6ECE               	movwf	206,c	;volatile
   946  002A7C                     
   947                           ;princil.c: 109:             T1CONbits.TMR1ON=1;
   948  002A7C  80CD               	bsf	205,0,c	;volatile
   949  002A7E                     l33:
   950  002A7E  BC83               	btfsc	131,6,c	;volatile
   951  002A80  EF44  F015         	goto	u5871
   952  002A84  EF46  F015         	goto	u5870
   953  002A88                     u5871:
   954  002A88  EF3F  F015         	goto	l33
   955  002A8C                     u5870:
   956  002A8C  CFCE F001          	movff	4046,___xxtofl@val	;volatile
   957  002A90  CFCF F002          	movff	4047,___xxtofl@val+1	;volatile
   958  002A94  6A03               	clrf	(___xxtofl@val+2)^0,c
   959  002A96  6A04               	clrf	(___xxtofl@val+3)^0,c
   960  002A98  0E00               	movlw	0
   961  002A9A  EC67  F013         	call	___xxtofl
   962  002A9E  C001  F0AC         	movff	?___xxtofl,main@a
   963  002AA2  C002  F0AD         	movff	?___xxtofl+1,main@a+1
   964  002AA6  C003  F0AE         	movff	?___xxtofl+2,main@a+2
   965  002AAA  C004  F0AF         	movff	?___xxtofl+3,main@a+3
   966  002AAE                     
   967                           ;princil.c: 112:             T1CONbits.TMR1ON=0;
   968  002AAE  90CD               	bcf	205,0,c	;volatile
   969                           
   970                           ;princil.c: 114:             Lon=a/315;
   971  002AB0  C0AC  F001         	movff	main@a,___fldiv@b
   972  002AB4  C0AD  F002         	movff	main@a+1,___fldiv@b+1
   973  002AB8  C0AE  F003         	movff	main@a+2,___fldiv@b+2
   974  002ABC  C0AF  F004         	movff	main@a+3,___fldiv@b+3
   975  002AC0  0E00               	movlw	0
   976  002AC2  6E05               	movwf	___fldiv@a^0,c
   977  002AC4  0E80               	movlw	128
   978  002AC6  6E06               	movwf	(___fldiv@a+1)^0,c
   979  002AC8  0E9D               	movlw	157
   980  002ACA  6E07               	movwf	(___fldiv@a+2)^0,c
   981  002ACC  0E43               	movlw	67
   982  002ACE  6E08               	movwf	(___fldiv@a+3)^0,c
   983  002AD0  EC91  F010         	call	___fldiv	;wreg free
   984  002AD4  C001  F0A8         	movff	?___fldiv,main@Lon
   985  002AD8  C002  F0A9         	movff	?___fldiv+1,main@Lon+1
   986  002ADC  C003  F0AA         	movff	?___fldiv+2,main@Lon+2
   987  002AE0  C004  F0AB         	movff	?___fldiv+3,main@Lon+3
   988  002AE4                     
   989                           ;princil.c: 115:             sprintf(pepe,"%.2f",Lon);
   990  002AE4  0EA4               	movlw	low main@pepe
   991  002AE6  6E58               	movwf	sprintf@s^0,c
   992  002AE8  0E00               	movlw	high main@pepe
   993  002AEA  6E59               	movwf	(sprintf@s+1)^0,c
   994  002AEC  0E0B               	movlw	low STR_3
   995  002AEE  6E5A               	movwf	sprintf@fmt^0,c
   996  002AF0  0E08               	movlw	high STR_3
   997  002AF2  6E5B               	movwf	(sprintf@fmt+1)^0,c
   998  002AF4  C0A8  F05C         	movff	main@Lon,?_sprintf+4
   999  002AF8  C0A9  F05D         	movff	main@Lon+1,?_sprintf+5
  1000  002AFC  C0AA  F05E         	movff	main@Lon+2,?_sprintf+6
  1001  002B00  C0AB  F05F         	movff	main@Lon+3,?_sprintf+7
  1002  002B04  ECF4  F01B         	call	_sprintf	;wreg free
  1003  002B08                     
  1004                           ;princil.c: 116:             LCD_PosicionLinea2(8);
  1005  002B08  0E08               	movlw	8
  1006  002B0A  EC4E  F01D         	call	_LCD_PosicionLinea2
  1007  002B0E                     
  1008                           ;princil.c: 117:             LCD_EnviaCadena(pepe);
  1009  002B0E  0EA4               	movlw	low main@pepe
  1010  002B10  6E0E               	movwf	LCD_EnviaCadena@Cadena^0,c
  1011  002B12  0E00               	movlw	high main@pepe
  1012  002B14  6E0F               	movwf	(LCD_EnviaCadena@Cadena+1)^0,c
  1013  002B16  EC97  F01B         	call	_LCD_EnviaCadena	;wreg free
  1014  002B1A                     
  1015                           ;princil.c: 118:            _delay((unsigned long)((50)*(20000000UL/4000.0)));
  1016  002B1A  0E02               	movlw	2
  1017  002B1C  0100               	movlb	0	; () banked
  1018  002B1E  6FA3               	movwf	(??_main+1)& (0+255),b
  1019  002B20  0E45               	movlw	69
  1020  002B22  6FA2               	movwf	??_main& (0+255),b
  1021  002B24  0EA9               	movlw	169
  1022  002B26                     u5937:
  1023  002B26  2EE8               	decfsz	wreg,f,c
  1024  002B28  D7FE               	bra	u5937
  1025  002B2A  2FA2               	decfsz	??_main& (0+255),f,b
  1026  002B2C  D7FC               	bra	u5937
  1027  002B2E  2FA3               	decfsz	(??_main+1)& (0+255),f,b
  1028  002B30  D7FA               	bra	u5937
  1029  002B32  D000               	nop2	
  1030  002B34  EF28  F015         	goto	l4113
  1031  002B38  EF00  F000         	goto	start
  1032  002B3C                     __end_of_main:
  1033                           	opt callstack 0
  1034                           
  1035 ;; *************** function _sprintf *****************
  1036 ;; Defined at:
  1037 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  s               2   87[COMRAM] PTR unsigned char 
  1040 ;;		 -> main@pepe(4), 
  1041 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1042 ;;		 -> STR_3(5), 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  f               6   60[BANK0 ] struct _IO_FILE
  1045 ;;  ap              2   58[BANK0 ] PTR void [1]
  1046 ;;		 -> ?_sprintf(2), 
  1047 ;;  ret             2    0        int 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  2   87[COMRAM] int 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         8       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1060 ;;      Totals:         8      10       0       0       0       0       0       0       0
  1061 ;;Total ram usage:       18 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    7
  1064 ;; This function calls:
  1065 ;;		_vfprintf
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text1
  1072  0037E8                     __ptext1:
  1073                           	opt callstack 0
  1074  0037E8                     _sprintf:
  1075                           	opt callstack 23
  1076  0037E8  0E5C               	movlw	low (?_sprintf+4)
  1077  0037EA  0100               	movlb	0	; () banked
  1078  0037EC  6F9A               	movwf	sprintf@ap& (0+255),b
  1079  0037EE  0E00               	movlw	high (?_sprintf+4)
  1080  0037F0  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
  1081  0037F2  C058  F09C         	movff	sprintf@s,sprintf@f
  1082  0037F6  C059  F09D         	movff	sprintf@s+1,sprintf@f+1
  1083  0037FA                     
  1084                           ; BSR set to: 0
  1085  0037FA  0E00               	movlw	0
  1086  0037FC  6F9F               	movwf	(sprintf@f+3)& (0+255),b
  1087  0037FE  0E00               	movlw	0
  1088  003800  6F9E               	movwf	(sprintf@f+2)& (0+255),b
  1089  003802                     
  1090                           ; BSR set to: 0
  1091  003802  0E00               	movlw	0
  1092  003804  6FA1               	movwf	(sprintf@f+5)& (0+255),b
  1093  003806  0E00               	movlw	0
  1094  003808  6FA0               	movwf	(sprintf@f+4)& (0+255),b
  1095  00380A                     
  1096                           ; BSR set to: 0
  1097  00380A  0E9C               	movlw	low sprintf@f
  1098  00380C  6E50               	movwf	vfprintf@fp^0,c
  1099  00380E  0E00               	movlw	high sprintf@f
  1100  003810  6E51               	movwf	(vfprintf@fp+1)^0,c
  1101  003812  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1102  003816  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1103  00381A  0E9A               	movlw	low sprintf@ap
  1104  00381C  6E54               	movwf	vfprintf@ap^0,c
  1105  00381E  0E00               	movlw	high sprintf@ap
  1106  003820  6E55               	movwf	(vfprintf@ap+1)^0,c
  1107  003822  EC36  F01B         	call	_vfprintf	;wreg free
  1108  003826  0100               	movlb	0	; () banked
  1109  003828  519E               	movf	(sprintf@f+2)& (0+255),w,b
  1110  00382A  2458               	addwf	sprintf@s^0,w,c
  1111  00382C  6ED9               	movwf	fsr2l,c
  1112  00382E  519F               	movf	(sprintf@f+3)& (0+255),w,b
  1113  003830  2059               	addwfc	(sprintf@s+1)^0,w,c
  1114  003832  6EDA               	movwf	fsr2h,c
  1115  003834  0E00               	movlw	0
  1116  003836  6EDF               	movwf	indf2,c
  1117  003838                     
  1118                           ; BSR set to: 0
  1119  003838  0012               	return		;funcret
  1120  00383A                     __end_of_sprintf:
  1121                           	opt callstack 0
  1122                           
  1123 ;; *************** function _vfprintf *****************
  1124 ;; Defined at:
  1125 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1128 ;;		 -> sprintf@f(6), 
  1129 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1130 ;;		 -> STR_3(5), 
  1131 ;;  ap              2   83[COMRAM] PTR PTR void 
  1132 ;;		 -> sprintf@ap(2), 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1135 ;;		 -> STR_3(5), 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2   79[COMRAM] int 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1145 ;;      Params:         6       0       0       0       0       0       0       0       0
  1146 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1148 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1149 ;;Total ram usage:        8 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    6
  1152 ;; This function calls:
  1153 ;;		_vfpfcnvrt
  1154 ;; This function is called by:
  1155 ;;		_sprintf
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text2
  1160  00366C                     __ptext2:
  1161                           	opt callstack 0
  1162  00366C                     _vfprintf:
  1163                           	opt callstack 23
  1164  00366C                     
  1165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1166  00366C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1167  003670  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1168  003674                     
  1169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1170  003674  0E00               	movlw	0
  1171  003676  0100               	movlb	0	; () banked
  1172  003678  6FB9               	movwf	(_nout+1)& (0+255),b
  1173  00367A  0E00               	movlw	0
  1174  00367C  6FB8               	movwf	_nout& (0+255),b
  1175                           
  1176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1177  00367E  EF54  F01B         	goto	l4007
  1178  003682                     l4005:
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1182  003682  C050  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1183  003686  C051  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1184  00368A  0E56               	movlw	low vfprintf@cfmt
  1185  00368C  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1186  00368E  0E00               	movlw	high vfprintf@cfmt
  1187  003690  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1188  003692  C054  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1189  003696  C055  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1190  00369A  EC4C  F00C         	call	_vfpfcnvrt	;wreg free
  1191  00369E  503A               	movf	?_vfpfcnvrt^0,w,c
  1192  0036A0  0100               	movlb	0	; () banked
  1193  0036A2  27B8               	addwf	_nout& (0+255),f,b
  1194  0036A4  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1195  0036A6  23B9               	addwfc	(_nout+1)& (0+255),f,b
  1196  0036A8                     l4007:
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1200  0036A8  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1201  0036AC  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1202  0036B0                     	if	0	;tblptru may be non-zero
  1203  0036B0                     	endif
  1204  0036B0                     	if	0	;tblptru may be non-zero
  1205  0036B0                     	endif
  1206  0036B0  0008               	tblrd		*
  1207  0036B2  50F5               	movf	tablat,w,c
  1208  0036B4  0900               	iorlw	0
  1209  0036B6  A4D8               	btfss	status,2,c
  1210  0036B8  EF60  F01B         	goto	u5721
  1211  0036BC  EF62  F01B         	goto	u5720
  1212  0036C0                     u5721:
  1213  0036C0  EF41  F01B         	goto	l4005
  1214  0036C4                     u5720:
  1215  0036C4                     
  1216                           ; BSR set to: 0
  1217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1218  0036C4  C0B8  F050         	movff	_nout,?_vfprintf
  1219  0036C8  C0B9  F051         	movff	_nout+1,?_vfprintf+1
  1220  0036CC                     
  1221                           ; BSR set to: 0
  1222  0036CC  0012               	return		;funcret
  1223  0036CE                     __end_of_vfprintf:
  1224                           	opt callstack 0
  1225                           
  1226 ;; *************** function _vfpfcnvrt *****************
  1227 ;; Defined at:
  1228 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1231 ;;		 -> sprintf@f(6), 
  1232 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1233 ;;		 -> vfprintf@cfmt(2), 
  1234 ;;  ap              2   61[COMRAM] PTR PTR void 
  1235 ;;		 -> sprintf@ap(2), 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  llu             8    0        unsigned long long 
  1238 ;;  ll              8    0        long long 
  1239 ;;  f               4   71[COMRAM] long long 
  1240 ;;  ct              3   75[COMRAM] unsigned char [3]
  1241 ;;  vp              3    0        PTR void 
  1242 ;;  cp              3    0        PTR unsigned char 
  1243 ;;  i               2    0        int 
  1244 ;;  done            2    0        int 
  1245 ;;  c               1   78[COMRAM] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  2   57[COMRAM] int 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1255 ;;      Params:         6       0       0       0       0       0       0       0       0
  1256 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1257 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1258 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1259 ;;Total ram usage:       22 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    5
  1262 ;; This function calls:
  1263 ;;		_atoi
  1264 ;;		_efgtoa
  1265 ;;		_fputc
  1266 ;;		_isdigit
  1267 ;;		_isupper
  1268 ;;		_strncmp
  1269 ;;		_tolower
  1270 ;; This function is called by:
  1271 ;;		_vfprintf
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text3
  1276  001898                     __ptext3:
  1277                           	opt callstack 0
  1278  001898                     _vfpfcnvrt:
  1279                           	opt callstack 23
  1280  001898                     
  1281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1282  001898  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1283  00189C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1284  0018A0  CFDE FFF6          	movff	postinc2,tblptrl
  1285  0018A4  CFDD FFF7          	movff	postdec2,tblptrh
  1286  0018A8                     	if	0	;tblptru may be non-zero
  1287  0018A8                     	endif
  1288  0018A8                     	if	0	;tblptru may be non-zero
  1289  0018A8                     	endif
  1290  0018A8  0008               	tblrd		*
  1291  0018AA  50F5               	movf	tablat,w,c
  1292  0018AC  0A25               	xorlw	37
  1293  0018AE  A4D8               	btfss	status,2,c
  1294  0018B0  EF5C  F00C         	goto	u5581
  1295  0018B4  EF5E  F00C         	goto	u5580
  1296  0018B8                     u5581:
  1297  0018B8  EF60  F00E         	goto	l3981
  1298  0018BC                     u5580:
  1299  0018BC                     
  1300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1301  0018BC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1302  0018C0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1303  0018C4  2ADE               	incf	postinc2,f,c
  1304  0018C6  0E00               	movlw	0
  1305  0018C8  22DD               	addwfc	postdec2,f,c
  1306  0018CA                     
  1307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1308  0018CA  0E00               	movlw	0
  1309  0018CC  0100               	movlb	0	; () banked
  1310  0018CE  6FBB               	movwf	(_width+1)& (0+255),b
  1311  0018D0  0E00               	movlw	0
  1312  0018D2  6FBA               	movwf	_width& (0+255),b
  1313  0018D4  C0BA  F0BE         	movff	_width,_flags
  1314  0018D8  C0BB  F0BF         	movff	_width+1,_flags+1
  1315  0018DC                     
  1316                           ; BSR set to: 0
  1317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1318  0018DC  69BC               	setf	_prec& (0+255),b
  1319  0018DE  69BD               	setf	(_prec+1)& (0+255),b
  1320  0018E0                     
  1321                           ; BSR set to: 0
  1322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1323  0018E0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1324  0018E4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1325  0018E8  CFDE FFF6          	movff	postinc2,tblptrl
  1326  0018EC  CFDD FFF7          	movff	postdec2,tblptrh
  1327  0018F0                     	if	0	;tblptru may be non-zero
  1328  0018F0                     	endif
  1329  0018F0                     	if	0	;tblptru may be non-zero
  1330  0018F0                     	endif
  1331  0018F0  0008               	tblrd		*
  1332  0018F2  50F5               	movf	tablat,w,c
  1333  0018F4  0A2E               	xorlw	46
  1334  0018F6  A4D8               	btfss	status,2,c
  1335  0018F8  EF80  F00C         	goto	u5591
  1336  0018FC  EF82  F00C         	goto	u5590
  1337  001900                     u5591:
  1338  001900  EFFF  F00C         	goto	l3927
  1339  001904                     u5590:
  1340  001904                     
  1341                           ; BSR set to: 0
  1342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1343  001904  0E00               	movlw	0
  1344  001906  6FBD               	movwf	(_prec+1)& (0+255),b
  1345  001908  0E00               	movlw	0
  1346  00190A  6FBC               	movwf	_prec& (0+255),b
  1347  00190C                     
  1348                           ; BSR set to: 0
  1349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1350  00190C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1351  001910  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1352  001914  2ADE               	incf	postinc2,f,c
  1353  001916  0E00               	movlw	0
  1354  001918  22DD               	addwfc	postdec2,f,c
  1355  00191A                     
  1356                           ; BSR set to: 0
  1357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1358  00191A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1359  00191E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1360  001922  CFDE FFF6          	movff	postinc2,tblptrl
  1361  001926  CFDD FFF7          	movff	postdec2,tblptrh
  1362  00192A                     	if	0	;tblptru may be non-zero
  1363  00192A                     	endif
  1364  00192A                     	if	0	;tblptru may be non-zero
  1365  00192A                     	endif
  1366  00192A  0008               	tblrd		*
  1367  00192C  50F5               	movf	tablat,w,c
  1368  00192E  0A2A               	xorlw	42
  1369  001930  A4D8               	btfss	status,2,c
  1370  001932  EF9D  F00C         	goto	u5601
  1371  001936  EF9F  F00C         	goto	u5600
  1372  00193A                     u5601:
  1373  00193A  EFBC  F00C         	goto	l3917
  1374  00193E                     u5600:
  1375  00193E                     
  1376                           ; BSR set to: 0
  1377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1378  00193E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1379  001942  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1380  001946  2ADE               	incf	postinc2,f,c
  1381  001948  0E00               	movlw	0
  1382  00194A  22DD               	addwfc	postdec2,f,c
  1383                           
  1384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1385  00194C  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1386  001950  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1387  001954  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1388  001958  0E02               	movlw	2
  1389  00195A  26DE               	addwf	postinc2,f,c
  1390  00195C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1391  001960  0E00               	movlw	0
  1392  001962  22DD               	addwfc	postdec2,f,c
  1393  001964  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1394  001968  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1395  00196C  CFDE F0BC          	movff	postinc2,_prec
  1396  001970  CFDD F0BD          	movff	postdec2,_prec+1
  1397                           
  1398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1399  001974  EFFF  F00C         	goto	l3927
  1400  001978                     l3917:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1404  001978  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1405  00197C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1406  001980  CFDE F008          	movff	postinc2,atoi@s
  1407  001984  CFDD F009          	movff	postdec2,atoi@s+1
  1408  001988  EC41  F014         	call	_atoi	;wreg free
  1409  00198C  C008  F0BC         	movff	?_atoi,_prec
  1410  001990  C009  F0BD         	movff	?_atoi+1,_prec+1
  1411                           
  1412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1413  001994  EFD3  F00C         	goto	l3921
  1414  001998                     l3919:
  1415                           
  1416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1417  001998  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1418  00199C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1419  0019A0  2ADE               	incf	postinc2,f,c
  1420  0019A2  0E00               	movlw	0
  1421  0019A4  22DD               	addwfc	postdec2,f,c
  1422  0019A6                     l3921:
  1423  0019A6  0ED0               	movlw	208
  1424  0019A8  6E40               	movwf	??_vfpfcnvrt^0,c
  1425  0019AA  0EFF               	movlw	255
  1426  0019AC  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1427  0019AE  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1428  0019B2  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1429  0019B6  CFDE FFF6          	movff	postinc2,tblptrl
  1430  0019BA  CFDD FFF7          	movff	postdec2,tblptrh
  1431  0019BE                     	if	0	;tblptru may be non-zero
  1432  0019BE                     	endif
  1433  0019BE                     	if	0	;tblptru may be non-zero
  1434  0019BE                     	endif
  1435  0019BE  0008               	tblrd		*
  1436  0019C0  50F5               	movf	tablat,w,c
  1437  0019C2  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1438  0019C4  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1439  0019C6  5040               	movf	??_vfpfcnvrt^0,w,c
  1440  0019C8  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1441  0019CA  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1442  0019CC  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1443  0019CE  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1444  0019D0  E10A               	bnz	u5610
  1445  0019D2  0E0A               	movlw	10
  1446  0019D4  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1447  0019D6  A0D8               	btfss	status,0,c
  1448  0019D8  EFF0  F00C         	goto	u5611
  1449  0019DC  EFF3  F00C         	goto	u5610
  1450  0019E0                     u5611:
  1451  0019E0  0E01               	movlw	1
  1452  0019E2  EFF4  F00C         	goto	u5620
  1453  0019E6                     u5610:
  1454  0019E6  0E00               	movlw	0
  1455  0019E8                     u5620:
  1456  0019E8  6E44               	movwf	_vfpfcnvrt$613^0,c
  1457  0019EA  6A45               	clrf	(_vfpfcnvrt$613+1)^0,c
  1458  0019EC  5044               	movf	_vfpfcnvrt$613^0,w,c
  1459  0019EE  1045               	iorwf	(_vfpfcnvrt$613+1)^0,w,c
  1460  0019F0  A4D8               	btfss	status,2,c
  1461  0019F2  EFFD  F00C         	goto	u5631
  1462  0019F6  EFFF  F00C         	goto	u5630
  1463  0019FA                     u5631:
  1464  0019FA  EFCC  F00C         	goto	l3919
  1465  0019FE                     u5630:
  1466  0019FE                     l3927:
  1467                           
  1468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1469  0019FE  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1470  001A02  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1471  001A06  CFDE FFF6          	movff	postinc2,tblptrl
  1472  001A0A  CFDD FFF7          	movff	postdec2,tblptrh
  1473  001A0E                     	if	0	;tblptru may be non-zero
  1474  001A0E                     	endif
  1475  001A0E                     	if	0	;tblptru may be non-zero
  1476  001A0E                     	endif
  1477  001A0E  0008               	tblrd		*
  1478  001A10  50F5               	movf	tablat,w,c
  1479  001A12  6E07               	movwf	tolower@c^0,c
  1480  001A14  6A08               	clrf	(tolower@c+1)^0,c
  1481  001A16  EC67  F01B         	call	_tolower	;wreg free
  1482  001A1A  5007               	movf	?_tolower^0,w,c
  1483  001A1C  6E4C               	movwf	vfpfcnvrt@ct^0,c
  1484  001A1E                     
  1485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1486  001A1E  504C               	movf	vfpfcnvrt@ct^0,w,c
  1487  001A20  B4D8               	btfsc	status,2,c
  1488  001A22  EF15  F00D         	goto	u5641
  1489  001A26  EF17  F00D         	goto	u5640
  1490  001A2A                     u5641:
  1491  001A2A  EF4F  F00D         	goto	l3937
  1492  001A2E                     u5640:
  1493  001A2E                     
  1494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1495  001A2E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1496  001A32  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1497  001A36  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1498  001A3A  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1499  001A3E  0E01               	movlw	1
  1500  001A40  2640               	addwf	??_vfpfcnvrt^0,f,c
  1501  001A42  0E00               	movlw	0
  1502  001A44  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1503  001A46  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1504  001A4A  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1505  001A4E                     	if	0	;tblptru may be non-zero
  1506  001A4E                     	endif
  1507  001A4E                     	if	0	;tblptru may be non-zero
  1508  001A4E                     	endif
  1509  001A4E  0008               	tblrd		*
  1510  001A50  50F5               	movf	tablat,w,c
  1511  001A52  6E07               	movwf	tolower@c^0,c
  1512  001A54  6A08               	clrf	(tolower@c+1)^0,c
  1513  001A56  EC67  F01B         	call	_tolower	;wreg free
  1514  001A5A  5007               	movf	?_tolower^0,w,c
  1515  001A5C  6E4D               	movwf	(vfpfcnvrt@ct+1)^0,c
  1516  001A5E                     
  1517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1518  001A5E  504D               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1519  001A60  B4D8               	btfsc	status,2,c
  1520  001A62  EF35  F00D         	goto	u5651
  1521  001A66  EF37  F00D         	goto	u5650
  1522  001A6A                     u5651:
  1523  001A6A  EF4F  F00D         	goto	l3937
  1524  001A6E                     u5650:
  1525  001A6E                     
  1526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1527  001A6E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1528  001A72  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1529  001A76  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1530  001A7A  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1531  001A7E  0E02               	movlw	2
  1532  001A80  2640               	addwf	??_vfpfcnvrt^0,f,c
  1533  001A82  0E00               	movlw	0
  1534  001A84  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1535  001A86  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1536  001A8A  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1537  001A8E                     	if	0	;tblptru may be non-zero
  1538  001A8E                     	endif
  1539  001A8E                     	if	0	;tblptru may be non-zero
  1540  001A8E                     	endif
  1541  001A8E  0008               	tblrd		*
  1542  001A90  50F5               	movf	tablat,w,c
  1543  001A92  6E07               	movwf	tolower@c^0,c
  1544  001A94  6A08               	clrf	(tolower@c+1)^0,c
  1545  001A96  EC67  F01B         	call	_tolower	;wreg free
  1546  001A9A  5007               	movf	?_tolower^0,w,c
  1547  001A9C  6E4E               	movwf	(vfpfcnvrt@ct+2)^0,c
  1548  001A9E                     l3937:
  1549                           
  1550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  1551  001A9E  0E66               	movlw	102
  1552  001AA0  184C               	xorwf	vfpfcnvrt@ct^0,w,c
  1553  001AA2  A4D8               	btfss	status,2,c
  1554  001AA4  EF56  F00D         	goto	u5661
  1555  001AA8  EF58  F00D         	goto	u5660
  1556  001AAC                     u5661:
  1557  001AAC  EF98  F00D         	goto	l3949
  1558  001AB0                     u5660:
  1559  001AB0                     
  1560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  1561  001AB0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1562  001AB4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1563  001AB8  CFDE FFF6          	movff	postinc2,tblptrl
  1564  001ABC  CFDD FFF7          	movff	postdec2,tblptrh
  1565  001AC0                     	if	0	;tblptru may be non-zero
  1566  001AC0                     	endif
  1567  001AC0                     	if	0	;tblptru may be non-zero
  1568  001AC0                     	endif
  1569  001AC0  0008               	tblrd		*
  1570  001AC2  CFF5 F04F          	movff	tablat,vfpfcnvrt@c
  1571  001AC6                     
  1572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  1573  001AC6  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1574  001ACA  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1575  001ACE  2ADE               	incf	postinc2,f,c
  1576  001AD0  0E00               	movlw	0
  1577  001AD2  22DD               	addwfc	postdec2,f,c
  1578  001AD4                     
  1579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1580  001AD4  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1581  001AD8  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1582  001ADC  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1583  001AE0  0E04               	movlw	4
  1584  001AE2  26DE               	addwf	postinc2,f,c
  1585  001AE4  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1586  001AE8  0E00               	movlw	0
  1587  001AEA  22DD               	addwfc	postdec2,f,c
  1588  001AEC  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1589  001AF0  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1590  001AF4  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1591  001AF8  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1592  001AFC  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1593  001B00  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1594  001B04                     l3945:
  1595                           
  1596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  1597  001B04  C03A  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1598  001B08  C03B  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1599  001B0C  C048  F030         	movff	vfpfcnvrt@f,efgtoa@f
  1600  001B10  C049  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1601  001B14  C04A  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1602  001B18  C04B  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1603  001B1C  C04F  F034         	movff	vfpfcnvrt@c,efgtoa@c
  1604  001B20  EC14  F004         	call	_efgtoa	;wreg free
  1605  001B24  C02E  F03A         	movff	?_efgtoa,?_vfpfcnvrt
  1606  001B28  C02F  F03B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1607  001B2C  EF7B  F00E         	goto	l336
  1608  001B30                     l3949:
  1609                           
  1610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1611  001B30  0E4C               	movlw	low vfpfcnvrt@ct
  1612  001B32  6E01               	movwf	strncmp@_l^0,c
  1613  001B34  0E00               	movlw	high vfpfcnvrt@ct
  1614  001B36  6E02               	movwf	(strncmp@_l+1)^0,c
  1615  001B38  0E20               	movlw	low STR_12
  1616  001B3A  6E03               	movwf	strncmp@_r^0,c
  1617  001B3C  0E08               	movlw	high STR_12
  1618  001B3E  6E04               	movwf	(strncmp@_r+1)^0,c
  1619  001B40  0E00               	movlw	0
  1620  001B42  6E06               	movwf	(strncmp@n+1)^0,c
  1621  001B44  0E02               	movlw	2
  1622  001B46  6E05               	movwf	strncmp@n^0,c
  1623  001B48  ECB1  F018         	call	_strncmp	;wreg free
  1624  001B4C  5001               	movf	?_strncmp^0,w,c
  1625  001B4E  1002               	iorwf	(?_strncmp+1)^0,w,c
  1626  001B50  A4D8               	btfss	status,2,c
  1627  001B52  EFAD  F00D         	goto	u5671
  1628  001B56  EFAF  F00D         	goto	u5670
  1629  001B5A                     u5671:
  1630  001B5A  EF2A  F00E         	goto	l3965
  1631  001B5E                     u5670:
  1632  001B5E                     
  1633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1634  001B5E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1635  001B62  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1636  001B66  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1637  001B6A  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1638  001B6E  0E01               	movlw	1
  1639  001B70  2640               	addwf	??_vfpfcnvrt^0,f,c
  1640  001B72  0E00               	movlw	0
  1641  001B74  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1642  001B76  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1643  001B7A  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1644  001B7E                     	if	0	;tblptru may be non-zero
  1645  001B7E                     	endif
  1646  001B7E                     	if	0	;tblptru may be non-zero
  1647  001B7E                     	endif
  1648  001B7E  0008               	tblrd		*
  1649  001B80  CFF5 F04F          	movff	tablat,vfpfcnvrt@c
  1650  001B84  0EBF               	movlw	191
  1651  001B86  6E40               	movwf	??_vfpfcnvrt^0,c
  1652  001B88  0EFF               	movlw	255
  1653  001B8A  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1654  001B8C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1655  001B90  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1656  001B94  CFDE FFF6          	movff	postinc2,tblptrl
  1657  001B98  CFDD FFF7          	movff	postdec2,tblptrh
  1658  001B9C                     	if	0	;tblptru may be non-zero
  1659  001B9C                     	endif
  1660  001B9C                     	if	0	;tblptru may be non-zero
  1661  001B9C                     	endif
  1662  001B9C  0008               	tblrd		*
  1663  001B9E  50F5               	movf	tablat,w,c
  1664  001BA0  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1665  001BA2  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1666  001BA4  5040               	movf	??_vfpfcnvrt^0,w,c
  1667  001BA6  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1668  001BA8  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1669  001BAA  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1670  001BAC  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1671  001BAE  E10A               	bnz	u5680
  1672  001BB0  0E1A               	movlw	26
  1673  001BB2  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1674  001BB4  A0D8               	btfss	status,0,c
  1675  001BB6  EFDF  F00D         	goto	u5681
  1676  001BBA  EFE2  F00D         	goto	u5680
  1677  001BBE                     u5681:
  1678  001BBE  0E01               	movlw	1
  1679  001BC0  EFE3  F00D         	goto	u5690
  1680  001BC4                     u5680:
  1681  001BC4  0E00               	movlw	0
  1682  001BC6                     u5690:
  1683  001BC6  6E46               	movwf	_vfpfcnvrt$617^0,c
  1684  001BC8  6A47               	clrf	(_vfpfcnvrt$617+1)^0,c
  1685  001BCA  5046               	movf	_vfpfcnvrt$617^0,w,c
  1686  001BCC  1047               	iorwf	(_vfpfcnvrt$617+1)^0,w,c
  1687  001BCE  B4D8               	btfsc	status,2,c
  1688  001BD0  EFEC  F00D         	goto	u5701
  1689  001BD4  EFEE  F00D         	goto	u5700
  1690  001BD8                     u5701:
  1691  001BD8  EF08  F00E         	goto	l3959
  1692  001BDC                     u5700:
  1693  001BDC                     
  1694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1695  001BDC  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1696  001BE0  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1697  001BE4  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1698  001BE8  0E04               	movlw	4
  1699  001BEA  26DE               	addwf	postinc2,f,c
  1700  001BEC  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1701  001BF0  0E00               	movlw	0
  1702  001BF2  22DD               	addwfc	postdec2,f,c
  1703  001BF4  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1704  001BF8  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1705  001BFC  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1706  001C00  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1707  001C04  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1708  001C08  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1709                           
  1710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  1711  001C0C  EF20  F00E         	goto	l343
  1712  001C10                     l3959:
  1713                           
  1714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1715  001C10  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1716  001C14  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1717  001C18  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1718  001C1C  0E04               	movlw	4
  1719  001C1E  26DE               	addwf	postinc2,f,c
  1720  001C20  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1721  001C24  0E00               	movlw	0
  1722  001C26  22DD               	addwfc	postdec2,f,c
  1723  001C28  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1724  001C2C  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1725  001C30  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1726  001C34  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1727  001C38  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1728  001C3C  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1729  001C40                     l343:
  1730                           
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1732  001C40  0E02               	movlw	2
  1733  001C42  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1734  001C46  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1735  001C4A  26DE               	addwf	postinc2,f,c
  1736  001C4C  0E00               	movlw	0
  1737  001C4E  22DD               	addwfc	postdec2,f,c
  1738  001C50  EF82  F00D         	goto	l3945
  1739  001C54                     l3965:
  1740                           
  1741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1742  001C54  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1743  001C58  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1744  001C5C  CFDE FFF6          	movff	postinc2,tblptrl
  1745  001C60  CFDD FFF7          	movff	postdec2,tblptrh
  1746  001C64                     	if	0	;tblptru may be non-zero
  1747  001C64                     	endif
  1748  001C64                     	if	0	;tblptru may be non-zero
  1749  001C64                     	endif
  1750  001C64  0008               	tblrd		*
  1751  001C66  50F5               	movf	tablat,w,c
  1752  001C68  0A25               	xorlw	37
  1753  001C6A  A4D8               	btfss	status,2,c
  1754  001C6C  EF3A  F00E         	goto	u5711
  1755  001C70  EF3C  F00E         	goto	u5710
  1756  001C74                     u5711:
  1757  001C74  EF53  F00E         	goto	l3975
  1758  001C78                     u5710:
  1759  001C78                     
  1760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1761  001C78  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1762  001C7C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1763  001C80  2ADE               	incf	postinc2,f,c
  1764  001C82  0E00               	movlw	0
  1765  001C84  22DD               	addwfc	postdec2,f,c
  1766  001C86                     
  1767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1768  001C86  0E00               	movlw	0
  1769  001C88  6E02               	movwf	(fputc@c+1)^0,c
  1770  001C8A  0E25               	movlw	37
  1771  001C8C  6E01               	movwf	fputc@c^0,c
  1772  001C8E  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1773  001C92  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1774  001C96  EC1C  F019         	call	_fputc	;wreg free
  1775  001C9A                     l3971:
  1776                           
  1777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1778  001C9A  0E00               	movlw	0
  1779  001C9C  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1780  001C9E  0E01               	movlw	1
  1781  001CA0  6E3A               	movwf	?_vfpfcnvrt^0,c
  1782  001CA2  EF7B  F00E         	goto	l336
  1783  001CA6                     l3975:
  1784                           
  1785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1786  001CA6  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1787  001CAA  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1788  001CAE  2ADE               	incf	postinc2,f,c
  1789  001CB0  0E00               	movlw	0
  1790  001CB2  22DD               	addwfc	postdec2,f,c
  1791  001CB4                     
  1792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1793  001CB4  0E00               	movlw	0
  1794  001CB6  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1795  001CB8  0E00               	movlw	0
  1796  001CBA  6E3A               	movwf	?_vfpfcnvrt^0,c
  1797  001CBC  EF7B  F00E         	goto	l336
  1798  001CC0                     l3981:
  1799                           
  1800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1801  001CC0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1802  001CC4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1803  001CC8  CFDE FFF6          	movff	postinc2,tblptrl
  1804  001CCC  CFDD FFF7          	movff	postdec2,tblptrh
  1805  001CD0                     	if	0	;tblptru may be non-zero
  1806  001CD0                     	endif
  1807  001CD0                     	if	0	;tblptru may be non-zero
  1808  001CD0                     	endif
  1809  001CD0  0008               	tblrd		*
  1810  001CD2  50F5               	movf	tablat,w,c
  1811  001CD4  6E01               	movwf	fputc@c^0,c
  1812  001CD6  6A02               	clrf	(fputc@c+1)^0,c
  1813  001CD8  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1814  001CDC  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1815  001CE0  EC1C  F019         	call	_fputc	;wreg free
  1816  001CE4                     
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1818  001CE4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1819  001CE8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1820  001CEC  2ADE               	incf	postinc2,f,c
  1821  001CEE  0E00               	movlw	0
  1822  001CF0  22DD               	addwfc	postdec2,f,c
  1823  001CF2  EF4D  F00E         	goto	l3971
  1824  001CF6                     l336:
  1825  001CF6  0012               	return		;funcret
  1826  001CF8                     __end_of_vfpfcnvrt:
  1827                           	opt callstack 0
  1828                           
  1829 ;; *************** function _strncmp *****************
  1830 ;; Defined at:
  1831 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1834 ;;		 -> vfpfcnvrt@ct(3), 
  1835 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1836 ;;		 -> STR_14(3), 
  1837 ;;  n               2    4[COMRAM] unsigned int 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1840 ;;		 -> STR_14(3), 
  1841 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1842 ;;		 -> vfpfcnvrt@ct(3), 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2    0[COMRAM] int 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1852 ;;      Params:         6       0       0       0       0       0       0       0       0
  1853 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1854 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1855 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1856 ;;Total ram usage:       11 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_vfpfcnvrt
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text4
  1866  003162                     __ptext4:
  1867                           	opt callstack 0
  1868  003162                     _strncmp:
  1869                           	opt callstack 27
  1870  003162  C001  F008         	movff	strncmp@_l,strncmp@l
  1871  003166  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1872  00316A  C003  F00A         	movff	strncmp@_r,strncmp@r
  1873  00316E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1874  003172  0605               	decf	strncmp@n^0,f,c
  1875  003174  A0D8               	btfss	status,0,c
  1876  003176  0606               	decf	(strncmp@n+1)^0,f,c
  1877  003178  2805               	incf	strncmp@n^0,w,c
  1878  00317A  E106               	bnz	u5501
  1879  00317C  2806               	incf	(strncmp@n+1)^0,w,c
  1880  00317E  A4D8               	btfss	status,2,c
  1881  003180  EFC4  F018         	goto	u5501
  1882  003184  EFC6  F018         	goto	u5500
  1883  003188                     u5501:
  1884  003188  EFD3  F018         	goto	l3861
  1885  00318C                     u5500:
  1886  00318C  0E00               	movlw	0
  1887  00318E  6E02               	movwf	(?_strncmp+1)^0,c
  1888  003190  0E00               	movlw	0
  1889  003192  6E01               	movwf	?_strncmp^0,c
  1890  003194  EF1B  F019         	goto	l1145
  1891  003198                     l3859:
  1892  003198  4A08               	infsnz	strncmp@l^0,f,c
  1893  00319A  2A09               	incf	(strncmp@l+1)^0,f,c
  1894  00319C  4A0A               	infsnz	strncmp@r^0,f,c
  1895  00319E  2A0B               	incf	(strncmp@r+1)^0,f,c
  1896  0031A0  0605               	decf	strncmp@n^0,f,c
  1897  0031A2  A0D8               	btfss	status,0,c
  1898  0031A4  0606               	decf	(strncmp@n+1)^0,f,c
  1899  0031A6                     l3861:
  1900  0031A6  C008  FFD9         	movff	strncmp@l,fsr2l
  1901  0031AA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1902  0031AE  50DF               	movf	indf2,w,c
  1903  0031B0  B4D8               	btfsc	status,2,c
  1904  0031B2  EFDD  F018         	goto	u5511
  1905  0031B6  EFDF  F018         	goto	u5510
  1906  0031BA                     u5511:
  1907  0031BA  EF0A  F019         	goto	l3869
  1908  0031BE                     u5510:
  1909  0031BE  C00A  FFF6         	movff	strncmp@r,tblptrl
  1910  0031C2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1911  0031C6                     	if	0	;tblptru may be non-zero
  1912  0031C6                     	endif
  1913  0031C6                     	if	0	;tblptru may be non-zero
  1914  0031C6                     	endif
  1915  0031C6  0008               	tblrd		*
  1916  0031C8  50F5               	movf	tablat,w,c
  1917  0031CA  0900               	iorlw	0
  1918  0031CC  B4D8               	btfsc	status,2,c
  1919  0031CE  EFEB  F018         	goto	u5521
  1920  0031D2  EFED  F018         	goto	u5520
  1921  0031D6                     u5521:
  1922  0031D6  EF0A  F019         	goto	l3869
  1923  0031DA                     u5520:
  1924  0031DA  5005               	movf	strncmp@n^0,w,c
  1925  0031DC  1006               	iorwf	(strncmp@n+1)^0,w,c
  1926  0031DE  B4D8               	btfsc	status,2,c
  1927  0031E0  EFF4  F018         	goto	u5531
  1928  0031E4  EFF6  F018         	goto	u5530
  1929  0031E8                     u5531:
  1930  0031E8  EF0A  F019         	goto	l3869
  1931  0031EC                     u5530:
  1932  0031EC  C008  FFD9         	movff	strncmp@l,fsr2l
  1933  0031F0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1934  0031F4  50DF               	movf	indf2,w,c
  1935  0031F6  6E07               	movwf	??_strncmp^0,c
  1936  0031F8  C00A  FFF6         	movff	strncmp@r,tblptrl
  1937  0031FC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1938  003200                     	if	0	;tblptru may be non-zero
  1939  003200                     	endif
  1940  003200                     	if	0	;tblptru may be non-zero
  1941  003200                     	endif
  1942  003200  0008               	tblrd		*
  1943  003202  50F5               	movf	tablat,w,c
  1944  003204  1807               	xorwf	??_strncmp^0,w,c
  1945  003206  B4D8               	btfsc	status,2,c
  1946  003208  EF08  F019         	goto	u5541
  1947  00320C  EF0A  F019         	goto	u5540
  1948  003210                     u5541:
  1949  003210  EFCC  F018         	goto	l3859
  1950  003214                     u5540:
  1951  003214                     l3869:
  1952  003214  C008  FFD9         	movff	strncmp@l,fsr2l
  1953  003218  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1954  00321C  50DF               	movf	indf2,w,c
  1955  00321E  6E07               	movwf	??_strncmp^0,c
  1956  003220  C00A  FFF6         	movff	strncmp@r,tblptrl
  1957  003224  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1958  003228                     	if	0	;tblptru may be non-zero
  1959  003228                     	endif
  1960  003228                     	if	0	;tblptru may be non-zero
  1961  003228                     	endif
  1962  003228  0008               	tblrd		*
  1963  00322A  50F5               	movf	tablat,w,c
  1964  00322C  5C07               	subwf	??_strncmp^0,w,c
  1965  00322E  6E01               	movwf	?_strncmp^0,c
  1966  003230  6A02               	clrf	(?_strncmp+1)^0,c
  1967  003232  A0D8               	btfss	status,0,c
  1968  003234  0602               	decf	(?_strncmp+1)^0,f,c
  1969  003236                     l1145:
  1970  003236  0012               	return		;funcret
  1971  003238                     __end_of_strncmp:
  1972                           	opt callstack 0
  1973                           
  1974 ;; *************** function _efgtoa *****************
  1975 ;; Defined at:
  1976 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  1979 ;;		 -> sprintf@f(6), 
  1980 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  1981 ;;  c               1   51[COMRAM] unsigned char 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  u               4   52[BANK0 ] unsigned char 
  1984 ;;  g               4   44[BANK0 ] unsigned char 
  1985 ;;  l               4   38[BANK0 ] unsigned char 
  1986 ;;  h               4   34[BANK0 ] unsigned char 
  1987 ;;  ou              4    0[BANK0 ] unsigned char 
  1988 ;;  n               2   50[BANK0 ] int 
  1989 ;;  e               2   48[BANK0 ] int 
  1990 ;;  i               2   42[BANK0 ] int 
  1991 ;;  w               2   31[BANK0 ] int 
  1992 ;;  p               2   28[BANK0 ] int 
  1993 ;;  sign            2   26[BANK0 ] int 
  1994 ;;  d               2   24[BANK0 ] int 
  1995 ;;  ne              2   22[BANK0 ] int 
  1996 ;;  m               2   20[BANK0 ] int 
  1997 ;;  pp              2   18[BANK0 ] int 
  1998 ;;  t               2   16[BANK0 ] int 
  1999 ;;  mode            1   33[BANK0 ] unsigned char 
  2000 ;;  nmode           1   30[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  2   45[COMRAM] int 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2010 ;;      Params:         7       0       0       0       0       0       0       0       0
  2011 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2012 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2013 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2014 ;;Total ram usage:       68 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    4
  2017 ;; This function calls:
  2018 ;;		___awdiv
  2019 ;;		___awmod
  2020 ;;		___fladd
  2021 ;;		___fldiv
  2022 ;;		___fleq
  2023 ;;		___flge
  2024 ;;		___flmul
  2025 ;;		___flneg
  2026 ;;		___flsub
  2027 ;;		___fltol
  2028 ;;		___fpclassifyf
  2029 ;;		_floorf
  2030 ;;		_isupper
  2031 ;;		_pad
  2032 ;;		_strcpy
  2033 ;;		_tolower
  2034 ;; This function is called by:
  2035 ;;		_vfpfcnvrt
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text5
  2040  000828                     __ptext5:
  2041                           	opt callstack 0
  2042  000828                     _efgtoa:
  2043                           	opt callstack 23
  2044  000828                     
  2045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2046  000828  0E00               	movlw	0
  2047  00082A  0100               	movlb	0	; () banked
  2048  00082C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2049  00082E  0E00               	movlw	0
  2050  000830  6F7A               	movwf	efgtoa@sign& (0+255),b
  2051  000832                     
  2052                           ; BSR set to: 0
  2053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2054  000832  C030  F08C         	movff	efgtoa@f,efgtoa@g
  2055  000836  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2056  00083A  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2057  00083E  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2058  000842                     
  2059                           ; BSR set to: 0
  2060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2061  000842  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2062  000844  EF28  F004         	goto	u4910
  2063  000848  EF26  F004         	goto	u4911
  2064  00084C                     u4911:
  2065  00084C  EF3E  F004         	goto	l3523
  2066  000850                     u4910:
  2067  000850                     
  2068                           ; BSR set to: 0
  2069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2070  000850  0E00               	movlw	0
  2071  000852  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2072  000854  0E01               	movlw	1
  2073  000856  6F7A               	movwf	efgtoa@sign& (0+255),b
  2074  000858                     
  2075                           ; BSR set to: 0
  2076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2077  000858  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2078  00085C  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2079  000860  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2080  000864  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2081  000868  ECCD  F01C         	call	___flneg	;wreg free
  2082  00086C  C001  F08C         	movff	?___flneg,efgtoa@g
  2083  000870  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2084  000874  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2085  000878  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2086  00087C                     l3523:
  2087                           
  2088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2089  00087C  0E00               	movlw	0
  2090  00087E  0100               	movlb	0	; () banked
  2091  000880  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2092  000882  0E00               	movlw	0
  2093  000884  6F92               	movwf	efgtoa@n& (0+255),b
  2094  000886                     
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2097  000886  C0BA  F07F         	movff	_width,efgtoa@w
  2098  00088A  C0BB  F080         	movff	_width+1,efgtoa@w+1
  2099  00088E                     
  2100                           ; BSR set to: 0
  2101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2102  00088E  517A               	movf	efgtoa@sign& (0+255),w,b
  2103  000890  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2104  000892  A4D8               	btfss	status,2,c
  2105  000894  EF4E  F004         	goto	u4921
  2106  000898  EF50  F004         	goto	u4920
  2107  00089C                     u4921:
  2108  00089C  EF57  F004         	goto	l3531
  2109  0008A0                     u4920:
  2110  0008A0                     
  2111                           ; BSR set to: 0
  2112  0008A0  A5BE               	btfss	_flags& (0+255),2,b
  2113  0008A2  EF55  F004         	goto	u4931
  2114  0008A6  EF57  F004         	goto	u4930
  2115  0008AA                     u4931:
  2116  0008AA  EF71  F004         	goto	l3543
  2117  0008AE                     u4930:
  2118  0008AE                     l3531:
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2122  0008AE  517A               	movf	efgtoa@sign& (0+255),w,b
  2123  0008B0  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2124  0008B2  A4D8               	btfss	status,2,c
  2125  0008B4  EF5E  F004         	goto	u4941
  2126  0008B8  EF60  F004         	goto	u4940
  2127  0008BC                     u4941:
  2128  0008BC  EF66  F004         	goto	l3535
  2129  0008C0                     u4940:
  2130  0008C0                     
  2131                           ; BSR set to: 0
  2132  0008C0  0E00               	movlw	0
  2133  0008C2  6F65               	movwf	(_efgtoa$587+1)& (0+255),b
  2134  0008C4  0E2B               	movlw	43
  2135  0008C6  6F64               	movwf	_efgtoa$587& (0+255),b
  2136  0008C8  EF6A  F004         	goto	l3537
  2137  0008CC                     l3535:
  2138                           
  2139                           ; BSR set to: 0
  2140  0008CC  0E00               	movlw	0
  2141  0008CE  6F65               	movwf	(_efgtoa$587+1)& (0+255),b
  2142  0008D0  0E2D               	movlw	45
  2143  0008D2  6F64               	movwf	_efgtoa$587& (0+255),b
  2144  0008D4                     l3537:
  2145                           
  2146                           ; BSR set to: 0
  2147  0008D4  C064  F100         	movff	_efgtoa$587,_dbuf
  2148  0008D8                     
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2151  0008D8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2152  0008DA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2153  0008DC                     
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2156  0008DC  077F               	decf	efgtoa@w& (0+255),f,b
  2157  0008DE  A0D8               	btfss	status,0,c
  2158  0008E0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2159  0008E2                     l3543:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2163  0008E2  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2164  0008E6  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2165  0008EA  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2166  0008EE  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2167  0008F2  ECB3  F017         	call	___fpclassifyf	;wreg free
  2168  0008F6  0401               	decf	?___fpclassifyf^0,w,c
  2169  0008F8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2170  0008FA  A4D8               	btfss	status,2,c
  2171  0008FC  EF82  F004         	goto	u4951
  2172  000900  EF84  F004         	goto	u4950
  2173  000904                     u4951:
  2174  000904  EFDB  F004         	goto	l3561
  2175  000908                     u4950:
  2176  000908  0EBF               	movlw	191
  2177  00090A  6E35               	movwf	??_efgtoa^0,c
  2178  00090C  0EFF               	movlw	255
  2179  00090E  6E36               	movwf	(??_efgtoa+1)^0,c
  2180  000910  5034               	movf	efgtoa@c^0,w,c
  2181  000912  6E37               	movwf	(??_efgtoa+2)^0,c
  2182  000914  6A38               	clrf	(??_efgtoa+3)^0,c
  2183  000916  5035               	movf	??_efgtoa^0,w,c
  2184  000918  2637               	addwf	(??_efgtoa+2)^0,f,c
  2185  00091A  5036               	movf	(??_efgtoa+1)^0,w,c
  2186  00091C  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2187  00091E  5038               	movf	(??_efgtoa+3)^0,w,c
  2188  000920  E10A               	bnz	u4960
  2189  000922  0E1A               	movlw	26
  2190  000924  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2191  000926  A0D8               	btfss	status,0,c
  2192  000928  EF98  F004         	goto	u4961
  2193  00092C  EF9B  F004         	goto	u4960
  2194  000930                     u4961:
  2195  000930  0E01               	movlw	1
  2196  000932  EF9C  F004         	goto	u4970
  2197  000936                     u4960:
  2198  000936  0E00               	movlw	0
  2199  000938                     u4970:
  2200  000938  0100               	movlb	0	; () banked
  2201  00093A  6F66               	movwf	_efgtoa$588& (0+255),b
  2202  00093C  6B67               	clrf	(_efgtoa$588+1)& (0+255),b
  2203  00093E                     
  2204                           ; BSR set to: 0
  2205  00093E  5166               	movf	_efgtoa$588& (0+255),w,b
  2206  000940  1167               	iorwf	(_efgtoa$588+1)& (0+255),w,b
  2207  000942  B4D8               	btfsc	status,2,c
  2208  000944  EFA6  F004         	goto	u4981
  2209  000948  EFA8  F004         	goto	u4980
  2210  00094C                     u4981:
  2211  00094C  EFB6  F004         	goto	l3553
  2212  000950                     u4980:
  2213  000950                     
  2214                           ; BSR set to: 0
  2215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2216  000950  0E00               	movlw	low _dbuf
  2217  000952  2592               	addwf	efgtoa@n& (0+255),w,b
  2218  000954  6E01               	movwf	strcpy@dest^0,c
  2219  000956  0E01               	movlw	high _dbuf
  2220  000958  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2221  00095A  6E02               	movwf	(strcpy@dest+1)^0,c
  2222  00095C  0E10               	movlw	low STR_4
  2223  00095E  6E03               	movwf	strcpy@src^0,c
  2224  000960  0E08               	movlw	high STR_4
  2225  000962  6E04               	movwf	(strcpy@src+1)^0,c
  2226  000964  ECC6  F01B         	call	_strcpy	;wreg free
  2227                           
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2229  000968  EFC2  F004         	goto	l3555
  2230  00096C                     l3553:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2234  00096C  0E00               	movlw	low _dbuf
  2235  00096E  2592               	addwf	efgtoa@n& (0+255),w,b
  2236  000970  6E01               	movwf	strcpy@dest^0,c
  2237  000972  0E01               	movlw	high _dbuf
  2238  000974  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2239  000976  6E02               	movwf	(strcpy@dest+1)^0,c
  2240  000978  0E18               	movlw	low STR_5
  2241  00097A  6E03               	movwf	strcpy@src^0,c
  2242  00097C  0E08               	movlw	high STR_5
  2243  00097E  6E04               	movwf	(strcpy@src+1)^0,c
  2244  000980  ECC6  F01B         	call	_strcpy	;wreg free
  2245  000984                     l3555:
  2246                           
  2247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2248  000984  0100               	movlb	0	; () banked
  2249  000986  0EFD               	movlw	253
  2250  000988  277F               	addwf	efgtoa@w& (0+255),f,b
  2251  00098A  0EFF               	movlw	255
  2252  00098C  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2253  00098E                     l3557:
  2254                           
  2255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2256  00098E  C02E  F011         	movff	efgtoa@fp,pad@fp
  2257  000992  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2258  000996  0E00               	movlw	low _dbuf
  2259  000998  6E13               	movwf	pad@buf^0,c
  2260  00099A  0E01               	movlw	high _dbuf
  2261  00099C  6E14               	movwf	(pad@buf+1)^0,c
  2262  00099E  C07F  F015         	movff	efgtoa@w,pad@p
  2263  0009A2  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2264  0009A6  EC81  F019         	call	_pad	;wreg free
  2265  0009AA  C011  F02E         	movff	?_pad,?_efgtoa
  2266  0009AE  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2267  0009B2  EFEB  F009         	goto	l246
  2268  0009B6                     l3561:
  2269                           
  2270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2271  0009B6  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2272  0009BA  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2273  0009BE  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2274  0009C2  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2275  0009C6  ECB3  F017         	call	___fpclassifyf	;wreg free
  2276  0009CA  5001               	movf	?___fpclassifyf^0,w,c
  2277  0009CC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2278  0009CE  A4D8               	btfss	status,2,c
  2279  0009D0  EFEC  F004         	goto	u4991
  2280  0009D4  EFEE  F004         	goto	u4990
  2281  0009D8                     u4991:
  2282  0009D8  EF2E  F005         	goto	l3579
  2283  0009DC                     u4990:
  2284  0009DC  0EBF               	movlw	191
  2285  0009DE  6E35               	movwf	??_efgtoa^0,c
  2286  0009E0  0EFF               	movlw	255
  2287  0009E2  6E36               	movwf	(??_efgtoa+1)^0,c
  2288  0009E4  5034               	movf	efgtoa@c^0,w,c
  2289  0009E6  6E37               	movwf	(??_efgtoa+2)^0,c
  2290  0009E8  6A38               	clrf	(??_efgtoa+3)^0,c
  2291  0009EA  5035               	movf	??_efgtoa^0,w,c
  2292  0009EC  2637               	addwf	(??_efgtoa+2)^0,f,c
  2293  0009EE  5036               	movf	(??_efgtoa+1)^0,w,c
  2294  0009F0  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2295  0009F2  5038               	movf	(??_efgtoa+3)^0,w,c
  2296  0009F4  E10A               	bnz	u5000
  2297  0009F6  0E1A               	movlw	26
  2298  0009F8  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2299  0009FA  A0D8               	btfss	status,0,c
  2300  0009FC  EF02  F005         	goto	u5001
  2301  000A00  EF05  F005         	goto	u5000
  2302  000A04                     u5001:
  2303  000A04  0E01               	movlw	1
  2304  000A06  EF06  F005         	goto	u5010
  2305  000A0A                     u5000:
  2306  000A0A  0E00               	movlw	0
  2307  000A0C                     u5010:
  2308  000A0C  0100               	movlb	0	; () banked
  2309  000A0E  6F68               	movwf	_efgtoa$593& (0+255),b
  2310  000A10  6B69               	clrf	(_efgtoa$593+1)& (0+255),b
  2311  000A12                     
  2312                           ; BSR set to: 0
  2313  000A12  5168               	movf	_efgtoa$593& (0+255),w,b
  2314  000A14  1169               	iorwf	(_efgtoa$593+1)& (0+255),w,b
  2315  000A16  B4D8               	btfsc	status,2,c
  2316  000A18  EF10  F005         	goto	u5021
  2317  000A1C  EF12  F005         	goto	u5020
  2318  000A20                     u5021:
  2319  000A20  EF20  F005         	goto	l3571
  2320  000A24                     u5020:
  2321  000A24                     
  2322                           ; BSR set to: 0
  2323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2324  000A24  0E00               	movlw	low _dbuf
  2325  000A26  2592               	addwf	efgtoa@n& (0+255),w,b
  2326  000A28  6E01               	movwf	strcpy@dest^0,c
  2327  000A2A  0E01               	movlw	high _dbuf
  2328  000A2C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2329  000A2E  6E02               	movwf	(strcpy@dest+1)^0,c
  2330  000A30  0E14               	movlw	low STR_8
  2331  000A32  6E03               	movwf	strcpy@src^0,c
  2332  000A34  0E08               	movlw	high STR_8
  2333  000A36  6E04               	movwf	(strcpy@src+1)^0,c
  2334  000A38  ECC6  F01B         	call	_strcpy	;wreg free
  2335                           
  2336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2337  000A3C  EFC2  F004         	goto	l3555
  2338  000A40                     l3571:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2342  000A40  0E00               	movlw	low _dbuf
  2343  000A42  2592               	addwf	efgtoa@n& (0+255),w,b
  2344  000A44  6E01               	movwf	strcpy@dest^0,c
  2345  000A46  0E01               	movlw	high _dbuf
  2346  000A48  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2347  000A4A  6E02               	movwf	(strcpy@dest+1)^0,c
  2348  000A4C  0E1C               	movlw	low STR_9
  2349  000A4E  6E03               	movwf	strcpy@src^0,c
  2350  000A50  0E08               	movlw	high STR_9
  2351  000A52  6E04               	movwf	(strcpy@src+1)^0,c
  2352  000A54  ECC6  F01B         	call	_strcpy	;wreg free
  2353  000A58  EFC2  F004         	goto	l3555
  2354  000A5C                     l3579:
  2355                           
  2356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2357  000A5C  0E00               	movlw	0
  2358  000A5E  0100               	movlb	0	; () banked
  2359  000A60  6F94               	movwf	efgtoa@u& (0+255),b
  2360  000A62  0E00               	movlw	0
  2361  000A64  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2362  000A66  0E80               	movlw	128
  2363  000A68  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2364  000A6A  0E3F               	movlw	63
  2365  000A6C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2366                           
  2367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2368  000A6E  0E00               	movlw	0
  2369  000A70  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2370  000A72  0E00               	movlw	0
  2371  000A74  6F90               	movwf	efgtoa@e& (0+255),b
  2372  000A76                     
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2375  000A76  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2376  000A7A  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2377  000A7E  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2378  000A82  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2379  000A86  0E00               	movlw	0
  2380  000A88  6E05               	movwf	___fleq@ff2^0,c
  2381  000A8A  0E00               	movlw	0
  2382  000A8C  6E06               	movwf	(___fleq@ff2+1)^0,c
  2383  000A8E  0E00               	movlw	0
  2384  000A90  6E07               	movwf	(___fleq@ff2+2)^0,c
  2385  000A92  0E00               	movlw	0
  2386  000A94  6E08               	movwf	(___fleq@ff2+3)^0,c
  2387  000A96  EC9E  F01A         	call	___fleq	;wreg free
  2388  000A9A  B0D8               	btfsc	status,0,c
  2389  000A9C  EF52  F005         	goto	u5031
  2390  000AA0  EF54  F005         	goto	u5030
  2391  000AA4                     u5031:
  2392  000AA4  EFD7  F005         	goto	l3597
  2393  000AA8                     u5030:
  2394  000AA8  EF73  F005         	goto	l3589
  2395  000AAC                     l3585:
  2396                           
  2397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2398  000AAC  C094  F001         	movff	efgtoa@u,___flmul@b
  2399  000AB0  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2400  000AB4  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2401  000AB8  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2402  000ABC  0E00               	movlw	0
  2403  000ABE  6E05               	movwf	___flmul@a^0,c
  2404  000AC0  0E00               	movlw	0
  2405  000AC2  6E06               	movwf	(___flmul@a+1)^0,c
  2406  000AC4  0E20               	movlw	32
  2407  000AC6  6E07               	movwf	(___flmul@a+2)^0,c
  2408  000AC8  0E41               	movlw	65
  2409  000ACA  6E08               	movwf	(___flmul@a+3)^0,c
  2410  000ACC  EC7C  F00E         	call	___flmul	;wreg free
  2411  000AD0  C001  F094         	movff	?___flmul,efgtoa@u
  2412  000AD4  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2413  000AD8  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2414  000ADC  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2415  000AE0                     
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2417  000AE0  0100               	movlb	0	; () banked
  2418  000AE2  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2419  000AE4  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2420  000AE6                     l3589:
  2421                           
  2422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2423  000AE6  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2424  000AEA  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2425  000AEE  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2426  000AF2  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2427  000AF6  0E00               	movlw	0
  2428  000AF8  6E05               	movwf	___flmul@a^0,c
  2429  000AFA  0E00               	movlw	0
  2430  000AFC  6E06               	movwf	(___flmul@a+1)^0,c
  2431  000AFE  0E20               	movlw	32
  2432  000B00  6E07               	movwf	(___flmul@a+2)^0,c
  2433  000B02  0E41               	movlw	65
  2434  000B04  6E08               	movwf	(___flmul@a+3)^0,c
  2435  000B06  C094  F001         	movff	efgtoa@u,___flmul@b
  2436  000B0A  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2437  000B0E  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2438  000B12  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2439  000B16  EC7C  F00E         	call	___flmul	;wreg free
  2440  000B1A  C001  F01E         	movff	?___flmul,___flge@ff2
  2441  000B1E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2442  000B22  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2443  000B26  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2444  000B2A  EC31  F017         	call	___flge	;wreg free
  2445  000B2E  B0D8               	btfsc	status,0,c
  2446  000B30  EF9C  F005         	goto	u5041
  2447  000B34  EF9E  F005         	goto	u5040
  2448  000B38                     u5041:
  2449  000B38  EF56  F005         	goto	l3585
  2450  000B3C                     u5040:
  2451  000B3C  EFBE  F005         	goto	l3595
  2452  000B40                     l3591:
  2453                           
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2455  000B40  C094  F001         	movff	efgtoa@u,___fldiv@b
  2456  000B44  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2457  000B48  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2458  000B4C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2459  000B50  0E00               	movlw	0
  2460  000B52  6E05               	movwf	___fldiv@a^0,c
  2461  000B54  0E00               	movlw	0
  2462  000B56  6E06               	movwf	(___fldiv@a+1)^0,c
  2463  000B58  0E20               	movlw	32
  2464  000B5A  6E07               	movwf	(___fldiv@a+2)^0,c
  2465  000B5C  0E41               	movlw	65
  2466  000B5E  6E08               	movwf	(___fldiv@a+3)^0,c
  2467  000B60  EC91  F010         	call	___fldiv	;wreg free
  2468  000B64  C001  F094         	movff	?___fldiv,efgtoa@u
  2469  000B68  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2470  000B6C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2471  000B70  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2472  000B74                     
  2473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2474  000B74  0100               	movlb	0	; () banked
  2475  000B76  0790               	decf	efgtoa@e& (0+255),f,b
  2476  000B78  A0D8               	btfss	status,0,c
  2477  000B7A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2478  000B7C                     l3595:
  2479                           
  2480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2481  000B7C  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2482  000B80  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2483  000B84  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2484  000B88  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2485  000B8C  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2486  000B90  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2487  000B94  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2488  000B98  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2489  000B9C  EC31  F017         	call	___flge	;wreg free
  2490  000BA0  A0D8               	btfss	status,0,c
  2491  000BA2  EFD5  F005         	goto	u5051
  2492  000BA6  EFD7  F005         	goto	u5050
  2493  000BAA                     u5051:
  2494  000BAA  EFA0  F005         	goto	l3591
  2495  000BAE                     u5050:
  2496  000BAE                     l3597:
  2497                           
  2498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2499  000BAE  C034  F007         	movff	efgtoa@c,tolower@c
  2500  000BB2  6A08               	clrf	(tolower@c+1)^0,c
  2501  000BB4  EC67  F01B         	call	_tolower	;wreg free
  2502  000BB8  5007               	movf	?_tolower^0,w,c
  2503  000BBA  0100               	movlb	0	; () banked
  2504  000BBC  6F81               	movwf	efgtoa@mode& (0+255),b
  2505  000BBE                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2508  000BBE  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2509  000BC2                     
  2510                           ; BSR set to: 0
  2511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2512  000BC2  0E67               	movlw	103
  2513  000BC4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2514  000BC6  A4D8               	btfss	status,2,c
  2515  000BC8  EFE8  F005         	goto	u5061
  2516  000BCC  EFEA  F005         	goto	u5060
  2517  000BD0                     u5061:
  2518  000BD0  EF10  F006         	goto	l3611
  2519  000BD4                     u5060:
  2520  000BD4                     
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2523  000BD4  51BC               	movf	_prec& (0+255),w,b
  2524  000BD6  11BD               	iorwf	(_prec+1)& (0+255),w,b
  2525  000BD8  A4D8               	btfss	status,2,c
  2526  000BDA  EFF1  F005         	goto	u5071
  2527  000BDE  EFF3  F005         	goto	u5070
  2528  000BE2                     u5071:
  2529  000BE2  EFF7  F005         	goto	l3607
  2530  000BE6                     u5070:
  2531  000BE6                     
  2532                           ; BSR set to: 0
  2533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2534  000BE6  0E00               	movlw	0
  2535  000BE8  6FBD               	movwf	(_prec+1)& (0+255),b
  2536  000BEA  0E01               	movlw	1
  2537  000BEC  6FBC               	movwf	_prec& (0+255),b
  2538  000BEE                     l3607:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2542  000BEE  BFBD               	btfsc	(_prec+1)& (0+255),7,b
  2543  000BF0  EF04  F006         	goto	u5080
  2544  000BF4  51BD               	movf	(_prec+1)& (0+255),w,b
  2545  000BF6  E106               	bnz	u5081
  2546  000BF8  05BC               	decf	_prec& (0+255),w,b
  2547  000BFA  B0D8               	btfsc	status,0,c
  2548  000BFC  EF02  F006         	goto	u5081
  2549  000C00  EF04  F006         	goto	u5080
  2550  000C04                     u5081:
  2551  000C04  EF0A  F006         	goto	l264
  2552  000C08                     u5080:
  2553  000C08                     l3609:
  2554                           
  2555                           ; BSR set to: 0
  2556  000C08  0E00               	movlw	0
  2557  000C0A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2558  000C0C  0E06               	movlw	6
  2559  000C0E  6F7C               	movwf	efgtoa@p& (0+255),b
  2560  000C10  EF19  F006         	goto	l3617
  2561  000C14                     l264:
  2562                           
  2563                           ; BSR set to: 0
  2564  000C14  C0BC  F07C         	movff	_prec,efgtoa@p
  2565  000C18  C0BD  F07D         	movff	_prec+1,efgtoa@p+1
  2566  000C1C  EF19  F006         	goto	l3617
  2567  000C20                     l3611:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2571  000C20  BFBD               	btfsc	(_prec+1)& (0+255),7,b
  2572  000C22  EF15  F006         	goto	u5091
  2573  000C26  EF17  F006         	goto	u5090
  2574  000C2A                     u5091:
  2575  000C2A  EF04  F006         	goto	l3609
  2576  000C2E                     u5090:
  2577  000C2E  EF0A  F006         	goto	l264
  2578  000C32                     l3617:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2582  000C32  0E67               	movlw	103
  2583  000C34  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2584  000C36  A4D8               	btfss	status,2,c
  2585  000C38  EF20  F006         	goto	u5101
  2586  000C3C  EF22  F006         	goto	u5100
  2587  000C40                     u5101:
  2588  000C40  EF51  F006         	goto	l3627
  2589  000C44                     u5100:
  2590  000C44                     
  2591                           ; BSR set to: 0
  2592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2593  000C44  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2594  000C46  EF30  F006         	goto	u5110
  2595  000C4A  0EFC               	movlw	252
  2596  000C4C  5D90               	subwf	efgtoa@e& (0+255),w,b
  2597  000C4E  0EFF               	movlw	255
  2598  000C50  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2599  000C52  A0D8               	btfss	status,0,c
  2600  000C54  EF2E  F006         	goto	u5111
  2601  000C58  EF30  F006         	goto	u5110
  2602  000C5C                     u5111:
  2603  000C5C  EF4F  F006         	goto	l3625
  2604  000C60                     u5110:
  2605  000C60                     
  2606                           ; BSR set to: 0
  2607  000C60  0EFF               	movlw	255
  2608  000C62  6E35               	movwf	??_efgtoa^0,c
  2609  000C64  0EFF               	movlw	255
  2610  000C66  6E36               	movwf	(??_efgtoa+1)^0,c
  2611  000C68  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  2612  000C6C  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  2613  000C70  5035               	movf	??_efgtoa^0,w,c
  2614  000C72  2637               	addwf	(??_efgtoa+2)^0,f,c
  2615  000C74  5036               	movf	(??_efgtoa+1)^0,w,c
  2616  000C76  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2617  000C78  5190               	movf	efgtoa@e& (0+255),w,b
  2618  000C7A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2619  000C7C  5038               	movf	(??_efgtoa+3)^0,w,c
  2620  000C7E  0A80               	xorlw	128
  2621  000C80  6E39               	movwf	(??_efgtoa+4)^0,c
  2622  000C82  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2623  000C84  0A80               	xorlw	128
  2624  000C86  5839               	subwfb	(??_efgtoa+4)^0,w,c
  2625  000C88  A0D8               	btfss	status,0,c
  2626  000C8A  EF49  F006         	goto	u5121
  2627  000C8E  EF4B  F006         	goto	u5120
  2628  000C92                     u5121:
  2629  000C92  EF4F  F006         	goto	l3625
  2630  000C96                     u5120:
  2631  000C96                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2634  000C96  0E66               	movlw	102
  2635  000C98  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2636                           
  2637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  2638  000C9A  EF51  F006         	goto	l3627
  2639  000C9E                     l3625:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2643  000C9E  0E65               	movlw	101
  2644  000CA0  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2645  000CA2                     l3627:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2649  000CA2  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2650  000CA6  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2651  000CAA                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2654  000CAA  0E67               	movlw	103
  2655  000CAC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2656  000CAE  A4D8               	btfss	status,2,c
  2657  000CB0  EF5C  F006         	goto	u5131
  2658  000CB4  EF5E  F006         	goto	u5130
  2659  000CB8                     u5131:
  2660  000CB8  EF6E  F006         	goto	l3635
  2661  000CBC                     u5130:
  2662  000CBC                     
  2663                           ; BSR set to: 0
  2664  000CBC  0E66               	movlw	102
  2665  000CBE  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2666  000CC0  A4D8               	btfss	status,2,c
  2667  000CC2  EF65  F006         	goto	u5141
  2668  000CC6  EF67  F006         	goto	u5140
  2669  000CCA                     u5141:
  2670  000CCA  EF70  F006         	goto	l3637
  2671  000CCE                     u5140:
  2672  000CCE                     
  2673                           ; BSR set to: 0
  2674  000CCE  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2675  000CD0  EF6E  F006         	goto	u5150
  2676  000CD4  EF6C  F006         	goto	u5151
  2677  000CD8                     u5151:
  2678  000CD8  EF70  F006         	goto	l3637
  2679  000CDC                     u5150:
  2680  000CDC                     l3635:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  2684  000CDC  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2685  000CDE  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2686  000CE0                     l3637:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  2690  000CE0  0E66               	movlw	102
  2691  000CE2  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2692  000CE4  A4D8               	btfss	status,2,c
  2693  000CE6  EF77  F006         	goto	u5161
  2694  000CEA  EF79  F006         	goto	u5160
  2695  000CEE                     u5161:
  2696  000CEE  EF99  F006         	goto	l3647
  2697  000CF2                     u5160:
  2698  000CF2                     
  2699                           ; BSR set to: 0
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  2701  000CF2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2702  000CF4  EF80  F006         	goto	u5170
  2703  000CF8  EF7E  F006         	goto	u5171
  2704  000CFC                     u5171:
  2705  000CFC  EF8C  F006         	goto	l3643
  2706  000D00                     u5170:
  2707  000D00                     
  2708                           ; BSR set to: 0
  2709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  2710  000D00  0E00               	movlw	0
  2711  000D02  6F94               	movwf	efgtoa@u& (0+255),b
  2712  000D04  0E00               	movlw	0
  2713  000D06  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2714  000D08  0E80               	movlw	128
  2715  000D0A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2716  000D0C  0E3F               	movlw	63
  2717  000D0E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2718                           
  2719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  2720  000D10  0E00               	movlw	0
  2721  000D12  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2722  000D14  0E00               	movlw	0
  2723  000D16  6F90               	movwf	efgtoa@e& (0+255),b
  2724  000D18                     l3643:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  2728  000D18  0E67               	movlw	103
  2729  000D1A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2730  000D1C  B4D8               	btfsc	status,2,c
  2731  000D1E  EF93  F006         	goto	u5181
  2732  000D22  EF95  F006         	goto	u5180
  2733  000D26                     u5181:
  2734  000D26  EF99  F006         	goto	l3647
  2735  000D2A                     u5180:
  2736  000D2A                     
  2737                           ; BSR set to: 0
  2738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  2739  000D2A  5190               	movf	efgtoa@e& (0+255),w,b
  2740  000D2C  2774               	addwf	efgtoa@m& (0+255),f,b
  2741  000D2E  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2742  000D30  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2743  000D32                     l3647:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  2747  000D32  0E00               	movlw	0
  2748  000D34  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2749  000D36  0E00               	movlw	0
  2750  000D38  6F8A               	movwf	efgtoa@i& (0+255),b
  2751  000D3A                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  2754  000D3A  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2755  000D3E  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2756  000D42  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2757  000D46  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2758  000D4A                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  2761  000D4A  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2762  000D4E  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2763  000D52  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2764  000D56  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2765                           
  2766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2767  000D5A  EF2A  F007         	goto	l3661
  2768  000D5E                     l3653:
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  2772  000D5E  C082  F001         	movff	efgtoa@h,___fldiv@b
  2773  000D62  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2774  000D66  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2775  000D6A  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2776  000D6E  C094  F005         	movff	efgtoa@u,___fldiv@a
  2777  000D72  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2778  000D76  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2779  000D7A  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2780  000D7E  EC91  F010         	call	___fldiv	;wreg free
  2781  000D82  C001  F01A         	movff	?___fldiv,floorf@x
  2782  000D86  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2783  000D8A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2784  000D8E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2785  000D92  EC5E  F012         	call	_floorf	;wreg free
  2786  000D96  C01A  F086         	movff	?_floorf,efgtoa@l
  2787  000D9A  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2788  000D9E  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2789  000DA2  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2790                           
  2791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  2792  000DA6  C086  F001         	movff	efgtoa@l,___fltol@f1
  2793  000DAA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2794  000DAE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2795  000DB2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2796  000DB6  ECAE  F016         	call	___fltol	;wreg free
  2797  000DBA  C001  F078         	movff	?___fltol,efgtoa@d
  2798  000DBE  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2799  000DC2                     
  2800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  2801  000DC2  C082  F01A         	movff	efgtoa@h,___flsub@b
  2802  000DC6  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2803  000DCA  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2804  000DCE  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2805  000DD2  C094  F005         	movff	efgtoa@u,___flmul@a
  2806  000DD6  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  2807  000DDA  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  2808  000DDE  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  2809  000DE2  C086  F001         	movff	efgtoa@l,___flmul@b
  2810  000DE6  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  2811  000DEA  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  2812  000DEE  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  2813  000DF2  EC7C  F00E         	call	___flmul	;wreg free
  2814  000DF6  C001  F01E         	movff	?___flmul,___flsub@a
  2815  000DFA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2816  000DFE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2817  000E02  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2818  000E06  EC6C  F01C         	call	___flsub	;wreg free
  2819  000E0A  C01A  F082         	movff	?___flsub,efgtoa@h
  2820  000E0E  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  2821  000E12  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  2822  000E16  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  2823  000E1A                     
  2824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  2825  000E1A  C094  F001         	movff	efgtoa@u,___fldiv@b
  2826  000E1E  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2827  000E22  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2828  000E26  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2829  000E2A  0E00               	movlw	0
  2830  000E2C  6E05               	movwf	___fldiv@a^0,c
  2831  000E2E  0E00               	movlw	0
  2832  000E30  6E06               	movwf	(___fldiv@a+1)^0,c
  2833  000E32  0E20               	movlw	32
  2834  000E34  6E07               	movwf	(___fldiv@a+2)^0,c
  2835  000E36  0E41               	movlw	65
  2836  000E38  6E08               	movwf	(___fldiv@a+3)^0,c
  2837  000E3A  EC91  F010         	call	___fldiv	;wreg free
  2838  000E3E  C001  F094         	movff	?___fldiv,efgtoa@u
  2839  000E42  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2840  000E46  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2841  000E4A  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2842  000E4E                     
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  2844  000E4E  0100               	movlb	0	; () banked
  2845  000E50  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2846  000E52  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2847  000E54                     l3661:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2851  000E54  5174               	movf	efgtoa@m& (0+255),w,b
  2852  000E56  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2853  000E58  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2854  000E5A  0A80               	xorlw	128
  2855  000E5C  6E35               	movwf	??_efgtoa^0,c
  2856  000E5E  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  2857  000E60  0A80               	xorlw	128
  2858  000E62  5835               	subwfb	??_efgtoa^0,w,c
  2859  000E64  A0D8               	btfss	status,0,c
  2860  000E66  EF37  F007         	goto	u5191
  2861  000E6A  EF39  F007         	goto	u5190
  2862  000E6E                     u5191:
  2863  000E6E  EFAF  F006         	goto	l3653
  2864  000E72                     u5190:
  2865  000E72                     
  2866                           ; BSR set to: 0
  2867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  2868  000E72  C094  F001         	movff	efgtoa@u,___flmul@b
  2869  000E76  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2870  000E7A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2871  000E7E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2872  000E82  0E00               	movlw	0
  2873  000E84  6E05               	movwf	___flmul@a^0,c
  2874  000E86  0E00               	movlw	0
  2875  000E88  6E06               	movwf	(___flmul@a+1)^0,c
  2876  000E8A  0EA0               	movlw	160
  2877  000E8C  6E07               	movwf	(___flmul@a+2)^0,c
  2878  000E8E  0E40               	movlw	64
  2879  000E90  6E08               	movwf	(___flmul@a+3)^0,c
  2880  000E92  EC7C  F00E         	call	___flmul	;wreg free
  2881  000E96  C001  F086         	movff	?___flmul,efgtoa@l
  2882  000E9A  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  2883  000E9E  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  2884  000EA2  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  2885  000EA6                     
  2886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  2887  000EA6  C082  F01A         	movff	efgtoa@h,___flge@ff1
  2888  000EAA  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2889  000EAE  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2890  000EB2  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2891  000EB6  C086  F01E         	movff	efgtoa@l,___flge@ff2
  2892  000EBA  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2893  000EBE  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2894  000EC2  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2895  000EC6  EC31  F017         	call	___flge	;wreg free
  2896  000ECA  B0D8               	btfsc	status,0,c
  2897  000ECC  EF6A  F007         	goto	u5201
  2898  000ED0  EF6C  F007         	goto	u5200
  2899  000ED4                     u5201:
  2900  000ED4  EF77  F007         	goto	l3669
  2901  000ED8                     u5200:
  2902  000ED8                     
  2903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  2904  000ED8  0E00               	movlw	0
  2905  000EDA  0100               	movlb	0	; () banked
  2906  000EDC  6F86               	movwf	efgtoa@l& (0+255),b
  2907  000EDE  0E00               	movlw	0
  2908  000EE0  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2909  000EE2  0E00               	movlw	0
  2910  000EE4  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2911  000EE6  0E00               	movlw	0
  2912  000EE8  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2913                           
  2914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  2915  000EEA  EFA0  F007         	goto	l3675
  2916  000EEE                     l3669:
  2917                           
  2918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  2919  000EEE  C082  F001         	movff	efgtoa@h,___fleq@ff1
  2920  000EF2  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2921  000EF6  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2922  000EFA  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2923  000EFE  C086  F005         	movff	efgtoa@l,___fleq@ff2
  2924  000F02  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2925  000F06  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2926  000F0A  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2927  000F0E  EC9E  F01A         	call	___fleq	;wreg free
  2928  000F12  A0D8               	btfss	status,0,c
  2929  000F14  EF8E  F007         	goto	u5211
  2930  000F18  EF90  F007         	goto	u5210
  2931  000F1C                     u5211:
  2932  000F1C  EFA0  F007         	goto	l3675
  2933  000F20                     u5210:
  2934  000F20  0100               	movlb	0	; () banked
  2935  000F22  B178               	btfsc	efgtoa@d& (0+255),0,b
  2936  000F24  EF96  F007         	goto	u5221
  2937  000F28  EF98  F007         	goto	u5220
  2938  000F2C                     u5221:
  2939  000F2C  EFA0  F007         	goto	l3675
  2940  000F30                     u5220:
  2941  000F30                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  2944  000F30  0E00               	movlw	0
  2945  000F32  6F86               	movwf	efgtoa@l& (0+255),b
  2946  000F34  0E00               	movlw	0
  2947  000F36  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2948  000F38  0E00               	movlw	0
  2949  000F3A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2950  000F3C  0E00               	movlw	0
  2951  000F3E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2952  000F40                     l3675:
  2953                           
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  2955  000F40  C08C  F001         	movff	efgtoa@g,___fladd@b
  2956  000F44  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  2957  000F48  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  2958  000F4C  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  2959  000F50  C086  F005         	movff	efgtoa@l,___fladd@a
  2960  000F54  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  2961  000F58  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  2962  000F5C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  2963  000F60  ECEC  F009         	call	___fladd	;wreg free
  2964  000F64  C001  F082         	movff	?___fladd,efgtoa@h
  2965  000F68  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  2966  000F6C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  2967  000F70  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  2968  000F74                     
  2969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  2970  000F74  C060  F094         	movff	efgtoa@ou,efgtoa@u
  2971  000F78  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  2972  000F7C  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  2973  000F80  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  2974  000F84                     
  2975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  2976  000F84  0E65               	movlw	101
  2977  000F86  0100               	movlb	0	; () banked
  2978  000F88  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2979  000F8A  B4D8               	btfsc	status,2,c
  2980  000F8C  EFCA  F007         	goto	u5231
  2981  000F90  EFCC  F007         	goto	u5230
  2982  000F94                     u5231:
  2983  000F94  EFD2  F007         	goto	l3683
  2984  000F98                     u5230:
  2985  000F98                     
  2986                           ; BSR set to: 0
  2987  000F98  C090  F076         	movff	efgtoa@e,efgtoa@ne
  2988  000F9C  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  2989  000FA0  EFD6  F007         	goto	l290
  2990  000FA4                     l3683:
  2991                           
  2992                           ; BSR set to: 0
  2993  000FA4  0E00               	movlw	0
  2994  000FA6  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  2995  000FA8  0E00               	movlw	0
  2996  000FAA  6F76               	movwf	efgtoa@ne& (0+255),b
  2997  000FAC                     l290:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3001  000FAC  0E00               	movlw	0
  3002  000FAE  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3003  000FB0  0E00               	movlw	0
  3004  000FB2  6F72               	movwf	efgtoa@pp& (0+255),b
  3005                           
  3006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3007  000FB4  0E00               	movlw	0
  3008  000FB6  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3009  000FB8  0E00               	movlw	0
  3010  000FBA  6F70               	movwf	efgtoa@t& (0+255),b
  3011                           
  3012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3013  000FBC  0E00               	movlw	0
  3014  000FBE  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3015  000FC0  0E00               	movlw	0
  3016  000FC2  6F8A               	movwf	efgtoa@i& (0+255),b
  3017                           
  3018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3019  000FC4  EFD1  F008         	goto	l3733
  3020  000FC8                     l3685:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3024  000FC8  C082  F001         	movff	efgtoa@h,___fldiv@b
  3025  000FCC  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3026  000FD0  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3027  000FD4  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3028  000FD8  C094  F005         	movff	efgtoa@u,___fldiv@a
  3029  000FDC  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3030  000FE0  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3031  000FE4  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3032  000FE8  EC91  F010         	call	___fldiv	;wreg free
  3033  000FEC  C001  F01A         	movff	?___fldiv,floorf@x
  3034  000FF0  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3035  000FF4  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3036  000FF8  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3037  000FFC  EC5E  F012         	call	_floorf	;wreg free
  3038  001000  C01A  F086         	movff	?_floorf,efgtoa@l
  3039  001004  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3040  001008  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3041  00100C  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3042                           
  3043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3044  001010  C086  F001         	movff	efgtoa@l,___fltol@f1
  3045  001014  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3046  001018  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3047  00101C  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3048  001020  ECAE  F016         	call	___fltol	;wreg free
  3049  001024  C001  F078         	movff	?___fltol,efgtoa@d
  3050  001028  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3051  00102C                     
  3052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3053  00102C  0100               	movlb	0	; () banked
  3054  00102E  B9BE               	btfsc	_flags& (0+255),4,b
  3055  001030  EF1C  F008         	goto	u5241
  3056  001034  EF1E  F008         	goto	u5240
  3057  001038                     u5241:
  3058  001038  EF3B  F008         	goto	l3697
  3059  00103C                     u5240:
  3060  00103C                     
  3061                           ; BSR set to: 0
  3062  00103C  5178               	movf	efgtoa@d& (0+255),w,b
  3063  00103E  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3064  001040  A4D8               	btfss	status,2,c
  3065  001042  EF25  F008         	goto	u5251
  3066  001046  EF27  F008         	goto	u5250
  3067  00104A                     u5251:
  3068  00104A  EF3B  F008         	goto	l3697
  3069  00104E                     u5250:
  3070  00104E                     
  3071                           ; BSR set to: 0
  3072  00104E  0E67               	movlw	103
  3073  001050  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3074  001052  A4D8               	btfss	status,2,c
  3075  001054  EF2E  F008         	goto	u5261
  3076  001058  EF30  F008         	goto	u5260
  3077  00105C                     u5261:
  3078  00105C  EF3B  F008         	goto	l3697
  3079  001060                     u5260:
  3080  001060                     
  3081                           ; BSR set to: 0
  3082  001060  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3083  001062  EF37  F008         	goto	u5270
  3084  001066  EF35  F008         	goto	u5271
  3085  00106A                     u5271:
  3086  00106A  EF3B  F008         	goto	l3697
  3087  00106E                     u5270:
  3088  00106E                     
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3091  00106E  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3092  001070  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3093                           
  3094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3095  001072  EF85  F008         	goto	l3725
  3096  001076                     l3697:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3100  001076  5172               	movf	efgtoa@pp& (0+255),w,b
  3101  001078  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3102  00107A  A4D8               	btfss	status,2,c
  3103  00107C  EF42  F008         	goto	u5281
  3104  001080  EF44  F008         	goto	u5280
  3105  001084                     u5281:
  3106  001084  EF6E  F008         	goto	l3717
  3107  001088                     u5280:
  3108  001088                     
  3109                           ; BSR set to: 0
  3110  001088  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3111  00108A  EF4B  F008         	goto	u5290
  3112  00108E  EF49  F008         	goto	u5291
  3113  001092                     u5291:
  3114  001092  EF6E  F008         	goto	l3717
  3115  001096                     u5290:
  3116  001096                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3119  001096  0E00               	movlw	low _dbuf
  3120  001098  2592               	addwf	efgtoa@n& (0+255),w,b
  3121  00109A  6ED9               	movwf	fsr2l,c
  3122  00109C  0E01               	movlw	high _dbuf
  3123  00109E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3124  0010A0  6EDA               	movwf	fsr2h,c
  3125  0010A2  0E2E               	movlw	46
  3126  0010A4  6EDF               	movwf	indf2,c
  3127  0010A6                     
  3128                           ; BSR set to: 0
  3129  0010A6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3130  0010A8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3131  0010AA                     
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3134  0010AA  077F               	decf	efgtoa@w& (0+255),f,b
  3135  0010AC  A0D8               	btfss	status,0,c
  3136  0010AE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3137  0010B0                     
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3140  0010B0  0E00               	movlw	0
  3141  0010B2  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3142  0010B4  0E01               	movlw	1
  3143  0010B6  6F72               	movwf	efgtoa@pp& (0+255),b
  3144  0010B8  EF6E  F008         	goto	l3717
  3145  0010BC                     l3709:
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3149  0010BC  0E00               	movlw	low _dbuf
  3150  0010BE  2592               	addwf	efgtoa@n& (0+255),w,b
  3151  0010C0  6ED9               	movwf	fsr2l,c
  3152  0010C2  0E01               	movlw	high _dbuf
  3153  0010C4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3154  0010C6  6EDA               	movwf	fsr2h,c
  3155  0010C8  0E30               	movlw	48
  3156  0010CA  6EDF               	movwf	indf2,c
  3157  0010CC                     
  3158                           ; BSR set to: 0
  3159  0010CC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3160  0010CE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3161  0010D0                     
  3162                           ; BSR set to: 0
  3163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3164  0010D0  077F               	decf	efgtoa@w& (0+255),f,b
  3165  0010D2  A0D8               	btfss	status,0,c
  3166  0010D4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3167  0010D6                     
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3170  0010D6  0770               	decf	efgtoa@t& (0+255),f,b
  3171  0010D8  A0D8               	btfss	status,0,c
  3172  0010DA  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3173  0010DC                     l3717:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3177  0010DC  5170               	movf	efgtoa@t& (0+255),w,b
  3178  0010DE  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3179  0010E0  A4D8               	btfss	status,2,c
  3180  0010E2  EF75  F008         	goto	u5301
  3181  0010E6  EF77  F008         	goto	u5300
  3182  0010EA                     u5301:
  3183  0010EA  EF5E  F008         	goto	l3709
  3184  0010EE                     u5300:
  3185  0010EE                     
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3188  0010EE  0E00               	movlw	low _dbuf
  3189  0010F0  2592               	addwf	efgtoa@n& (0+255),w,b
  3190  0010F2  6ED9               	movwf	fsr2l,c
  3191  0010F4  0E01               	movlw	high _dbuf
  3192  0010F6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3193  0010F8  6EDA               	movwf	fsr2h,c
  3194  0010FA  5178               	movf	efgtoa@d& (0+255),w,b
  3195  0010FC  0F30               	addlw	48
  3196  0010FE  6EDF               	movwf	indf2,c
  3197  001100                     
  3198                           ; BSR set to: 0
  3199  001100  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3200  001102  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3201  001104                     
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3204  001104  077F               	decf	efgtoa@w& (0+255),f,b
  3205  001106  A0D8               	btfss	status,0,c
  3206  001108  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3207  00110A                     l3725:
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3211  00110A  C082  F01A         	movff	efgtoa@h,___flsub@b
  3212  00110E  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3213  001112  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3214  001116  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3215  00111A  C094  F005         	movff	efgtoa@u,___flmul@a
  3216  00111E  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3217  001122  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3218  001126  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3219  00112A  C086  F001         	movff	efgtoa@l,___flmul@b
  3220  00112E  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3221  001132  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3222  001136  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3223  00113A  EC7C  F00E         	call	___flmul	;wreg free
  3224  00113E  C001  F01E         	movff	?___flmul,___flsub@a
  3225  001142  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3226  001146  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3227  00114A  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3228  00114E  EC6C  F01C         	call	___flsub	;wreg free
  3229  001152  C01A  F082         	movff	?___flsub,efgtoa@h
  3230  001156  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3231  00115A  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3232  00115E  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3233  001162                     
  3234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3235  001162  C094  F001         	movff	efgtoa@u,___fldiv@b
  3236  001166  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3237  00116A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3238  00116E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3239  001172  0E00               	movlw	0
  3240  001174  6E05               	movwf	___fldiv@a^0,c
  3241  001176  0E00               	movlw	0
  3242  001178  6E06               	movwf	(___fldiv@a+1)^0,c
  3243  00117A  0E20               	movlw	32
  3244  00117C  6E07               	movwf	(___fldiv@a+2)^0,c
  3245  00117E  0E41               	movlw	65
  3246  001180  6E08               	movwf	(___fldiv@a+3)^0,c
  3247  001182  EC91  F010         	call	___fldiv	;wreg free
  3248  001186  C001  F094         	movff	?___fldiv,efgtoa@u
  3249  00118A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3250  00118E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3251  001192  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3252  001196                     
  3253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3254  001196  0100               	movlb	0	; () banked
  3255  001198  0776               	decf	efgtoa@ne& (0+255),f,b
  3256  00119A  A0D8               	btfss	status,0,c
  3257  00119C  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3258  00119E                     
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3261  00119E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3262  0011A0  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3263  0011A2                     l3733:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3267  0011A2  5174               	movf	efgtoa@m& (0+255),w,b
  3268  0011A4  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3269  0011A6  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3270  0011A8  0A80               	xorlw	128
  3271  0011AA  6E35               	movwf	??_efgtoa^0,c
  3272  0011AC  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3273  0011AE  0A80               	xorlw	128
  3274  0011B0  5835               	subwfb	??_efgtoa^0,w,c
  3275  0011B2  B0D8               	btfsc	status,0,c
  3276  0011B4  EFDE  F008         	goto	u5311
  3277  0011B8  EFE0  F008         	goto	u5310
  3278  0011BC                     u5311:
  3279  0011BC  EFEE  F008         	goto	l3737
  3280  0011C0                     u5310:
  3281  0011C0                     
  3282                           ; BSR set to: 0
  3283  0011C0  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3284  0011C2  EFEC  F008         	goto	u5321
  3285  0011C6  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3286  0011C8  E109               	bnz	u5320
  3287  0011CA  0E4B               	movlw	75
  3288  0011CC  5D92               	subwf	efgtoa@n& (0+255),w,b
  3289  0011CE  A0D8               	btfss	status,0,c
  3290  0011D0  EFEC  F008         	goto	u5321
  3291  0011D4  EFEE  F008         	goto	u5320
  3292  0011D8                     u5321:
  3293  0011D8  EFE4  F007         	goto	l3685
  3294  0011DC                     u5320:
  3295  0011DC                     l3737:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3299  0011DC  5172               	movf	efgtoa@pp& (0+255),w,b
  3300  0011DE  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3301  0011E0  A4D8               	btfss	status,2,c
  3302  0011E2  EFF5  F008         	goto	u5331
  3303  0011E6  EFF7  F008         	goto	u5330
  3304  0011EA                     u5331:
  3305  0011EA  EF08  F009         	goto	l3745
  3306  0011EE                     u5330:
  3307  0011EE                     
  3308                           ; BSR set to: 0
  3309  0011EE  A9BE               	btfss	_flags& (0+255),4,b
  3310  0011F0  EFFC  F008         	goto	u5341
  3311  0011F4  EFFE  F008         	goto	u5340
  3312  0011F8                     u5341:
  3313  0011F8  EF08  F009         	goto	l3745
  3314  0011FC                     u5340:
  3315  0011FC                     
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3318  0011FC  0E00               	movlw	low _dbuf
  3319  0011FE  2592               	addwf	efgtoa@n& (0+255),w,b
  3320  001200  6ED9               	movwf	fsr2l,c
  3321  001202  0E01               	movlw	high _dbuf
  3322  001204  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3323  001206  6EDA               	movwf	fsr2h,c
  3324  001208  0E2E               	movlw	46
  3325  00120A  6EDF               	movwf	indf2,c
  3326  00120C                     
  3327                           ; BSR set to: 0
  3328  00120C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3329  00120E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3330  001210                     l3745:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3334  001210  0E00               	movlw	low _dbuf
  3335  001212  2592               	addwf	efgtoa@n& (0+255),w,b
  3336  001214  6ED9               	movwf	fsr2l,c
  3337  001216  0E01               	movlw	high _dbuf
  3338  001218  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3339  00121A  6EDA               	movwf	fsr2h,c
  3340  00121C  0E00               	movlw	0
  3341  00121E  6EDF               	movwf	indf2,c
  3342  001220                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3345  001220  0E65               	movlw	101
  3346  001222  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3347  001224  A4D8               	btfss	status,2,c
  3348  001226  EF17  F009         	goto	u5351
  3349  00122A  EF19  F009         	goto	u5350
  3350  00122E                     u5351:
  3351  00122E  EFC7  F004         	goto	l3557
  3352  001232                     u5350:
  3353  001232                     
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3356  001232  0E00               	movlw	0
  3357  001234  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3358  001236  0E4F               	movlw	79
  3359  001238  6F8A               	movwf	efgtoa@i& (0+255),b
  3360  00123A                     
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3363  00123A  0E00               	movlw	low _dbuf
  3364  00123C  258A               	addwf	efgtoa@i& (0+255),w,b
  3365  00123E  6ED9               	movwf	fsr2l,c
  3366  001240  0E01               	movlw	high _dbuf
  3367  001242  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3368  001244  6EDA               	movwf	fsr2h,c
  3369  001246  0E00               	movlw	0
  3370  001248  6EDF               	movwf	indf2,c
  3371  00124A                     
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3374  00124A  0E00               	movlw	0
  3375  00124C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3376  00124E  0E00               	movlw	0
  3377  001250  6F7A               	movwf	efgtoa@sign& (0+255),b
  3378  001252                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3381  001252  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3382  001254  EF30  F009         	goto	u5360
  3383  001258  EF2E  F009         	goto	u5361
  3384  00125C                     u5361:
  3385  00125C  EF38  F009         	goto	l3761
  3386  001260                     u5360:
  3387  001260                     
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3390  001260  0E00               	movlw	0
  3391  001262  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3392  001264  0E01               	movlw	1
  3393  001266  6F7A               	movwf	efgtoa@sign& (0+255),b
  3394  001268                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3397  001268  6D90               	negf	efgtoa@e& (0+255),b
  3398  00126A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3399  00126C  B0D8               	btfsc	status,0,c
  3400  00126E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3401  001270                     l3761:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3405  001270  0E00               	movlw	0
  3406  001272  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3407  001274  0E02               	movlw	2
  3408  001276  6F7C               	movwf	efgtoa@p& (0+255),b
  3409                           
  3410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3411  001278  EF69  F009         	goto	l3773
  3412  00127C                     l3763:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3416  00127C  078A               	decf	efgtoa@i& (0+255),f,b
  3417  00127E  A0D8               	btfss	status,0,c
  3418  001280  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3419  001282                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3422  001282  0E00               	movlw	low _dbuf
  3423  001284  258A               	addwf	efgtoa@i& (0+255),w,b
  3424  001286  6ED9               	movwf	fsr2l,c
  3425  001288  0E01               	movlw	high _dbuf
  3426  00128A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3427  00128C  6EDA               	movwf	fsr2h,c
  3428  00128E  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3429  001292  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3430  001296  0E00               	movlw	0
  3431  001298  6E04               	movwf	(___awmod@divisor+1)^0,c
  3432  00129A  0E0A               	movlw	10
  3433  00129C  6E03               	movwf	___awmod@divisor^0,c
  3434  00129E  EC46  F01A         	call	___awmod	;wreg free
  3435  0012A2  5001               	movf	?___awmod^0,w,c
  3436  0012A4  0F30               	addlw	48
  3437  0012A6  6EDF               	movwf	indf2,c
  3438  0012A8                     
  3439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3440  0012A8  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3441  0012AC  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3442  0012B0  0E00               	movlw	0
  3443  0012B2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3444  0012B4  0E0A               	movlw	10
  3445  0012B6  6E03               	movwf	___awdiv@divisor^0,c
  3446  0012B8  ECE4  F019         	call	___awdiv	;wreg free
  3447  0012BC  C001  F090         	movff	?___awdiv,efgtoa@e
  3448  0012C0  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3449  0012C4                     
  3450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3451  0012C4  0100               	movlb	0	; () banked
  3452  0012C6  077C               	decf	efgtoa@p& (0+255),f,b
  3453  0012C8  A0D8               	btfss	status,0,c
  3454  0012CA  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3455  0012CC                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3458  0012CC  077F               	decf	efgtoa@w& (0+255),f,b
  3459  0012CE  A0D8               	btfss	status,0,c
  3460  0012D0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3461  0012D2                     l3773:
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3465  0012D2  5190               	movf	efgtoa@e& (0+255),w,b
  3466  0012D4  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3467  0012D6  A4D8               	btfss	status,2,c
  3468  0012D8  EF70  F009         	goto	u5371
  3469  0012DC  EF72  F009         	goto	u5370
  3470  0012E0                     u5371:
  3471  0012E0  EF3E  F009         	goto	l3763
  3472  0012E4                     u5370:
  3473  0012E4                     
  3474                           ; BSR set to: 0
  3475  0012E4  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3476  0012E6  EF7F  F009         	goto	u5380
  3477  0012EA  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3478  0012EC  E106               	bnz	u5381
  3479  0012EE  057C               	decf	efgtoa@p& (0+255),w,b
  3480  0012F0  B0D8               	btfsc	status,0,c
  3481  0012F2  EF7D  F009         	goto	u5381
  3482  0012F6  EF7F  F009         	goto	u5380
  3483  0012FA                     u5381:
  3484  0012FA  EF3E  F009         	goto	l3763
  3485  0012FE                     u5380:
  3486  0012FE                     
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3489  0012FE  078A               	decf	efgtoa@i& (0+255),f,b
  3490  001300  A0D8               	btfss	status,0,c
  3491  001302  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3492  001304                     
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3495  001304  517A               	movf	efgtoa@sign& (0+255),w,b
  3496  001306  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3497  001308  A4D8               	btfss	status,2,c
  3498  00130A  EF89  F009         	goto	u5391
  3499  00130E  EF8B  F009         	goto	u5390
  3500  001312                     u5391:
  3501  001312  EF91  F009         	goto	l3783
  3502  001316                     u5390:
  3503  001316                     
  3504                           ; BSR set to: 0
  3505  001316  0E00               	movlw	0
  3506  001318  6F6B               	movwf	(_efgtoa$597+1)& (0+255),b
  3507  00131A  0E2B               	movlw	43
  3508  00131C  6F6A               	movwf	_efgtoa$597& (0+255),b
  3509  00131E  EF95  F009         	goto	l3785
  3510  001322                     l3783:
  3511                           
  3512                           ; BSR set to: 0
  3513  001322  0E00               	movlw	0
  3514  001324  6F6B               	movwf	(_efgtoa$597+1)& (0+255),b
  3515  001326  0E2D               	movlw	45
  3516  001328  6F6A               	movwf	_efgtoa$597& (0+255),b
  3517  00132A                     l3785:
  3518                           
  3519                           ; BSR set to: 0
  3520  00132A  0E00               	movlw	low _dbuf
  3521  00132C  258A               	addwf	efgtoa@i& (0+255),w,b
  3522  00132E  6ED9               	movwf	fsr2l,c
  3523  001330  0E01               	movlw	high _dbuf
  3524  001332  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3525  001334  6EDA               	movwf	fsr2h,c
  3526  001336  C06A  FFDF         	movff	_efgtoa$597,indf2
  3527  00133A                     
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3530  00133A  077F               	decf	efgtoa@w& (0+255),f,b
  3531  00133C  A0D8               	btfss	status,0,c
  3532  00133E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3533  001340                     
  3534                           ; BSR set to: 0
  3535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3536  001340  078A               	decf	efgtoa@i& (0+255),f,b
  3537  001342  A0D8               	btfss	status,0,c
  3538  001344  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3539  001346                     
  3540                           ; BSR set to: 0
  3541  001346  0EBF               	movlw	191
  3542  001348  6E35               	movwf	??_efgtoa^0,c
  3543  00134A  0EFF               	movlw	255
  3544  00134C  6E36               	movwf	(??_efgtoa+1)^0,c
  3545  00134E  5034               	movf	efgtoa@c^0,w,c
  3546  001350  6E37               	movwf	(??_efgtoa+2)^0,c
  3547  001352  6A38               	clrf	(??_efgtoa+3)^0,c
  3548  001354  5035               	movf	??_efgtoa^0,w,c
  3549  001356  2637               	addwf	(??_efgtoa+2)^0,f,c
  3550  001358  5036               	movf	(??_efgtoa+1)^0,w,c
  3551  00135A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3552  00135C  5038               	movf	(??_efgtoa+3)^0,w,c
  3553  00135E  E10A               	bnz	u5400
  3554  001360  0E1A               	movlw	26
  3555  001362  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3556  001364  A0D8               	btfss	status,0,c
  3557  001366  EFB7  F009         	goto	u5401
  3558  00136A  EFBA  F009         	goto	u5400
  3559  00136E                     u5401:
  3560  00136E  0E01               	movlw	1
  3561  001370  EFBB  F009         	goto	u5410
  3562  001374                     u5400:
  3563  001374  0E00               	movlw	0
  3564  001376                     u5410:
  3565  001376  6F6E               	movwf	_efgtoa$599& (0+255),b
  3566  001378  6B6F               	clrf	(_efgtoa$599+1)& (0+255),b
  3567  00137A                     
  3568                           ; BSR set to: 0
  3569  00137A  516E               	movf	_efgtoa$599& (0+255),w,b
  3570  00137C  116F               	iorwf	(_efgtoa$599+1)& (0+255),w,b
  3571  00137E  A4D8               	btfss	status,2,c
  3572  001380  EFC4  F009         	goto	u5421
  3573  001384  EFC6  F009         	goto	u5420
  3574  001388                     u5421:
  3575  001388  EFCC  F009         	goto	l3799
  3576  00138C                     u5420:
  3577  00138C                     
  3578                           ; BSR set to: 0
  3579  00138C  0E00               	movlw	0
  3580  00138E  6F6D               	movwf	(_efgtoa$598+1)& (0+255),b
  3581  001390  0E65               	movlw	101
  3582  001392  6F6C               	movwf	_efgtoa$598& (0+255),b
  3583  001394  EFD0  F009         	goto	l3801
  3584  001398                     l3799:
  3585                           
  3586                           ; BSR set to: 0
  3587  001398  0E00               	movlw	0
  3588  00139A  6F6D               	movwf	(_efgtoa$598+1)& (0+255),b
  3589  00139C  0E45               	movlw	69
  3590  00139E  6F6C               	movwf	_efgtoa$598& (0+255),b
  3591  0013A0                     l3801:
  3592                           
  3593                           ; BSR set to: 0
  3594  0013A0  0E00               	movlw	low _dbuf
  3595  0013A2  258A               	addwf	efgtoa@i& (0+255),w,b
  3596  0013A4  6ED9               	movwf	fsr2l,c
  3597  0013A6  0E01               	movlw	high _dbuf
  3598  0013A8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3599  0013AA  6EDA               	movwf	fsr2h,c
  3600  0013AC  C06C  FFDF         	movff	_efgtoa$598,indf2
  3601  0013B0                     
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3604  0013B0  077F               	decf	efgtoa@w& (0+255),f,b
  3605  0013B2  A0D8               	btfss	status,0,c
  3606  0013B4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3607  0013B6                     
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3610  0013B6  0E00               	movlw	low _dbuf
  3611  0013B8  2592               	addwf	efgtoa@n& (0+255),w,b
  3612  0013BA  6E01               	movwf	strcpy@dest^0,c
  3613  0013BC  0E01               	movlw	high _dbuf
  3614  0013BE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3615  0013C0  6E02               	movwf	(strcpy@dest+1)^0,c
  3616  0013C2  0E00               	movlw	low _dbuf
  3617  0013C4  258A               	addwf	efgtoa@i& (0+255),w,b
  3618  0013C6  6E03               	movwf	strcpy@src^0,c
  3619  0013C8  0E01               	movlw	high _dbuf
  3620  0013CA  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3621  0013CC  6E04               	movwf	(strcpy@src+1)^0,c
  3622  0013CE  ECC6  F01B         	call	_strcpy	;wreg free
  3623  0013D2  EFC7  F004         	goto	l3557
  3624  0013D6                     l246:
  3625  0013D6  0012               	return		;funcret
  3626  0013D8                     __end_of_efgtoa:
  3627                           	opt callstack 0
  3628                           
  3629 ;; *************** function _tolower *****************
  3630 ;; Defined at:
  3631 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  c               2    6[COMRAM] int 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  2    6[COMRAM] int 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3645 ;;      Params:         2       0       0       0       0       0       0       0       0
  3646 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3647 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3648 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3649 ;;Total ram usage:        8 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    1
  3652 ;; This function calls:
  3653 ;;		_isupper
  3654 ;; This function is called by:
  3655 ;;		_efgtoa
  3656 ;;		_vfpfcnvrt
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text6
  3661  0036CE                     __ptext6:
  3662                           	opt callstack 0
  3663  0036CE                     _tolower:
  3664                           	opt callstack 26
  3665  0036CE  0EBF               	movlw	191
  3666  0036D0  6E09               	movwf	??_tolower^0,c
  3667  0036D2  0EFF               	movlw	255
  3668  0036D4  6E0A               	movwf	(??_tolower+1)^0,c
  3669  0036D6  C007  F00B         	movff	tolower@c,??_tolower+2
  3670  0036DA  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3671  0036DE  5009               	movf	??_tolower^0,w,c
  3672  0036E0  260B               	addwf	(??_tolower+2)^0,f,c
  3673  0036E2  500A               	movf	(??_tolower+1)^0,w,c
  3674  0036E4  220C               	addwfc	(??_tolower+3)^0,f,c
  3675  0036E6  500C               	movf	(??_tolower+3)^0,w,c
  3676  0036E8  E10A               	bnz	u3880
  3677  0036EA  0E1A               	movlw	26
  3678  0036EC  5C0B               	subwf	(??_tolower+2)^0,w,c
  3679  0036EE  A0D8               	btfss	status,0,c
  3680  0036F0  EF7C  F01B         	goto	u3881
  3681  0036F4  EF7F  F01B         	goto	u3880
  3682  0036F8                     u3881:
  3683  0036F8  0E01               	movlw	1
  3684  0036FA  EF80  F01B         	goto	u3890
  3685  0036FE                     u3880:
  3686  0036FE  0E00               	movlw	0
  3687  003700                     u3890:
  3688  003700  6E0D               	movwf	_tolower$1204^0,c
  3689  003702  6A0E               	clrf	(_tolower$1204+1)^0,c
  3690  003704  500D               	movf	_tolower$1204^0,w,c
  3691  003706  100E               	iorwf	(_tolower$1204+1)^0,w,c
  3692  003708  B4D8               	btfsc	status,2,c
  3693  00370A  EF89  F01B         	goto	u3901
  3694  00370E  EF8B  F01B         	goto	u3900
  3695  003712                     u3901:
  3696  003712  EF92  F01B         	goto	l1155
  3697  003716                     u3900:
  3698  003716  0E20               	movlw	32
  3699  003718  1007               	iorwf	tolower@c^0,w,c
  3700  00371A  6E07               	movwf	?_tolower^0,c
  3701  00371C  5008               	movf	(tolower@c+1)^0,w,c
  3702  00371E  6E08               	movwf	(?_tolower+1)^0,c
  3703  003720  EF96  F01B         	goto	l1160
  3704  003724                     l1155:
  3705  003724  C007  F007         	movff	tolower@c,?_tolower
  3706  003728  C008  F008         	movff	tolower@c+1,?_tolower+1
  3707  00372C                     l1160:
  3708  00372C  0012               	return		;funcret
  3709  00372E                     __end_of_tolower:
  3710                           	opt callstack 0
  3711                           
  3712 ;; *************** function _isupper *****************
  3713 ;; Defined at:
  3714 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  c               2    0[COMRAM] int 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  2    0[COMRAM] int 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3728 ;;      Params:         2       0       0       0       0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3730 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3731 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3732 ;;Total ram usage:        6 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_efgtoa
  3738 ;;		_vfpfcnvrt
  3739 ;;		_tolower
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text7
  3744  003962                     __ptext7:
  3745                           	opt callstack 0
  3746  003962                     _isupper:
  3747                           	opt callstack 26
  3748  003962  0EBF               	movlw	191
  3749  003964  6E03               	movwf	??_isupper^0,c
  3750  003966  0EFF               	movlw	255
  3751  003968  6E04               	movwf	(??_isupper+1)^0,c
  3752  00396A  C001  F005         	movff	isupper@c,??_isupper+2
  3753  00396E  C002  F006         	movff	isupper@c+1,??_isupper+3
  3754  003972  5003               	movf	??_isupper^0,w,c
  3755  003974  2605               	addwf	(??_isupper+2)^0,f,c
  3756  003976  5004               	movf	(??_isupper+1)^0,w,c
  3757  003978  2206               	addwfc	(??_isupper+3)^0,f,c
  3758  00397A  5006               	movf	(??_isupper+3)^0,w,c
  3759  00397C  E10A               	bnz	u3020
  3760  00397E  0E1A               	movlw	26
  3761  003980  5C05               	subwf	(??_isupper+2)^0,w,c
  3762  003982  A0D8               	btfss	status,0,c
  3763  003984  EFC6  F01C         	goto	u3021
  3764  003988  EFC9  F01C         	goto	u3020
  3765  00398C                     u3021:
  3766  00398C  0E01               	movlw	1
  3767  00398E  EFCA  F01C         	goto	u3030
  3768  003992                     u3020:
  3769  003992  0E00               	movlw	0
  3770  003994                     u3030:
  3771  003994  6E01               	movwf	?_isupper^0,c
  3772  003996  6A02               	clrf	(?_isupper+1)^0,c
  3773  003998  0012               	return		;funcret
  3774  00399A                     __end_of_isupper:
  3775                           	opt callstack 0
  3776                           
  3777 ;; *************** function _strcpy *****************
  3778 ;; Defined at:
  3779 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3782 ;;		 -> dbuf(80), 
  3783 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3784 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  3785 ;;		 -> dbuf(80), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  d               2    8[COMRAM] PTR unsigned char 
  3788 ;;		 -> dbuf(80), 
  3789 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3790 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  3791 ;;		 -> dbuf(80), 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  2    0[COMRAM] PTR unsigned char 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3801 ;;      Params:         4       0       0       0       0       0       0       0       0
  3802 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3803 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3804 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3805 ;;Total ram usage:       10 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_efgtoa
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text8
  3815  00378C                     __ptext8:
  3816                           	opt callstack 0
  3817  00378C                     _strcpy:
  3818                           	opt callstack 26
  3819  00378C  C003  F007         	movff	strcpy@src,strcpy@s
  3820  003790  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3821  003794  C001  F009         	movff	strcpy@dest,strcpy@d
  3822  003798  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3823  00379C                     l2975:
  3824  00379C  5007               	movf	strcpy@s^0,w,c
  3825  00379E  6E05               	movwf	??_strcpy^0,c
  3826  0037A0  5008               	movf	(strcpy@s+1)^0,w,c
  3827  0037A2  6E06               	movwf	(??_strcpy+1)^0,c
  3828  0037A4  4A07               	infsnz	strcpy@s^0,f,c
  3829  0037A6  2A08               	incf	(strcpy@s+1)^0,f,c
  3830  0037A8  C005  FFF6         	movff	??_strcpy,tblptrl
  3831  0037AC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3832  0037B0  6AF8               	clrf	tblptru,c
  3833  0037B2  C009  FFD9         	movff	strcpy@d,fsr2l
  3834  0037B6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3835  0037BA  4A09               	infsnz	strcpy@d^0,f,c
  3836  0037BC  2A0A               	incf	(strcpy@d+1)^0,f,c
  3837  0037BE  0E07               	movlw	(high __ramtop+-1)
  3838  0037C0  64F7               	cpfsgt	tblptrh,c
  3839  0037C2  D003               	bra	u3867
  3840  0037C4  0008               	tblrd		*
  3841  0037C6  50F5               	movf	tablat,w,c
  3842  0037C8  D005               	bra	u3860
  3843  0037CA                     u3867:
  3844  0037CA  CFF6 FFE9          	movff	tblptrl,fsr0l
  3845  0037CE  CFF7 FFEA          	movff	tblptrh,fsr0h
  3846  0037D2  50EF               	movf	indf0,w,c
  3847  0037D4                     u3860:
  3848  0037D4  6EDF               	movwf	indf2,c
  3849  0037D6  50DF               	movf	indf2,w,c
  3850  0037D8  A4D8               	btfss	status,2,c
  3851  0037DA  EFF1  F01B         	goto	u3871
  3852  0037DE  EFF3  F01B         	goto	u3870
  3853  0037E2                     u3871:
  3854  0037E2  EFCE  F01B         	goto	l2975
  3855  0037E6                     u3870:
  3856  0037E6  0012               	return		;funcret
  3857  0037E8                     __end_of_strcpy:
  3858                           	opt callstack 0
  3859                           
  3860 ;; *************** function _pad *****************
  3861 ;; Defined at:
  3862 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3865 ;;		 -> sprintf@f(6), 
  3866 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3867 ;;		 -> dbuf(80), 
  3868 ;;  p               2   20[COMRAM] int 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  w               2   25[COMRAM] int 
  3871 ;;  i               2   23[COMRAM] int 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  2   16[COMRAM] int 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3881 ;;      Params:         6       0       0       0       0       0       0       0       0
  3882 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3883 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3884 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3885 ;;Total ram usage:       11 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    3
  3888 ;; This function calls:
  3889 ;;		_fputc
  3890 ;;		_fputs
  3891 ;;		_strlen
  3892 ;; This function is called by:
  3893 ;;		_efgtoa
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text9
  3898  003302                     __ptext9:
  3899                           	opt callstack 0
  3900  003302                     _pad:
  3901                           	opt callstack 23
  3902  003302                     
  3903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3904  003302  0100               	movlb	0	; () banked
  3905  003304  A1BE               	btfss	_flags& (0+255),0,b
  3906  003306  EF87  F019         	goto	u3751
  3907  00330A  EF89  F019         	goto	u3750
  3908  00330E                     u3751:
  3909  00330E  EF93  F019         	goto	l2933
  3910  003312                     u3750:
  3911  003312                     
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3914  003312  C013  F00A         	movff	pad@buf,fputs@s
  3915  003316  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3916  00331A  C011  F00C         	movff	pad@fp,fputs@fp
  3917  00331E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3918  003322  EC8F  F01C         	call	_fputs	;wreg free
  3919  003326                     l2933:
  3920                           
  3921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3922  003326  BE16               	btfsc	(pad@p+1)^0,7,c
  3923  003328  EF98  F019         	goto	u3761
  3924  00332C  EF9A  F019         	goto	u3760
  3925  003330                     u3761:
  3926  003330  EFA0  F019         	goto	l2937
  3927  003334                     u3760:
  3928  003334  C015  F01A         	movff	pad@p,pad@w
  3929  003338  C016  F01B         	movff	pad@p+1,pad@w+1
  3930  00333C  EFA4  F019         	goto	l223
  3931  003340                     l2937:
  3932  003340  0E00               	movlw	0
  3933  003342  6E1B               	movwf	(pad@w+1)^0,c
  3934  003344  0E00               	movlw	0
  3935  003346  6E1A               	movwf	pad@w^0,c
  3936  003348                     l223:
  3937                           
  3938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3939  003348  0E00               	movlw	0
  3940  00334A  6E19               	movwf	(pad@i+1)^0,c
  3941  00334C  0E00               	movlw	0
  3942  00334E  6E18               	movwf	pad@i^0,c
  3943                           
  3944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3945  003350  EFB6  F019         	goto	l2943
  3946  003354                     l2939:
  3947                           
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3949  003354  0E00               	movlw	0
  3950  003356  6E02               	movwf	(fputc@c+1)^0,c
  3951  003358  0E20               	movlw	32
  3952  00335A  6E01               	movwf	fputc@c^0,c
  3953  00335C  C011  F003         	movff	pad@fp,fputc@fp
  3954  003360  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3955  003364  EC1C  F019         	call	_fputc	;wreg free
  3956  003368                     
  3957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3958  003368  4A18               	infsnz	pad@i^0,f,c
  3959  00336A  2A19               	incf	(pad@i+1)^0,f,c
  3960  00336C                     l2943:
  3961                           
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3963  00336C  501A               	movf	pad@w^0,w,c
  3964  00336E  5C18               	subwf	pad@i^0,w,c
  3965  003370  5019               	movf	(pad@i+1)^0,w,c
  3966  003372  0A80               	xorlw	128
  3967  003374  6E17               	movwf	??_pad^0,c
  3968  003376  501B               	movf	(pad@w+1)^0,w,c
  3969  003378  0A80               	xorlw	128
  3970  00337A  5817               	subwfb	??_pad^0,w,c
  3971  00337C  A0D8               	btfss	status,0,c
  3972  00337E  EFC3  F019         	goto	u3771
  3973  003382  EFC5  F019         	goto	u3770
  3974  003386                     u3771:
  3975  003386  EFAA  F019         	goto	l2939
  3976  00338A                     u3770:
  3977  00338A                     
  3978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3979  00338A  0100               	movlb	0	; () banked
  3980  00338C  B1BE               	btfsc	_flags& (0+255),0,b
  3981  00338E  EFCB  F019         	goto	u3781
  3982  003392  EFCD  F019         	goto	u3780
  3983  003396                     u3781:
  3984  003396  EFD7  F019         	goto	l2947
  3985  00339A                     u3780:
  3986  00339A                     
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3989  00339A  C013  F00A         	movff	pad@buf,fputs@s
  3990  00339E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3991  0033A2  C011  F00C         	movff	pad@fp,fputs@fp
  3992  0033A6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3993  0033AA  EC8F  F01C         	call	_fputs	;wreg free
  3994  0033AE                     l2947:
  3995                           
  3996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3997  0033AE  C013  F001         	movff	pad@buf,strlen@s
  3998  0033B2  C014  F002         	movff	pad@buf+1,strlen@s+1
  3999  0033B6  EC05  F01D         	call	_strlen	;wreg free
  4000  0033BA  501A               	movf	pad@w^0,w,c
  4001  0033BC  2401               	addwf	?_strlen^0,w,c
  4002  0033BE  6E11               	movwf	?_pad^0,c
  4003  0033C0  501B               	movf	(pad@w+1)^0,w,c
  4004  0033C2  2002               	addwfc	(?_strlen+1)^0,w,c
  4005  0033C4  6E12               	movwf	(?_pad+1)^0,c
  4006  0033C6  0012               	return		;funcret
  4007  0033C8                     __end_of_pad:
  4008                           	opt callstack 0
  4009                           
  4010 ;; *************** function _strlen *****************
  4011 ;; Defined at:
  4012 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4015 ;;		 -> dbuf(80), 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4018 ;;		 -> dbuf(80), 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2    0[COMRAM] unsigned int 
  4021 ;; Registers used:
  4022 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4028 ;;      Params:         2       0       0       0       0       0       0       0       0
  4029 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4031 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4032 ;;Total ram usage:        4 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_pad
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text10
  4042  003A0A                     __ptext10:
  4043                           	opt callstack 0
  4044  003A0A                     _strlen:
  4045                           	opt callstack 25
  4046  003A0A  C001  F003         	movff	strlen@s,strlen@a
  4047  003A0E  C002  F004         	movff	strlen@s+1,strlen@a+1
  4048  003A12  EF0D  F01D         	goto	l2713
  4049  003A16                     l2711:
  4050  003A16  4A01               	infsnz	strlen@s^0,f,c
  4051  003A18  2A02               	incf	(strlen@s+1)^0,f,c
  4052  003A1A                     l2713:
  4053  003A1A  C001  FFD9         	movff	strlen@s,fsr2l
  4054  003A1E  C002  FFDA         	movff	strlen@s+1,fsr2h
  4055  003A22  50DF               	movf	indf2,w,c
  4056  003A24  A4D8               	btfss	status,2,c
  4057  003A26  EF17  F01D         	goto	u3011
  4058  003A2A  EF19  F01D         	goto	u3010
  4059  003A2E                     u3011:
  4060  003A2E  EF0B  F01D         	goto	l2711
  4061  003A32                     u3010:
  4062  003A32  5003               	movf	strlen@a^0,w,c
  4063  003A34  5C01               	subwf	strlen@s^0,w,c
  4064  003A36  6E01               	movwf	?_strlen^0,c
  4065  003A38  5004               	movf	(strlen@a+1)^0,w,c
  4066  003A3A  5802               	subwfb	(strlen@s+1)^0,w,c
  4067  003A3C  6E02               	movwf	(?_strlen+1)^0,c
  4068  003A3E  0012               	return		;funcret
  4069  003A40                     __end_of_strlen:
  4070                           	opt callstack 0
  4071                           
  4072 ;; *************** function _fputs *****************
  4073 ;; Defined at:
  4074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4077 ;;		 -> dbuf(80), 
  4078 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4079 ;;		 -> sprintf@f(6), 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  i               2   14[COMRAM] int 
  4082 ;;  c               1   13[COMRAM] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  2    9[COMRAM] int 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4092 ;;      Params:         4       0       0       0       0       0       0       0       0
  4093 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4095 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4096 ;;Total ram usage:        7 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    2
  4099 ;; This function calls:
  4100 ;;		_fputc
  4101 ;; This function is called by:
  4102 ;;		_pad
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text11
  4107  00391E                     __ptext11:
  4108                           	opt callstack 0
  4109  00391E                     _fputs:
  4110                           	opt callstack 23
  4111  00391E  0E00               	movlw	0
  4112  003920  6E10               	movwf	(fputs@i+1)^0,c
  4113  003922  0E00               	movlw	0
  4114  003924  6E0F               	movwf	fputs@i^0,c
  4115  003926  EFA0  F01C         	goto	l2707
  4116  00392A                     l2703:
  4117  00392A  C00E  F001         	movff	fputs@c,fputc@c
  4118  00392E  6A02               	clrf	(fputc@c+1)^0,c
  4119  003930  C00C  F003         	movff	fputs@fp,fputc@fp
  4120  003934  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4121  003938  EC1C  F019         	call	_fputc	;wreg free
  4122  00393C  4A0F               	infsnz	fputs@i^0,f,c
  4123  00393E  2A10               	incf	(fputs@i+1)^0,f,c
  4124  003940                     l2707:
  4125  003940  500F               	movf	fputs@i^0,w,c
  4126  003942  240A               	addwf	fputs@s^0,w,c
  4127  003944  6ED9               	movwf	fsr2l,c
  4128  003946  5010               	movf	(fputs@i+1)^0,w,c
  4129  003948  200B               	addwfc	(fputs@s+1)^0,w,c
  4130  00394A  6EDA               	movwf	fsr2h,c
  4131  00394C  50DF               	movf	indf2,w,c
  4132  00394E  6E0E               	movwf	fputs@c^0,c
  4133  003950  500E               	movf	fputs@c^0,w,c
  4134  003952  A4D8               	btfss	status,2,c
  4135  003954  EFAE  F01C         	goto	u3001
  4136  003958  EFB0  F01C         	goto	u3000
  4137  00395C                     u3001:
  4138  00395C  EF95  F01C         	goto	l2703
  4139  003960                     u3000:
  4140  003960  0012               	return		;funcret
  4141  003962                     __end_of_fputs:
  4142                           	opt callstack 0
  4143                           
  4144 ;; *************** function _fputc *****************
  4145 ;; Defined at:
  4146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  c               2    0[COMRAM] int 
  4149 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4150 ;;		 -> sprintf@f(6), 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  2    0[COMRAM] int 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4162 ;;      Params:         4       0       0       0       0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4164 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4165 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4166 ;;Total ram usage:        9 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    1
  4169 ;; This function calls:
  4170 ;;		_putch
  4171 ;; This function is called by:
  4172 ;;		_pad
  4173 ;;		_vfpfcnvrt
  4174 ;;		_fputs
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text12
  4179  003238                     __ptext12:
  4180                           	opt callstack 0
  4181  003238                     _fputc:
  4182                           	opt callstack 26
  4183  003238  5003               	movf	fputc@fp^0,w,c
  4184  00323A  1004               	iorwf	(fputc@fp+1)^0,w,c
  4185  00323C  B4D8               	btfsc	status,2,c
  4186  00323E  EF23  F019         	goto	u2961
  4187  003242  EF25  F019         	goto	u2960
  4188  003246                     u2961:
  4189  003246  EF2E  F019         	goto	l2691
  4190  00324A                     u2960:
  4191  00324A  5003               	movf	fputc@fp^0,w,c
  4192  00324C  1004               	iorwf	(fputc@fp+1)^0,w,c
  4193  00324E  A4D8               	btfss	status,2,c
  4194  003250  EF2C  F019         	goto	u2971
  4195  003254  EF2E  F019         	goto	u2970
  4196  003258                     u2971:
  4197  003258  EF33  F019         	goto	l2693
  4198  00325C                     u2970:
  4199  00325C                     l2691:
  4200  00325C  5001               	movf	fputc@c^0,w,c
  4201  00325E  EC70  F01D         	call	_putch
  4202  003262  EF80  F019         	goto	l1111
  4203  003266                     l2693:
  4204  003266  EE20 F004          	lfsr	2,4
  4205  00326A  5003               	movf	fputc@fp^0,w,c
  4206  00326C  26D9               	addwf	fsr2l,f,c
  4207  00326E  5004               	movf	(fputc@fp+1)^0,w,c
  4208  003270  22DA               	addwfc	fsr2h,f,c
  4209  003272  50DE               	movf	postinc2,w,c
  4210  003274  10DE               	iorwf	postinc2,w,c
  4211  003276  B4D8               	btfsc	status,2,c
  4212  003278  EF40  F019         	goto	u2981
  4213  00327C  EF42  F019         	goto	u2980
  4214  003280                     u2981:
  4215  003280  EF5D  F019         	goto	l2697
  4216  003284                     u2980:
  4217  003284  EE20 F004          	lfsr	2,4
  4218  003288  5003               	movf	fputc@fp^0,w,c
  4219  00328A  26D9               	addwf	fsr2l,f,c
  4220  00328C  5004               	movf	(fputc@fp+1)^0,w,c
  4221  00328E  22DA               	addwfc	fsr2h,f,c
  4222  003290  EE10 F002          	lfsr	1,2
  4223  003294  5003               	movf	fputc@fp^0,w,c
  4224  003296  26E1               	addwf	fsr1l,f,c
  4225  003298  5004               	movf	(fputc@fp+1)^0,w,c
  4226  00329A  22E2               	addwfc	fsr1h,f,c
  4227  00329C  50DE               	movf	postinc2,w,c
  4228  00329E  5CE6               	subwf	postinc1,w,c
  4229  0032A0  50E6               	movf	postinc1,w,c
  4230  0032A2  0A80               	xorlw	128
  4231  0032A4  6E09               	movwf	(??_fputc+4)^0,c
  4232  0032A6  50DE               	movf	postinc2,w,c
  4233  0032A8  0A80               	xorlw	128
  4234  0032AA  5809               	subwfb	(??_fputc+4)^0,w,c
  4235  0032AC  B0D8               	btfsc	status,0,c
  4236  0032AE  EF5B  F019         	goto	u2991
  4237  0032B2  EF5D  F019         	goto	u2990
  4238  0032B6                     u2991:
  4239  0032B6  EF80  F019         	goto	l1111
  4240  0032BA                     u2990:
  4241  0032BA                     l2697:
  4242  0032BA  EE20 F002          	lfsr	2,2
  4243  0032BE  5003               	movf	fputc@fp^0,w,c
  4244  0032C0  26D9               	addwf	fsr2l,f,c
  4245  0032C2  5004               	movf	(fputc@fp+1)^0,w,c
  4246  0032C4  22DA               	addwfc	fsr2h,f,c
  4247  0032C6  CFDE F005          	movff	postinc2,??_fputc
  4248  0032CA  CFDD F006          	movff	postdec2,??_fputc+1
  4249  0032CE  C003  FFD9         	movff	fputc@fp,fsr2l
  4250  0032D2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4251  0032D6  CFDE F007          	movff	postinc2,??_fputc+2
  4252  0032DA  CFDD F008          	movff	postdec2,??_fputc+3
  4253  0032DE  5005               	movf	??_fputc^0,w,c
  4254  0032E0  2407               	addwf	(??_fputc+2)^0,w,c
  4255  0032E2  6ED9               	movwf	fsr2l,c
  4256  0032E4  5006               	movf	(??_fputc+1)^0,w,c
  4257  0032E6  2008               	addwfc	(??_fputc+3)^0,w,c
  4258  0032E8  6EDA               	movwf	fsr2h,c
  4259  0032EA  C001  FFDF         	movff	fputc@c,indf2
  4260  0032EE  EE20 F002          	lfsr	2,2
  4261  0032F2  5003               	movf	fputc@fp^0,w,c
  4262  0032F4  26D9               	addwf	fsr2l,f,c
  4263  0032F6  5004               	movf	(fputc@fp+1)^0,w,c
  4264  0032F8  22DA               	addwfc	fsr2h,f,c
  4265  0032FA  2ADE               	incf	postinc2,f,c
  4266  0032FC  0E00               	movlw	0
  4267  0032FE  22DD               	addwfc	postdec2,f,c
  4268  003300                     l1111:
  4269  003300  0012               	return		;funcret
  4270  003302                     __end_of_fputc:
  4271                           	opt callstack 0
  4272                           
  4273 ;; *************** function _putch *****************
  4274 ;; Defined at:
  4275 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  c               1    wreg     unsigned char 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  c               1    0[COMRAM] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4292 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4293 ;;Total ram usage:        0 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_fputc
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text13
  4303  003AE0                     __ptext13:
  4304                           	opt callstack 0
  4305  003AE0                     _putch:
  4306                           	opt callstack 26
  4307  003AE0  0012               	return		;funcret
  4308  003AE2                     __end_of_putch:
  4309                           	opt callstack 0
  4310                           
  4311 ;; *************** function _floorf *****************
  4312 ;; Defined at:
  4313 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  x               4   25[COMRAM] float 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  u               4   41[COMRAM] struct .
  4318 ;;  m               4   35[COMRAM] unsigned long 
  4319 ;;  e               2   39[COMRAM] int 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  4   25[COMRAM] float 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4329 ;;      Params:         4       0       0       0       0       0       0       0       0
  4330 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4331 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4332 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4333 ;;Total ram usage:       20 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_efgtoa
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text14
  4343  0024BC                     __ptext14:
  4344                           	opt callstack 0
  4345  0024BC                     _floorf:
  4346                           	opt callstack 26
  4347  0024BC  C0B0  F02A         	movff	floorf@F524,floorf@u
  4348  0024C0  C0B1  F02B         	movff	floorf@F524+1,floorf@u+1
  4349  0024C4  C0B2  F02C         	movff	floorf@F524+2,floorf@u+2
  4350  0024C8  C0B3  F02D         	movff	floorf@F524+3,floorf@u+3
  4351  0024CC  C01A  F02A         	movff	floorf@x,floorf@u
  4352  0024D0  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4353  0024D4  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4354  0024D8  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4355  0024DC  0E81               	movlw	129
  4356  0024DE  6E1E               	movwf	??_floorf^0,c
  4357  0024E0  0EFF               	movlw	255
  4358  0024E2  6E1F               	movwf	(??_floorf+1)^0,c
  4359  0024E4  C02A  F020         	movff	floorf@u,??_floorf+2
  4360  0024E8  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4361  0024EC  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4362  0024F0  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4363  0024F4  0E18               	movlw	24
  4364  0024F6  EF82  F012         	goto	u3910
  4365  0024FA                     u3915:
  4366  0024FA  90D8               	bcf	status,0,c
  4367  0024FC  3223               	rrcf	(??_floorf+5)^0,f,c
  4368  0024FE  3222               	rrcf	(??_floorf+4)^0,f,c
  4369  002500  3221               	rrcf	(??_floorf+3)^0,f,c
  4370  002502  3220               	rrcf	(??_floorf+2)^0,f,c
  4371  002504                     u3910:
  4372  002504  2EE8               	decfsz	wreg,f,c
  4373  002506  EF7D  F012         	goto	u3915
  4374  00250A  5020               	movf	(??_floorf+2)^0,w,c
  4375  00250C  241E               	addwf	??_floorf^0,w,c
  4376  00250E  6E28               	movwf	floorf@e^0,c
  4377  002510  0E00               	movlw	0
  4378  002512  201F               	addwfc	(??_floorf+1)^0,w,c
  4379  002514  6E29               	movwf	(floorf@e+1)^0,c
  4380  002516  BE29               	btfsc	(floorf@e+1)^0,7,c
  4381  002518  EF97  F012         	goto	u3921
  4382  00251C  5029               	movf	(floorf@e+1)^0,w,c
  4383  00251E  E109               	bnz	u3920
  4384  002520  0E17               	movlw	23
  4385  002522  5C28               	subwf	floorf@e^0,w,c
  4386  002524  A0D8               	btfss	status,0,c
  4387  002526  EF97  F012         	goto	u3921
  4388  00252A  EF99  F012         	goto	u3920
  4389  00252E                     u3921:
  4390  00252E  EFA3  F012         	goto	l2993
  4391  002532                     u3920:
  4392  002532                     l2991:
  4393  002532  C01A  F01A         	movff	floorf@x,?_floorf
  4394  002536  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4395  00253A  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4396  00253E  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4397  002542  EF66  F013         	goto	l1072
  4398  002546                     l2993:
  4399  002546  BE29               	btfsc	(floorf@e+1)^0,7,c
  4400  002548  EFA8  F012         	goto	u3931
  4401  00254C  EFAA  F012         	goto	u3930
  4402  002550                     u3931:
  4403  002550  EF1A  F013         	goto	l3003
  4404  002554                     u3930:
  4405  002554  C028  F01E         	movff	floorf@e,??_floorf
  4406  002558  0EFF               	movlw	255
  4407  00255A  6E1F               	movwf	(??_floorf+1)^0,c
  4408  00255C  0EFF               	movlw	255
  4409  00255E  6E20               	movwf	(??_floorf+2)^0,c
  4410  002560  0E7F               	movlw	127
  4411  002562  6E21               	movwf	(??_floorf+3)^0,c
  4412  002564  0E00               	movlw	0
  4413  002566  6E22               	movwf	(??_floorf+4)^0,c
  4414  002568                     u3945:
  4415  002568  661E               	tstfsz	??_floorf^0,c
  4416  00256A  EFB9  F012         	goto	u3946
  4417  00256E  EFC1  F012         	goto	u3947
  4418  002572                     u3946:
  4419  002572  3422               	rlcf	(??_floorf+4)^0,w,c
  4420  002574  3222               	rrcf	(??_floorf+4)^0,f,c
  4421  002576  3221               	rrcf	(??_floorf+3)^0,f,c
  4422  002578  3220               	rrcf	(??_floorf+2)^0,f,c
  4423  00257A  321F               	rrcf	(??_floorf+1)^0,f,c
  4424  00257C  2E1E               	decfsz	??_floorf^0,f,c
  4425  00257E  EFB4  F012         	goto	u3945
  4426  002582                     u3947:
  4427  002582  C01F  F024         	movff	??_floorf+1,floorf@m
  4428  002586  C020  F025         	movff	??_floorf+2,floorf@m+1
  4429  00258A  C021  F026         	movff	??_floorf+3,floorf@m+2
  4430  00258E  C022  F027         	movff	??_floorf+4,floorf@m+3
  4431  002592  5024               	movf	floorf@m^0,w,c
  4432  002594  142A               	andwf	floorf@u^0,w,c
  4433  002596  6E1E               	movwf	??_floorf^0,c
  4434  002598  5025               	movf	(floorf@m+1)^0,w,c
  4435  00259A  142B               	andwf	(floorf@u+1)^0,w,c
  4436  00259C  6E1F               	movwf	(??_floorf+1)^0,c
  4437  00259E  5026               	movf	(floorf@m+2)^0,w,c
  4438  0025A0  142C               	andwf	(floorf@u+2)^0,w,c
  4439  0025A2  6E20               	movwf	(??_floorf+2)^0,c
  4440  0025A4  5027               	movf	(floorf@m+3)^0,w,c
  4441  0025A6  142D               	andwf	(floorf@u+3)^0,w,c
  4442  0025A8  6E21               	movwf	(??_floorf+3)^0,c
  4443  0025AA  501E               	movf	??_floorf^0,w,c
  4444  0025AC  101F               	iorwf	(??_floorf+1)^0,w,c
  4445  0025AE  1020               	iorwf	(??_floorf+2)^0,w,c
  4446  0025B0  1021               	iorwf	(??_floorf+3)^0,w,c
  4447  0025B2  A4D8               	btfss	status,2,c
  4448  0025B4  EFDE  F012         	goto	u3951
  4449  0025B8  EFE0  F012         	goto	u3950
  4450  0025BC                     u3951:
  4451  0025BC  EFE2  F012         	goto	l2999
  4452  0025C0                     u3950:
  4453  0025C0  EF99  F012         	goto	l2991
  4454  0025C4                     l2999:
  4455  0025C4  C02A  F01E         	movff	floorf@u,??_floorf
  4456  0025C8  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4457  0025CC  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4458  0025D0  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4459  0025D4  0E20               	movlw	32
  4460  0025D6  EFF2  F012         	goto	u3960
  4461  0025DA                     u3965:
  4462  0025DA  90D8               	bcf	status,0,c
  4463  0025DC  3221               	rrcf	(??_floorf+3)^0,f,c
  4464  0025DE  3220               	rrcf	(??_floorf+2)^0,f,c
  4465  0025E0  321F               	rrcf	(??_floorf+1)^0,f,c
  4466  0025E2  321E               	rrcf	??_floorf^0,f,c
  4467  0025E4                     u3960:
  4468  0025E4  2EE8               	decfsz	wreg,f,c
  4469  0025E6  EFED  F012         	goto	u3965
  4470  0025EA  501E               	movf	??_floorf^0,w,c
  4471  0025EC  101F               	iorwf	(??_floorf+1)^0,w,c
  4472  0025EE  1020               	iorwf	(??_floorf+2)^0,w,c
  4473  0025F0  1021               	iorwf	(??_floorf+3)^0,w,c
  4474  0025F2  B4D8               	btfsc	status,2,c
  4475  0025F4  EFFE  F012         	goto	u3971
  4476  0025F8  EF00  F013         	goto	u3970
  4477  0025FC                     u3971:
  4478  0025FC  EF08  F013         	goto	l1075
  4479  002600                     u3970:
  4480  002600  5024               	movf	floorf@m^0,w,c
  4481  002602  262A               	addwf	floorf@u^0,f,c
  4482  002604  5025               	movf	(floorf@m+1)^0,w,c
  4483  002606  222B               	addwfc	(floorf@u+1)^0,f,c
  4484  002608  5026               	movf	(floorf@m+2)^0,w,c
  4485  00260A  222C               	addwfc	(floorf@u+2)^0,f,c
  4486  00260C  5027               	movf	(floorf@m+3)^0,w,c
  4487  00260E  222D               	addwfc	(floorf@u+3)^0,f,c
  4488  002610                     l1075:
  4489  002610  1C24               	comf	floorf@m^0,w,c
  4490  002612  6E1E               	movwf	??_floorf^0,c
  4491  002614  1C25               	comf	(floorf@m+1)^0,w,c
  4492  002616  6E1F               	movwf	(??_floorf+1)^0,c
  4493  002618  1C26               	comf	(floorf@m+2)^0,w,c
  4494  00261A  6E20               	movwf	(??_floorf+2)^0,c
  4495  00261C  1C27               	comf	(floorf@m+3)^0,w,c
  4496  00261E  6E21               	movwf	(??_floorf+3)^0,c
  4497  002620  501E               	movf	??_floorf^0,w,c
  4498  002622  162A               	andwf	floorf@u^0,f,c
  4499  002624  501F               	movf	(??_floorf+1)^0,w,c
  4500  002626  162B               	andwf	(floorf@u+1)^0,f,c
  4501  002628  5020               	movf	(??_floorf+2)^0,w,c
  4502  00262A  162C               	andwf	(floorf@u+2)^0,f,c
  4503  00262C  5021               	movf	(??_floorf+3)^0,w,c
  4504  00262E  162D               	andwf	(floorf@u+3)^0,f,c
  4505  002630  EF5E  F013         	goto	l3011
  4506  002634                     l3003:
  4507  002634  C02A  F01E         	movff	floorf@u,??_floorf
  4508  002638  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4509  00263C  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4510  002640  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4511  002644  0E20               	movlw	32
  4512  002646  EF2A  F013         	goto	u3980
  4513  00264A                     u3985:
  4514  00264A  90D8               	bcf	status,0,c
  4515  00264C  3221               	rrcf	(??_floorf+3)^0,f,c
  4516  00264E  3220               	rrcf	(??_floorf+2)^0,f,c
  4517  002650  321F               	rrcf	(??_floorf+1)^0,f,c
  4518  002652  321E               	rrcf	??_floorf^0,f,c
  4519  002654                     u3980:
  4520  002654  2EE8               	decfsz	wreg,f,c
  4521  002656  EF25  F013         	goto	u3985
  4522  00265A  501E               	movf	??_floorf^0,w,c
  4523  00265C  101F               	iorwf	(??_floorf+1)^0,w,c
  4524  00265E  1020               	iorwf	(??_floorf+2)^0,w,c
  4525  002660  1021               	iorwf	(??_floorf+3)^0,w,c
  4526  002662  A4D8               	btfss	status,2,c
  4527  002664  EF36  F013         	goto	u3991
  4528  002668  EF38  F013         	goto	u3990
  4529  00266C                     u3991:
  4530  00266C  EF42  F013         	goto	l3007
  4531  002670                     u3990:
  4532  002670  0E00               	movlw	0
  4533  002672  6E2A               	movwf	floorf@u^0,c
  4534  002674  0E00               	movlw	0
  4535  002676  6E2B               	movwf	(floorf@u+1)^0,c
  4536  002678  0E00               	movlw	0
  4537  00267A  6E2C               	movwf	(floorf@u+2)^0,c
  4538  00267C  0E00               	movlw	0
  4539  00267E  6E2D               	movwf	(floorf@u+3)^0,c
  4540  002680  EF5E  F013         	goto	l3011
  4541  002684                     l3007:
  4542  002684  90D8               	bcf	status,0,c
  4543  002686  342A               	rlcf	floorf@u^0,w,c
  4544  002688  6E1E               	movwf	??_floorf^0,c
  4545  00268A  342B               	rlcf	(floorf@u+1)^0,w,c
  4546  00268C  6E1F               	movwf	(??_floorf+1)^0,c
  4547  00268E  342C               	rlcf	(floorf@u+2)^0,w,c
  4548  002690  6E20               	movwf	(??_floorf+2)^0,c
  4549  002692  342D               	rlcf	(floorf@u+3)^0,w,c
  4550  002694  6E21               	movwf	(??_floorf+3)^0,c
  4551  002696  501E               	movf	??_floorf^0,w,c
  4552  002698  101F               	iorwf	(??_floorf+1)^0,w,c
  4553  00269A  1020               	iorwf	(??_floorf+2)^0,w,c
  4554  00269C  1021               	iorwf	(??_floorf+3)^0,w,c
  4555  00269E  B4D8               	btfsc	status,2,c
  4556  0026A0  EF54  F013         	goto	u4001
  4557  0026A4  EF56  F013         	goto	u4000
  4558  0026A8                     u4001:
  4559  0026A8  EF5E  F013         	goto	l3011
  4560  0026AC                     u4000:
  4561  0026AC  0E00               	movlw	0
  4562  0026AE  6E2A               	movwf	floorf@u^0,c
  4563  0026B0  0E00               	movlw	0
  4564  0026B2  6E2B               	movwf	(floorf@u+1)^0,c
  4565  0026B4  0E80               	movlw	128
  4566  0026B6  6E2C               	movwf	(floorf@u+2)^0,c
  4567  0026B8  0EBF               	movlw	191
  4568  0026BA  6E2D               	movwf	(floorf@u+3)^0,c
  4569  0026BC                     l3011:
  4570  0026BC  C02A  F01A         	movff	floorf@u,?_floorf
  4571  0026C0  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4572  0026C4  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4573  0026C8  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4574  0026CC                     l1072:
  4575  0026CC  0012               	return		;funcret
  4576  0026CE                     __end_of_floorf:
  4577                           	opt callstack 0
  4578                           
  4579 ;; *************** function ___fpclassifyf *****************
  4580 ;; Defined at:
  4581 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  x               4    0[COMRAM] float 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  u               4   10[COMRAM] struct .
  4586 ;;  e               2    8[COMRAM] int 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  2    0[COMRAM] int 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4596 ;;      Params:         4       0       0       0       0       0       0       0       0
  4597 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4598 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4599 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4600 ;;Total ram usage:       14 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_efgtoa
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text15
  4610  002F66                     __ptext15:
  4611                           	opt callstack 0
  4612  002F66                     ___fpclassifyf:
  4613                           	opt callstack 26
  4614  002F66  C0B4  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4615  002F6A  C0B5  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4616  002F6E  C0B6  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4617  002F72  C0B7  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4618  002F76  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4619  002F7A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4620  002F7E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4621  002F82  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4622  002F86  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4623  002F8A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4624  002F8E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4625  002F92  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4626  002F96  0E18               	movlw	24
  4627  002F98  EFD3  F017         	goto	u3790
  4628  002F9C                     u3795:
  4629  002F9C  90D8               	bcf	status,0,c
  4630  002F9E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4631  002FA0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4632  002FA2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4633  002FA4  3205               	rrcf	??___fpclassifyf^0,f,c
  4634  002FA6                     u3790:
  4635  002FA6  2EE8               	decfsz	wreg,f,c
  4636  002FA8  EFCE  F017         	goto	u3795
  4637  002FAC  5005               	movf	??___fpclassifyf^0,w,c
  4638  002FAE  6E09               	movwf	___fpclassifyf@e^0,c
  4639  002FB0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4640  002FB2  5009               	movf	___fpclassifyf@e^0,w,c
  4641  002FB4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4642  002FB6  A4D8               	btfss	status,2,c
  4643  002FB8  EFE0  F017         	goto	u3801
  4644  002FBC  EFE2  F017         	goto	u3800
  4645  002FC0                     u3801:
  4646  002FC0  EF02  F018         	goto	l2963
  4647  002FC4                     u3800:
  4648  002FC4  90D8               	bcf	status,0,c
  4649  002FC6  340B               	rlcf	___fpclassifyf@u^0,w,c
  4650  002FC8  6E05               	movwf	??___fpclassifyf^0,c
  4651  002FCA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4652  002FCC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4653  002FCE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4654  002FD0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4655  002FD2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4656  002FD4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4657  002FD6  5005               	movf	??___fpclassifyf^0,w,c
  4658  002FD8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4659  002FDA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4660  002FDC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4661  002FDE  A4D8               	btfss	status,2,c
  4662  002FE0  EFF4  F017         	goto	u3811
  4663  002FE4  EFF6  F017         	goto	u3810
  4664  002FE8                     u3811:
  4665  002FE8  EFFC  F017         	goto	l2959
  4666  002FEC                     u3810:
  4667  002FEC  0E00               	movlw	0
  4668  002FEE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4669  002FF0  0E02               	movlw	2
  4670  002FF2  6E01               	movwf	?___fpclassifyf^0,c
  4671  002FF4  EF31  F018         	goto	l1034
  4672  002FF8                     l2959:
  4673  002FF8  0E00               	movlw	0
  4674  002FFA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4675  002FFC  0E03               	movlw	3
  4676  002FFE  6E01               	movwf	?___fpclassifyf^0,c
  4677  003000  EF31  F018         	goto	l1034
  4678  003004                     l2963:
  4679  003004  2809               	incf	___fpclassifyf@e^0,w,c
  4680  003006  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4681  003008  A4D8               	btfss	status,2,c
  4682  00300A  EF09  F018         	goto	u3821
  4683  00300E  EF0B  F018         	goto	u3820
  4684  003012                     u3821:
  4685  003012  EF2D  F018         	goto	l2969
  4686  003016                     u3820:
  4687  003016  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4688  00301A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4689  00301E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4690  003022  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4691  003026  0E09               	movlw	9
  4692  003028                     u3835:
  4693  003028  90D8               	bcf	status,0,c
  4694  00302A  3605               	rlcf	??___fpclassifyf^0,f,c
  4695  00302C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4696  00302E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4697  003030  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4698  003032  2EE8               	decfsz	wreg,f,c
  4699  003034  EF14  F018         	goto	u3835
  4700  003038  5005               	movf	??___fpclassifyf^0,w,c
  4701  00303A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4702  00303C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4703  00303E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4704  003040  B4D8               	btfsc	status,2,c
  4705  003042  EF25  F018         	goto	u3841
  4706  003046  EF28  F018         	goto	u3840
  4707  00304A                     u3841:
  4708  00304A  0E01               	movlw	1
  4709  00304C  EF29  F018         	goto	u3850
  4710  003050                     u3840:
  4711  003050  0E00               	movlw	0
  4712  003052                     u3850:
  4713  003052  6E01               	movwf	?___fpclassifyf^0,c
  4714  003054  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4715  003056  EF31  F018         	goto	l1034
  4716  00305A                     l2969:
  4717  00305A  0E00               	movlw	0
  4718  00305C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4719  00305E  0E04               	movlw	4
  4720  003060  6E01               	movwf	?___fpclassifyf^0,c
  4721  003062                     l1034:
  4722  003062  0012               	return		;funcret
  4723  003064                     __end_of___fpclassifyf:
  4724                           	opt callstack 0
  4725                           
  4726 ;; *************** function ___fltol *****************
  4727 ;; Defined at:
  4728 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  f1              4    0[COMRAM] int 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  exp1            1    9[COMRAM] unsigned char 
  4733 ;;  sign1           1    8[COMRAM] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  4    0[COMRAM] long 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4743 ;;      Params:         4       0       0       0       0       0       0       0       0
  4744 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4745 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4746 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4747 ;;Total ram usage:       10 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_efgtoa
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text16
  4757  002D5C                     __ptext16:
  4758                           	opt callstack 0
  4759  002D5C                     ___fltol:
  4760                           	opt callstack 26
  4761  002D5C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4762  002D5E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4763  002D60  6E0A               	movwf	___fltol@exp1^0,c
  4764  002D62  500A               	movf	___fltol@exp1^0,w,c
  4765  002D64  A4D8               	btfss	status,2,c
  4766  002D66  EFB7  F016         	goto	u4661
  4767  002D6A  EFB9  F016         	goto	u4660
  4768  002D6E                     u4661:
  4769  002D6E  EFC3  F016         	goto	l3431
  4770  002D72                     u4660:
  4771  002D72                     l3427:
  4772  002D72  0E00               	movlw	0
  4773  002D74  6E01               	movwf	?___fltol^0,c
  4774  002D76  0E00               	movlw	0
  4775  002D78  6E02               	movwf	(?___fltol+1)^0,c
  4776  002D7A  0E00               	movlw	0
  4777  002D7C  6E03               	movwf	(?___fltol+2)^0,c
  4778  002D7E  0E00               	movlw	0
  4779  002D80  6E04               	movwf	(?___fltol+3)^0,c
  4780  002D82  EF30  F017         	goto	l650
  4781  002D86                     l3431:
  4782  002D86  C001  F005         	movff	___fltol@f1,??___fltol
  4783  002D8A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4784  002D8E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4785  002D92  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4786  002D96  0E20               	movlw	32
  4787  002D98  EFD3  F016         	goto	u4670
  4788  002D9C                     u4675:
  4789  002D9C  90D8               	bcf	status,0,c
  4790  002D9E  3208               	rrcf	(??___fltol+3)^0,f,c
  4791  002DA0  3207               	rrcf	(??___fltol+2)^0,f,c
  4792  002DA2  3206               	rrcf	(??___fltol+1)^0,f,c
  4793  002DA4  3205               	rrcf	??___fltol^0,f,c
  4794  002DA6                     u4670:
  4795  002DA6  2EE8               	decfsz	wreg,f,c
  4796  002DA8  EFCE  F016         	goto	u4675
  4797  002DAC  5005               	movf	??___fltol^0,w,c
  4798  002DAE  6E09               	movwf	___fltol@sign1^0,c
  4799  002DB0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4800  002DB2  0EFF               	movlw	255
  4801  002DB4  1601               	andwf	___fltol@f1^0,f,c
  4802  002DB6  0EFF               	movlw	255
  4803  002DB8  1602               	andwf	(___fltol@f1+1)^0,f,c
  4804  002DBA  0EFF               	movlw	255
  4805  002DBC  1603               	andwf	(___fltol@f1+2)^0,f,c
  4806  002DBE  0E00               	movlw	0
  4807  002DC0  1604               	andwf	(___fltol@f1+3)^0,f,c
  4808  002DC2  0E96               	movlw	150
  4809  002DC4  5E0A               	subwf	___fltol@exp1^0,f,c
  4810  002DC6  BE0A               	btfsc	___fltol@exp1^0,7,c
  4811  002DC8  EFEA  F016         	goto	u4680
  4812  002DCC  EFE8  F016         	goto	u4681
  4813  002DD0                     u4681:
  4814  002DD0  EF00  F017         	goto	l3451
  4815  002DD4                     u4680:
  4816  002DD4  500A               	movf	___fltol@exp1^0,w,c
  4817  002DD6  0A80               	xorlw	128
  4818  002DD8  0F97               	addlw	151
  4819  002DDA  B0D8               	btfsc	status,0,c
  4820  002DDC  EFF2  F016         	goto	u4691
  4821  002DE0  EFF4  F016         	goto	u4690
  4822  002DE4                     u4691:
  4823  002DE4  EFF6  F016         	goto	l3447
  4824  002DE8                     u4690:
  4825  002DE8  EFB9  F016         	goto	l3427
  4826  002DEC                     l3447:
  4827  002DEC  90D8               	bcf	status,0,c
  4828  002DEE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4829  002DF0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4830  002DF2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4831  002DF4  3201               	rrcf	___fltol@f1^0,f,c
  4832  002DF6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4833  002DF8  EFF6  F016         	goto	l3447
  4834  002DFC  EF18  F017         	goto	l3461
  4835  002E00                     l3451:
  4836  002E00  0E1F               	movlw	31
  4837  002E02  640A               	cpfsgt	___fltol@exp1^0,c
  4838  002E04  EF06  F017         	goto	u4701
  4839  002E08  EF08  F017         	goto	u4700
  4840  002E0C                     u4701:
  4841  002E0C  EF10  F017         	goto	l3459
  4842  002E10                     u4700:
  4843  002E10  EFB9  F016         	goto	l3427
  4844  002E14                     l3457:
  4845  002E14  90D8               	bcf	status,0,c
  4846  002E16  3601               	rlcf	___fltol@f1^0,f,c
  4847  002E18  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4848  002E1A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4849  002E1C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4850  002E1E  060A               	decf	___fltol@exp1^0,f,c
  4851  002E20                     l3459:
  4852  002E20  500A               	movf	___fltol@exp1^0,w,c
  4853  002E22  A4D8               	btfss	status,2,c
  4854  002E24  EF16  F017         	goto	u4711
  4855  002E28  EF18  F017         	goto	u4710
  4856  002E2C                     u4711:
  4857  002E2C  EF0A  F017         	goto	l3457
  4858  002E30                     u4710:
  4859  002E30                     l3461:
  4860  002E30  5009               	movf	___fltol@sign1^0,w,c
  4861  002E32  B4D8               	btfsc	status,2,c
  4862  002E34  EF1E  F017         	goto	u4721
  4863  002E38  EF20  F017         	goto	u4720
  4864  002E3C                     u4721:
  4865  002E3C  EF28  F017         	goto	l3465
  4866  002E40                     u4720:
  4867  002E40  1E04               	comf	(___fltol@f1+3)^0,f,c
  4868  002E42  1E03               	comf	(___fltol@f1+2)^0,f,c
  4869  002E44  1E02               	comf	(___fltol@f1+1)^0,f,c
  4870  002E46  6C01               	negf	___fltol@f1^0,c
  4871  002E48  0E00               	movlw	0
  4872  002E4A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4873  002E4C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4874  002E4E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4875  002E50                     l3465:
  4876  002E50  C001  F001         	movff	___fltol@f1,?___fltol
  4877  002E54  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4878  002E58  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4879  002E5C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4880  002E60                     l650:
  4881  002E60  0012               	return		;funcret
  4882  002E62                     __end_of___fltol:
  4883                           	opt callstack 0
  4884                           
  4885 ;; *************** function ___flsub *****************
  4886 ;; Defined at:
  4887 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  b               4   25[COMRAM] long 
  4890 ;;  a               4   29[COMRAM] long 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  4   25[COMRAM] long 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4902 ;;      Params:         8       0       0       0       0       0       0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4905 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4906 ;;Total ram usage:        8 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    1
  4909 ;; This function calls:
  4910 ;;		___fladd
  4911 ;; This function is called by:
  4912 ;;		_efgtoa
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text17
  4917  0038D8                     __ptext17:
  4918                           	opt callstack 0
  4919  0038D8                     ___flsub:
  4920                           	opt callstack 25
  4921  0038D8  0E00               	movlw	0
  4922  0038DA  1A1E               	xorwf	___flsub@a^0,f,c
  4923  0038DC  0E00               	movlw	0
  4924  0038DE  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4925  0038E0  0E00               	movlw	0
  4926  0038E2  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4927  0038E4  0E80               	movlw	128
  4928  0038E6  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4929  0038E8  C01A  F001         	movff	___flsub@b,___fladd@b
  4930  0038EC  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4931  0038F0  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4932  0038F4  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4933  0038F8  C01E  F005         	movff	___flsub@a,___fladd@a
  4934  0038FC  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4935  003900  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4936  003904  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4937  003908  ECEC  F009         	call	___fladd	;wreg free
  4938  00390C  C001  F01A         	movff	?___fladd,?___flsub
  4939  003910  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4940  003914  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4941  003918  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4942  00391C  0012               	return		;funcret
  4943  00391E                     __end_of___flsub:
  4944                           	opt callstack 0
  4945                           
  4946 ;; *************** function ___fladd *****************
  4947 ;; Defined at:
  4948 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  b               4    0[COMRAM] long 
  4951 ;;  a               4    4[COMRAM] long 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  grs             1   15[COMRAM] unsigned char 
  4954 ;;  bexp            1   14[COMRAM] unsigned char 
  4955 ;;  aexp            1   13[COMRAM] unsigned char 
  4956 ;;  signs           1   12[COMRAM] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  4    0[COMRAM] unsigned char 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4966 ;;      Params:         8       0       0       0       0       0       0       0       0
  4967 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4968 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4969 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4970 ;;Total ram usage:       16 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_efgtoa
  4976 ;;		___flsub
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text18
  4981  0013D8                     __ptext18:
  4982                           	opt callstack 0
  4983  0013D8                     ___fladd:
  4984                           	opt callstack 25
  4985  0013D8  5004               	movf	(___fladd@b+3)^0,w,c
  4986  0013DA  0B80               	andlw	128
  4987  0013DC  6E0D               	movwf	___fladd@signs^0,c
  4988  0013DE  5004               	movf	(___fladd@b+3)^0,w,c
  4989  0013E0  2404               	addwf	(___fladd@b+3)^0,w,c
  4990  0013E2  6E0F               	movwf	___fladd@bexp^0,c
  4991  0013E4  AE03               	btfss	(___fladd@b+2)^0,7,c
  4992  0013E6  EFF7  F009         	goto	u3041
  4993  0013EA  EFF9  F009         	goto	u3040
  4994  0013EE                     u3041:
  4995  0013EE  EFFA  F009         	goto	l2729
  4996  0013F2                     u3040:
  4997  0013F2  800F               	bsf	___fladd@bexp^0,0,c
  4998  0013F4                     l2729:
  4999  0013F4  500F               	movf	___fladd@bexp^0,w,c
  5000  0013F6  B4D8               	btfsc	status,2,c
  5001  0013F8  EF00  F00A         	goto	u3051
  5002  0013FC  EF02  F00A         	goto	u3050
  5003  001400                     u3051:
  5004  001400  EF17  F00A         	goto	l2739
  5005  001404                     u3050:
  5006  001404  280F               	incf	___fladd@bexp^0,w,c
  5007  001406  A4D8               	btfss	status,2,c
  5008  001408  EF08  F00A         	goto	u3061
  5009  00140C  EF0A  F00A         	goto	u3060
  5010  001410                     u3061:
  5011  001410  EF12  F00A         	goto	l2735
  5012  001414                     u3060:
  5013  001414  0E00               	movlw	0
  5014  001416  6E01               	movwf	___fladd@b^0,c
  5015  001418  0E00               	movlw	0
  5016  00141A  6E02               	movwf	(___fladd@b+1)^0,c
  5017  00141C  0E00               	movlw	0
  5018  00141E  6E03               	movwf	(___fladd@b+2)^0,c
  5019  001420  0E00               	movlw	0
  5020  001422  6E04               	movwf	(___fladd@b+3)^0,c
  5021  001424                     l2735:
  5022  001424  8E03               	bsf	(___fladd@b+2)^0,7,c
  5023  001426  0E00               	movlw	0
  5024  001428  6E04               	movwf	(___fladd@b+3)^0,c
  5025  00142A  EF1F  F00A         	goto	l2741
  5026  00142E                     l2739:
  5027  00142E  0E00               	movlw	0
  5028  001430  6E01               	movwf	___fladd@b^0,c
  5029  001432  0E00               	movlw	0
  5030  001434  6E02               	movwf	(___fladd@b+1)^0,c
  5031  001436  0E00               	movlw	0
  5032  001438  6E03               	movwf	(___fladd@b+2)^0,c
  5033  00143A  0E00               	movlw	0
  5034  00143C  6E04               	movwf	(___fladd@b+3)^0,c
  5035  00143E                     l2741:
  5036  00143E  5008               	movf	(___fladd@a+3)^0,w,c
  5037  001440  0B80               	andlw	128
  5038  001442  6E0E               	movwf	___fladd@aexp^0,c
  5039  001444  500D               	movf	___fladd@signs^0,w,c
  5040  001446  180E               	xorwf	___fladd@aexp^0,w,c
  5041  001448  B4D8               	btfsc	status,2,c
  5042  00144A  EF29  F00A         	goto	u3071
  5043  00144E  EF2B  F00A         	goto	u3070
  5044  001452                     u3071:
  5045  001452  EF2C  F00A         	goto	l2747
  5046  001456                     u3070:
  5047  001456  8C0D               	bsf	___fladd@signs^0,6,c
  5048  001458                     l2747:
  5049  001458  5008               	movf	(___fladd@a+3)^0,w,c
  5050  00145A  2408               	addwf	(___fladd@a+3)^0,w,c
  5051  00145C  6E0E               	movwf	___fladd@aexp^0,c
  5052  00145E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5053  001460  EF34  F00A         	goto	u3081
  5054  001464  EF36  F00A         	goto	u3080
  5055  001468                     u3081:
  5056  001468  EF37  F00A         	goto	l2753
  5057  00146C                     u3080:
  5058  00146C  800E               	bsf	___fladd@aexp^0,0,c
  5059  00146E                     l2753:
  5060  00146E  500E               	movf	___fladd@aexp^0,w,c
  5061  001470  B4D8               	btfsc	status,2,c
  5062  001472  EF3D  F00A         	goto	u3091
  5063  001476  EF3F  F00A         	goto	u3090
  5064  00147A                     u3091:
  5065  00147A  EF54  F00A         	goto	l2763
  5066  00147E                     u3090:
  5067  00147E  280E               	incf	___fladd@aexp^0,w,c
  5068  001480  A4D8               	btfss	status,2,c
  5069  001482  EF45  F00A         	goto	u3101
  5070  001486  EF47  F00A         	goto	u3100
  5071  00148A                     u3101:
  5072  00148A  EF4F  F00A         	goto	l2759
  5073  00148E                     u3100:
  5074  00148E  0E00               	movlw	0
  5075  001490  6E05               	movwf	___fladd@a^0,c
  5076  001492  0E00               	movlw	0
  5077  001494  6E06               	movwf	(___fladd@a+1)^0,c
  5078  001496  0E00               	movlw	0
  5079  001498  6E07               	movwf	(___fladd@a+2)^0,c
  5080  00149A  0E00               	movlw	0
  5081  00149C  6E08               	movwf	(___fladd@a+3)^0,c
  5082  00149E                     l2759:
  5083  00149E  8E07               	bsf	(___fladd@a+2)^0,7,c
  5084  0014A0  0E00               	movlw	0
  5085  0014A2  6E08               	movwf	(___fladd@a+3)^0,c
  5086  0014A4  EF5C  F00A         	goto	l2765
  5087  0014A8                     l2763:
  5088  0014A8  0E00               	movlw	0
  5089  0014AA  6E05               	movwf	___fladd@a^0,c
  5090  0014AC  0E00               	movlw	0
  5091  0014AE  6E06               	movwf	(___fladd@a+1)^0,c
  5092  0014B0  0E00               	movlw	0
  5093  0014B2  6E07               	movwf	(___fladd@a+2)^0,c
  5094  0014B4  0E00               	movlw	0
  5095  0014B6  6E08               	movwf	(___fladd@a+3)^0,c
  5096  0014B8                     l2765:
  5097  0014B8  500F               	movf	___fladd@bexp^0,w,c
  5098  0014BA  5C0E               	subwf	___fladd@aexp^0,w,c
  5099  0014BC  B0D8               	btfsc	status,0,c
  5100  0014BE  EF63  F00A         	goto	u3111
  5101  0014C2  EF65  F00A         	goto	u3110
  5102  0014C6                     u3111:
  5103  0014C6  EF8C  F00A         	goto	l2801
  5104  0014CA                     u3110:
  5105  0014CA  AC0D               	btfss	___fladd@signs^0,6,c
  5106  0014CC  EF6A  F00A         	goto	u3121
  5107  0014D0  EF6C  F00A         	goto	u3120
  5108  0014D4                     u3121:
  5109  0014D4  EF6E  F00A         	goto	l2771
  5110  0014D8                     u3120:
  5111  0014D8  0E80               	movlw	128
  5112  0014DA  1A0D               	xorwf	___fladd@signs^0,f,c
  5113  0014DC                     l2771:
  5114  0014DC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5115  0014E0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5116  0014E4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5117  0014E8  C001  F010         	movff	___fladd@b,___fladd@grs
  5118  0014EC  C005  F001         	movff	___fladd@a,___fladd@b
  5119  0014F0  C010  F005         	movff	___fladd@grs,___fladd@a
  5120  0014F4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5121  0014F8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5122  0014FC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5123  001500  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5124  001504  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5125  001508  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5126  00150C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5127  001510  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5128  001514  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5129  001518                     l2801:
  5130  001518  0E00               	movlw	0
  5131  00151A  6E10               	movwf	___fladd@grs^0,c
  5132  00151C  500F               	movf	___fladd@bexp^0,w,c
  5133  00151E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5134  001522  6A0A               	clrf	(??___fladd+1)^0,c
  5135  001524  5E09               	subwf	??___fladd^0,f,c
  5136  001526  0E00               	movlw	0
  5137  001528  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5138  00152A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5139  00152C  EFA1  F00A         	goto	u3131
  5140  001530  500A               	movf	(??___fladd+1)^0,w,c
  5141  001532  E109               	bnz	u3130
  5142  001534  0E1A               	movlw	26
  5143  001536  5C09               	subwf	??___fladd^0,w,c
  5144  001538  A0D8               	btfss	status,0,c
  5145  00153A  EFA1  F00A         	goto	u3131
  5146  00153E  EFA3  F00A         	goto	u3130
  5147  001542                     u3131:
  5148  001542  EFDA  F00A         	goto	l882
  5149  001546                     u3130:
  5150  001546  5001               	movf	___fladd@b^0,w,c
  5151  001548  1002               	iorwf	(___fladd@b+1)^0,w,c
  5152  00154A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5153  00154C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5154  00154E  A4D8               	btfss	status,2,c
  5155  001550  EFAC  F00A         	goto	u3141
  5156  001554  EFAF  F00A         	goto	u3140
  5157  001558                     u3141:
  5158  001558  0E01               	movlw	1
  5159  00155A  EFB0  F00A         	goto	u3150
  5160  00155E                     u3140:
  5161  00155E  0E00               	movlw	0
  5162  001560                     u3150:
  5163  001560  6E10               	movwf	___fladd@grs^0,c
  5164  001562  0E00               	movlw	0
  5165  001564  6E01               	movwf	___fladd@b^0,c
  5166  001566  0E00               	movlw	0
  5167  001568  6E02               	movwf	(___fladd@b+1)^0,c
  5168  00156A  0E00               	movlw	0
  5169  00156C  6E03               	movwf	(___fladd@b+2)^0,c
  5170  00156E  0E00               	movlw	0
  5171  001570  6E04               	movwf	(___fladd@b+3)^0,c
  5172  001572  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5173  001576  EFE3  F00A         	goto	l881
  5174  00157A                     l883:
  5175  00157A  A010               	btfss	___fladd@grs^0,0,c
  5176  00157C  EFC2  F00A         	goto	u3161
  5177  001580  EFC4  F00A         	goto	u3160
  5178  001584                     u3161:
  5179  001584  EFCA  F00A         	goto	l2813
  5180  001588                     u3160:
  5181  001588  90D8               	bcf	status,0,c
  5182  00158A  3010               	rrcf	___fladd@grs^0,w,c
  5183  00158C  0901               	iorlw	1
  5184  00158E  6E10               	movwf	___fladd@grs^0,c
  5185  001590  EFCC  F00A         	goto	l2815
  5186  001594                     l2813:
  5187  001594  90D8               	bcf	status,0,c
  5188  001596  3210               	rrcf	___fladd@grs^0,f,c
  5189  001598                     l2815:
  5190  001598  A001               	btfss	___fladd@b^0,0,c
  5191  00159A  EFD1  F00A         	goto	u3171
  5192  00159E  EFD3  F00A         	goto	u3170
  5193  0015A2                     u3171:
  5194  0015A2  EFD4  F00A         	goto	l2819
  5195  0015A6                     u3170:
  5196  0015A6  8E10               	bsf	___fladd@grs^0,7,c
  5197  0015A8                     l2819:
  5198  0015A8  3404               	rlcf	(___fladd@b+3)^0,w,c
  5199  0015AA  3204               	rrcf	(___fladd@b+3)^0,f,c
  5200  0015AC  3203               	rrcf	(___fladd@b+2)^0,f,c
  5201  0015AE  3202               	rrcf	(___fladd@b+1)^0,f,c
  5202  0015B0  3201               	rrcf	___fladd@b^0,f,c
  5203  0015B2  2A0F               	incf	___fladd@bexp^0,f,c
  5204  0015B4                     l882:
  5205  0015B4  500E               	movf	___fladd@aexp^0,w,c
  5206  0015B6  5C0F               	subwf	___fladd@bexp^0,w,c
  5207  0015B8  A0D8               	btfss	status,0,c
  5208  0015BA  EFE1  F00A         	goto	u3181
  5209  0015BE  EFE3  F00A         	goto	u3180
  5210  0015C2                     u3181:
  5211  0015C2  EFBD  F00A         	goto	l883
  5212  0015C6                     u3180:
  5213  0015C6                     l881:
  5214  0015C6  BC0D               	btfsc	___fladd@signs^0,6,c
  5215  0015C8  EFE8  F00A         	goto	u3191
  5216  0015CC  EFEA  F00A         	goto	u3190
  5217  0015D0                     u3191:
  5218  0015D0  EF2A  F00B         	goto	l2847
  5219  0015D4                     u3190:
  5220  0015D4  500F               	movf	___fladd@bexp^0,w,c
  5221  0015D6  A4D8               	btfss	status,2,c
  5222  0015D8  EFF0  F00A         	goto	u3201
  5223  0015DC  EFF2  F00A         	goto	u3200
  5224  0015E0                     u3201:
  5225  0015E0  EFFC  F00A         	goto	l2829
  5226  0015E4                     u3200:
  5227  0015E4  0E00               	movlw	0
  5228  0015E6  6E01               	movwf	?___fladd^0,c
  5229  0015E8  0E00               	movlw	0
  5230  0015EA  6E02               	movwf	(?___fladd+1)^0,c
  5231  0015EC  0E00               	movlw	0
  5232  0015EE  6E03               	movwf	(?___fladd+2)^0,c
  5233  0015F0  0E00               	movlw	0
  5234  0015F2  6E04               	movwf	(?___fladd+3)^0,c
  5235  0015F4  EF4B  F00C         	goto	l890
  5236  0015F8                     l2829:
  5237  0015F8  5005               	movf	___fladd@a^0,w,c
  5238  0015FA  2601               	addwf	___fladd@b^0,f,c
  5239  0015FC  5006               	movf	(___fladd@a+1)^0,w,c
  5240  0015FE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5241  001600  5007               	movf	(___fladd@a+2)^0,w,c
  5242  001602  2203               	addwfc	(___fladd@b+2)^0,f,c
  5243  001604  5008               	movf	(___fladd@a+3)^0,w,c
  5244  001606  2204               	addwfc	(___fladd@b+3)^0,f,c
  5245  001608  A004               	btfss	(___fladd@b+3)^0,0,c
  5246  00160A  EF09  F00B         	goto	u3211
  5247  00160E  EF0B  F00B         	goto	u3210
  5248  001612                     u3211:
  5249  001612  EFB7  F00B         	goto	l2883
  5250  001616                     u3210:
  5251  001616  A010               	btfss	___fladd@grs^0,0,c
  5252  001618  EF10  F00B         	goto	u3221
  5253  00161C  EF12  F00B         	goto	u3220
  5254  001620                     u3221:
  5255  001620  EF18  F00B         	goto	l2837
  5256  001624                     u3220:
  5257  001624  90D8               	bcf	status,0,c
  5258  001626  3010               	rrcf	___fladd@grs^0,w,c
  5259  001628  0901               	iorlw	1
  5260  00162A  6E10               	movwf	___fladd@grs^0,c
  5261  00162C  EF1A  F00B         	goto	l2839
  5262  001630                     l2837:
  5263  001630  90D8               	bcf	status,0,c
  5264  001632  3210               	rrcf	___fladd@grs^0,f,c
  5265  001634                     l2839:
  5266  001634  A001               	btfss	___fladd@b^0,0,c
  5267  001636  EF1F  F00B         	goto	u3231
  5268  00163A  EF21  F00B         	goto	u3230
  5269  00163E                     u3231:
  5270  00163E  EF22  F00B         	goto	l2843
  5271  001642                     u3230:
  5272  001642  8E10               	bsf	___fladd@grs^0,7,c
  5273  001644                     l2843:
  5274  001644  3404               	rlcf	(___fladd@b+3)^0,w,c
  5275  001646  3204               	rrcf	(___fladd@b+3)^0,f,c
  5276  001648  3203               	rrcf	(___fladd@b+2)^0,f,c
  5277  00164A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5278  00164C  3201               	rrcf	___fladd@b^0,f,c
  5279  00164E  2A0F               	incf	___fladd@bexp^0,f,c
  5280  001650  EFB7  F00B         	goto	l2883
  5281  001654                     l2847:
  5282  001654  5005               	movf	___fladd@a^0,w,c
  5283  001656  5C01               	subwf	___fladd@b^0,w,c
  5284  001658  5006               	movf	(___fladd@a+1)^0,w,c
  5285  00165A  5802               	subwfb	(___fladd@b+1)^0,w,c
  5286  00165C  5007               	movf	(___fladd@a+2)^0,w,c
  5287  00165E  5803               	subwfb	(___fladd@b+2)^0,w,c
  5288  001660  5004               	movf	(___fladd@b+3)^0,w,c
  5289  001662  0A80               	xorlw	128
  5290  001664  6E09               	movwf	??___fladd^0,c
  5291  001666  5008               	movf	(___fladd@a+3)^0,w,c
  5292  001668  0A80               	xorlw	128
  5293  00166A  5809               	subwfb	??___fladd^0,w,c
  5294  00166C  B0D8               	btfsc	status,0,c
  5295  00166E  EF3B  F00B         	goto	u3241
  5296  001672  EF3D  F00B         	goto	u3240
  5297  001676                     u3241:
  5298  001676  EF68  F00B         	goto	l2857
  5299  00167A                     u3240:
  5300  00167A  5001               	movf	___fladd@b^0,w,c
  5301  00167C  5C05               	subwf	___fladd@a^0,w,c
  5302  00167E  6E09               	movwf	??___fladd^0,c
  5303  001680  5002               	movf	(___fladd@b+1)^0,w,c
  5304  001682  5806               	subwfb	(___fladd@a+1)^0,w,c
  5305  001684  6E0A               	movwf	(??___fladd+1)^0,c
  5306  001686  5003               	movf	(___fladd@b+2)^0,w,c
  5307  001688  5807               	subwfb	(___fladd@a+2)^0,w,c
  5308  00168A  6E0B               	movwf	(??___fladd+2)^0,c
  5309  00168C  5004               	movf	(___fladd@b+3)^0,w,c
  5310  00168E  5808               	subwfb	(___fladd@a+3)^0,w,c
  5311  001690  6E0C               	movwf	(??___fladd+3)^0,c
  5312  001692  0EFF               	movlw	255
  5313  001694  2409               	addwf	??___fladd^0,w,c
  5314  001696  6E01               	movwf	___fladd@b^0,c
  5315  001698  0EFF               	movlw	255
  5316  00169A  200A               	addwfc	(??___fladd+1)^0,w,c
  5317  00169C  6E02               	movwf	(___fladd@b+1)^0,c
  5318  00169E  0EFF               	movlw	255
  5319  0016A0  200B               	addwfc	(??___fladd+2)^0,w,c
  5320  0016A2  6E03               	movwf	(___fladd@b+2)^0,c
  5321  0016A4  0EFF               	movlw	255
  5322  0016A6  200C               	addwfc	(??___fladd+3)^0,w,c
  5323  0016A8  6E04               	movwf	(___fladd@b+3)^0,c
  5324  0016AA  0E80               	movlw	128
  5325  0016AC  1A0D               	xorwf	___fladd@signs^0,f,c
  5326  0016AE  6C10               	negf	___fladd@grs^0,c
  5327  0016B0  5010               	movf	___fladd@grs^0,w,c
  5328  0016B2  A4D8               	btfss	status,2,c
  5329  0016B4  EF5E  F00B         	goto	u3251
  5330  0016B8  EF60  F00B         	goto	u3250
  5331  0016BC                     u3251:
  5332  0016BC  EF70  F00B         	goto	l898
  5333  0016C0                     u3250:
  5334  0016C0  0E01               	movlw	1
  5335  0016C2  2601               	addwf	___fladd@b^0,f,c
  5336  0016C4  0E00               	movlw	0
  5337  0016C6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5338  0016C8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5339  0016CA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5340  0016CC  EF70  F00B         	goto	l898
  5341  0016D0                     l2857:
  5342  0016D0  5005               	movf	___fladd@a^0,w,c
  5343  0016D2  5E01               	subwf	___fladd@b^0,f,c
  5344  0016D4  5006               	movf	(___fladd@a+1)^0,w,c
  5345  0016D6  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5346  0016D8  5007               	movf	(___fladd@a+2)^0,w,c
  5347  0016DA  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5348  0016DC  5008               	movf	(___fladd@a+3)^0,w,c
  5349  0016DE  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5350  0016E0                     l898:
  5351  0016E0  5001               	movf	___fladd@b^0,w,c
  5352  0016E2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5353  0016E4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5354  0016E6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5355  0016E8  A4D8               	btfss	status,2,c
  5356  0016EA  EF79  F00B         	goto	u3261
  5357  0016EE  EF7B  F00B         	goto	u3260
  5358  0016F2                     u3261:
  5359  0016F2  EFB0  F00B         	goto	l2881
  5360  0016F6                     u3260:
  5361  0016F6  5010               	movf	___fladd@grs^0,w,c
  5362  0016F8  A4D8               	btfss	status,2,c
  5363  0016FA  EF81  F00B         	goto	u3271
  5364  0016FE  EF83  F00B         	goto	u3270
  5365  001702                     u3271:
  5366  001702  EFB0  F00B         	goto	l2881
  5367  001706                     u3270:
  5368  001706  0E00               	movlw	0
  5369  001708  6E01               	movwf	?___fladd^0,c
  5370  00170A  0E00               	movlw	0
  5371  00170C  6E02               	movwf	(?___fladd+1)^0,c
  5372  00170E  0E00               	movlw	0
  5373  001710  6E03               	movwf	(?___fladd+2)^0,c
  5374  001712  0E00               	movlw	0
  5375  001714  6E04               	movwf	(?___fladd+3)^0,c
  5376  001716  EF4B  F00C         	goto	l890
  5377  00171A                     l2865:
  5378  00171A  90D8               	bcf	status,0,c
  5379  00171C  3601               	rlcf	___fladd@b^0,f,c
  5380  00171E  3602               	rlcf	(___fladd@b+1)^0,f,c
  5381  001720  3603               	rlcf	(___fladd@b+2)^0,f,c
  5382  001722  3604               	rlcf	(___fladd@b+3)^0,f,c
  5383  001724  AE10               	btfss	___fladd@grs^0,7,c
  5384  001726  EF97  F00B         	goto	u3281
  5385  00172A  EF99  F00B         	goto	u3280
  5386  00172E                     u3281:
  5387  00172E  EF9A  F00B         	goto	l2871
  5388  001732                     u3280:
  5389  001732  8001               	bsf	___fladd@b^0,0,c
  5390  001734                     l2871:
  5391  001734  A010               	btfss	___fladd@grs^0,0,c
  5392  001736  EF9F  F00B         	goto	u3291
  5393  00173A  EFA1  F00B         	goto	u3290
  5394  00173E                     u3291:
  5395  00173E  EFA5  F00B         	goto	l2875
  5396  001742                     u3290:
  5397  001742  80D8               	bsf	status,0,c
  5398  001744  3610               	rlcf	___fladd@grs^0,f,c
  5399  001746  EFA7  F00B         	goto	l2877
  5400  00174A                     l2875:
  5401  00174A  90D8               	bcf	status,0,c
  5402  00174C  3610               	rlcf	___fladd@grs^0,f,c
  5403  00174E                     l2877:
  5404  00174E  500F               	movf	___fladd@bexp^0,w,c
  5405  001750  B4D8               	btfsc	status,2,c
  5406  001752  EFAD  F00B         	goto	u3301
  5407  001756  EFAF  F00B         	goto	u3300
  5408  00175A                     u3301:
  5409  00175A  EFB0  F00B         	goto	l2881
  5410  00175E                     u3300:
  5411  00175E  060F               	decf	___fladd@bexp^0,f,c
  5412  001760                     l2881:
  5413  001760  AE03               	btfss	(___fladd@b+2)^0,7,c
  5414  001762  EFB5  F00B         	goto	u3311
  5415  001766  EFB7  F00B         	goto	u3310
  5416  00176A                     u3311:
  5417  00176A  EF8D  F00B         	goto	l2865
  5418  00176E                     u3310:
  5419  00176E                     l2883:
  5420  00176E  0E00               	movlw	0
  5421  001770  6E0E               	movwf	___fladd@aexp^0,c
  5422  001772  AE10               	btfss	___fladd@grs^0,7,c
  5423  001774  EFBE  F00B         	goto	u3321
  5424  001778  EFC0  F00B         	goto	u3320
  5425  00177C                     u3321:
  5426  00177C  EFD8  F00B         	goto	l907
  5427  001780                     u3320:
  5428  001780  C010  F009         	movff	___fladd@grs,??___fladd
  5429  001784  0E7F               	movlw	127
  5430  001786  1609               	andwf	??___fladd^0,f,c
  5431  001788  B4D8               	btfsc	status,2,c
  5432  00178A  EFC9  F00B         	goto	u3331
  5433  00178E  EFCB  F00B         	goto	u3330
  5434  001792                     u3331:
  5435  001792  EFCF  F00B         	goto	l908
  5436  001796                     u3330:
  5437  001796                     l2889:
  5438  001796  0E01               	movlw	1
  5439  001798  6E0E               	movwf	___fladd@aexp^0,c
  5440  00179A  EFD8  F00B         	goto	l907
  5441  00179E                     l908:
  5442  00179E  A001               	btfss	___fladd@b^0,0,c
  5443  0017A0  EFD4  F00B         	goto	u3341
  5444  0017A4  EFD6  F00B         	goto	u3340
  5445  0017A8                     u3341:
  5446  0017A8  EFD8  F00B         	goto	l907
  5447  0017AC                     u3340:
  5448  0017AC  EFCB  F00B         	goto	l2889
  5449  0017B0                     l907:
  5450  0017B0  500E               	movf	___fladd@aexp^0,w,c
  5451  0017B2  B4D8               	btfsc	status,2,c
  5452  0017B4  EFDE  F00B         	goto	u3351
  5453  0017B8  EFE0  F00B         	goto	u3350
  5454  0017BC                     u3351:
  5455  0017BC  EF0B  F00C         	goto	l2901
  5456  0017C0                     u3350:
  5457  0017C0  0E01               	movlw	1
  5458  0017C2  2601               	addwf	___fladd@b^0,f,c
  5459  0017C4  0E00               	movlw	0
  5460  0017C6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5461  0017C8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5462  0017CA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5463  0017CC  A004               	btfss	(___fladd@b+3)^0,0,c
  5464  0017CE  EFEB  F00B         	goto	u3361
  5465  0017D2  EFED  F00B         	goto	u3360
  5466  0017D6                     u3361:
  5467  0017D6  EF0B  F00C         	goto	l2901
  5468  0017DA                     u3360:
  5469  0017DA  C001  F009         	movff	___fladd@b,??___fladd
  5470  0017DE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5471  0017E2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5472  0017E6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5473  0017EA  340C               	rlcf	(??___fladd+3)^0,w,c
  5474  0017EC  320C               	rrcf	(??___fladd+3)^0,f,c
  5475  0017EE  320B               	rrcf	(??___fladd+2)^0,f,c
  5476  0017F0  320A               	rrcf	(??___fladd+1)^0,f,c
  5477  0017F2  3209               	rrcf	??___fladd^0,f,c
  5478  0017F4  C009  F001         	movff	??___fladd,___fladd@b
  5479  0017F8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5480  0017FC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5481  001800  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5482  001804  280F               	incf	___fladd@bexp^0,w,c
  5483  001806  B4D8               	btfsc	status,2,c
  5484  001808  EF08  F00C         	goto	u3371
  5485  00180C  EF0A  F00C         	goto	u3370
  5486  001810                     u3371:
  5487  001810  EF0B  F00C         	goto	l2901
  5488  001814                     u3370:
  5489  001814  2A0F               	incf	___fladd@bexp^0,f,c
  5490  001816                     l2901:
  5491  001816  280F               	incf	___fladd@bexp^0,w,c
  5492  001818  B4D8               	btfsc	status,2,c
  5493  00181A  EF11  F00C         	goto	u3381
  5494  00181E  EF13  F00C         	goto	u3380
  5495  001822                     u3381:
  5496  001822  EF1B  F00C         	goto	l2905
  5497  001826                     u3380:
  5498  001826  500F               	movf	___fladd@bexp^0,w,c
  5499  001828  A4D8               	btfss	status,2,c
  5500  00182A  EF19  F00C         	goto	u3391
  5501  00182E  EF1B  F00C         	goto	u3390
  5502  001832                     u3391:
  5503  001832  EF2D  F00C         	goto	l2909
  5504  001836                     u3390:
  5505  001836                     l2905:
  5506  001836  0E00               	movlw	0
  5507  001838  6E01               	movwf	___fladd@b^0,c
  5508  00183A  0E00               	movlw	0
  5509  00183C  6E02               	movwf	(___fladd@b+1)^0,c
  5510  00183E  0E00               	movlw	0
  5511  001840  6E03               	movwf	(___fladd@b+2)^0,c
  5512  001842  0E00               	movlw	0
  5513  001844  6E04               	movwf	(___fladd@b+3)^0,c
  5514  001846  500F               	movf	___fladd@bexp^0,w,c
  5515  001848  A4D8               	btfss	status,2,c
  5516  00184A  EF29  F00C         	goto	u3401
  5517  00184E  EF2B  F00C         	goto	u3400
  5518  001852                     u3401:
  5519  001852  EF2D  F00C         	goto	l2909
  5520  001856                     u3400:
  5521  001856  0E00               	movlw	0
  5522  001858  6E0D               	movwf	___fladd@signs^0,c
  5523  00185A                     l2909:
  5524  00185A  A00F               	btfss	___fladd@bexp^0,0,c
  5525  00185C  EF32  F00C         	goto	u3411
  5526  001860  EF34  F00C         	goto	u3410
  5527  001864                     u3411:
  5528  001864  EF37  F00C         	goto	l2913
  5529  001868                     u3410:
  5530  001868  8E03               	bsf	(___fladd@b+2)^0,7,c
  5531  00186A  EF38  F00C         	goto	l2915
  5532  00186E                     l2913:
  5533  00186E  9E03               	bcf	(___fladd@b+2)^0,7,c
  5534  001870                     l2915:
  5535  001870  90D8               	bcf	status,0,c
  5536  001872  300F               	rrcf	___fladd@bexp^0,w,c
  5537  001874  6E04               	movwf	(___fladd@b+3)^0,c
  5538  001876  AE0D               	btfss	___fladd@signs^0,7,c
  5539  001878  EF40  F00C         	goto	u3421
  5540  00187C  EF42  F00C         	goto	u3420
  5541  001880                     u3421:
  5542  001880  EF43  F00C         	goto	l2921
  5543  001884                     u3420:
  5544  001884  8E04               	bsf	(___fladd@b+3)^0,7,c
  5545  001886                     l2921:
  5546  001886  C001  F001         	movff	___fladd@b,?___fladd
  5547  00188A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5548  00188E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5549  001892  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5550  001896                     l890:
  5551  001896  0012               	return		;funcret
  5552  001898                     __end_of___fladd:
  5553                           	opt callstack 0
  5554                           
  5555 ;; *************** function ___flneg *****************
  5556 ;; Defined at:
  5557 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  f1              4    0[COMRAM] unsigned char 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  4    0[COMRAM] unsigned char 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5571 ;;      Params:         4       0       0       0       0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5574 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5575 ;;Total ram usage:        4 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_efgtoa
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text19
  5585  00399A                     __ptext19:
  5586                           	opt callstack 0
  5587  00399A                     ___flneg:
  5588                           	opt callstack 26
  5589  00399A  5001               	movf	___flneg@f1^0,w,c
  5590  00399C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5591  00399E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5592  0039A0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5593  0039A2  B4D8               	btfsc	status,2,c
  5594  0039A4  EFD6  F01C         	goto	u4651
  5595  0039A8  EFD8  F01C         	goto	u4650
  5596  0039AC                     u4651:
  5597  0039AC  EFE0  F01C         	goto	l3421
  5598  0039B0                     u4650:
  5599  0039B0  0E00               	movlw	0
  5600  0039B2  1A01               	xorwf	___flneg@f1^0,f,c
  5601  0039B4  0E00               	movlw	0
  5602  0039B6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5603  0039B8  0E00               	movlw	0
  5604  0039BA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5605  0039BC  0E80               	movlw	128
  5606  0039BE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5607  0039C0                     l3421:
  5608  0039C0  C001  F001         	movff	___flneg@f1,?___flneg
  5609  0039C4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5610  0039C8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5611  0039CC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5612  0039D0  0012               	return		;funcret
  5613  0039D2                     __end_of___flneg:
  5614                           	opt callstack 0
  5615                           
  5616 ;; *************** function ___flmul *****************
  5617 ;; Defined at:
  5618 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  b               4    0[COMRAM] unsigned char 
  5621 ;;  a               4    4[COMRAM] unsigned char 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  prod            4   19[COMRAM] struct .
  5624 ;;  grs             4   13[COMRAM] unsigned long 
  5625 ;;  temp            2   23[COMRAM] struct .
  5626 ;;  bexp            1   18[COMRAM] unsigned char 
  5627 ;;  aexp            1   17[COMRAM] unsigned char 
  5628 ;;  sign            1   12[COMRAM] unsigned char 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  4    0[COMRAM] unsigned char 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, prodl, prodh
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5638 ;;      Params:         8       0       0       0       0       0       0       0       0
  5639 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5640 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5641 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5642 ;;Total ram usage:       25 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_efgtoa
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text20
  5652  001CF8                     __ptext20:
  5653                           	opt callstack 0
  5654  001CF8                     ___flmul:
  5655                           	opt callstack 26
  5656  001CF8  5004               	movf	(___flmul@b+3)^0,w,c
  5657  001CFA  0B80               	andlw	128
  5658  001CFC  6E0D               	movwf	___flmul@sign^0,c
  5659  001CFE  5004               	movf	(___flmul@b+3)^0,w,c
  5660  001D00  2404               	addwf	(___flmul@b+3)^0,w,c
  5661  001D02  6E13               	movwf	___flmul@bexp^0,c
  5662  001D04  AE03               	btfss	(___flmul@b+2)^0,7,c
  5663  001D06  EF87  F00E         	goto	u4261
  5664  001D0A  EF89  F00E         	goto	u4260
  5665  001D0E                     u4261:
  5666  001D0E  EF8A  F00E         	goto	l3169
  5667  001D12                     u4260:
  5668  001D12  8013               	bsf	___flmul@bexp^0,0,c
  5669  001D14                     l3169:
  5670  001D14  5013               	movf	___flmul@bexp^0,w,c
  5671  001D16  B4D8               	btfsc	status,2,c
  5672  001D18  EF90  F00E         	goto	u4271
  5673  001D1C  EF92  F00E         	goto	u4270
  5674  001D20                     u4271:
  5675  001D20  EFA5  F00E         	goto	l3177
  5676  001D24                     u4270:
  5677  001D24  2813               	incf	___flmul@bexp^0,w,c
  5678  001D26  A4D8               	btfss	status,2,c
  5679  001D28  EF98  F00E         	goto	u4281
  5680  001D2C  EF9A  F00E         	goto	u4280
  5681  001D30                     u4281:
  5682  001D30  EFA2  F00E         	goto	l3175
  5683  001D34                     u4280:
  5684  001D34  0E00               	movlw	0
  5685  001D36  6E01               	movwf	___flmul@b^0,c
  5686  001D38  0E00               	movlw	0
  5687  001D3A  6E02               	movwf	(___flmul@b+1)^0,c
  5688  001D3C  0E00               	movlw	0
  5689  001D3E  6E03               	movwf	(___flmul@b+2)^0,c
  5690  001D40  0E00               	movlw	0
  5691  001D42  6E04               	movwf	(___flmul@b+3)^0,c
  5692  001D44                     l3175:
  5693  001D44  8E03               	bsf	(___flmul@b+2)^0,7,c
  5694  001D46  EFAD  F00E         	goto	l3179
  5695  001D4A                     l3177:
  5696  001D4A  0E00               	movlw	0
  5697  001D4C  6E01               	movwf	___flmul@b^0,c
  5698  001D4E  0E00               	movlw	0
  5699  001D50  6E02               	movwf	(___flmul@b+1)^0,c
  5700  001D52  0E00               	movlw	0
  5701  001D54  6E03               	movwf	(___flmul@b+2)^0,c
  5702  001D56  0E00               	movlw	0
  5703  001D58  6E04               	movwf	(___flmul@b+3)^0,c
  5704  001D5A                     l3179:
  5705  001D5A  5008               	movf	(___flmul@a+3)^0,w,c
  5706  001D5C  0B80               	andlw	128
  5707  001D5E  1A0D               	xorwf	___flmul@sign^0,f,c
  5708  001D60  5008               	movf	(___flmul@a+3)^0,w,c
  5709  001D62  2408               	addwf	(___flmul@a+3)^0,w,c
  5710  001D64  6E12               	movwf	___flmul@aexp^0,c
  5711  001D66  AE07               	btfss	(___flmul@a+2)^0,7,c
  5712  001D68  EFB8  F00E         	goto	u4291
  5713  001D6C  EFBA  F00E         	goto	u4290
  5714  001D70                     u4291:
  5715  001D70  EFBB  F00E         	goto	l3187
  5716  001D74                     u4290:
  5717  001D74  8012               	bsf	___flmul@aexp^0,0,c
  5718  001D76                     l3187:
  5719  001D76  5012               	movf	___flmul@aexp^0,w,c
  5720  001D78  B4D8               	btfsc	status,2,c
  5721  001D7A  EFC1  F00E         	goto	u4301
  5722  001D7E  EFC3  F00E         	goto	u4300
  5723  001D82                     u4301:
  5724  001D82  EFD6  F00E         	goto	l3195
  5725  001D86                     u4300:
  5726  001D86  2812               	incf	___flmul@aexp^0,w,c
  5727  001D88  A4D8               	btfss	status,2,c
  5728  001D8A  EFC9  F00E         	goto	u4311
  5729  001D8E  EFCB  F00E         	goto	u4310
  5730  001D92                     u4311:
  5731  001D92  EFD3  F00E         	goto	l3193
  5732  001D96                     u4310:
  5733  001D96  0E00               	movlw	0
  5734  001D98  6E05               	movwf	___flmul@a^0,c
  5735  001D9A  0E00               	movlw	0
  5736  001D9C  6E06               	movwf	(___flmul@a+1)^0,c
  5737  001D9E  0E00               	movlw	0
  5738  001DA0  6E07               	movwf	(___flmul@a+2)^0,c
  5739  001DA2  0E00               	movlw	0
  5740  001DA4  6E08               	movwf	(___flmul@a+3)^0,c
  5741  001DA6                     l3193:
  5742  001DA6  8E07               	bsf	(___flmul@a+2)^0,7,c
  5743  001DA8  EFDE  F00E         	goto	l967
  5744  001DAC                     l3195:
  5745  001DAC  0E00               	movlw	0
  5746  001DAE  6E05               	movwf	___flmul@a^0,c
  5747  001DB0  0E00               	movlw	0
  5748  001DB2  6E06               	movwf	(___flmul@a+1)^0,c
  5749  001DB4  0E00               	movlw	0
  5750  001DB6  6E07               	movwf	(___flmul@a+2)^0,c
  5751  001DB8  0E00               	movlw	0
  5752  001DBA  6E08               	movwf	(___flmul@a+3)^0,c
  5753  001DBC                     l967:
  5754  001DBC  5012               	movf	___flmul@aexp^0,w,c
  5755  001DBE  B4D8               	btfsc	status,2,c
  5756  001DC0  EFE4  F00E         	goto	u4321
  5757  001DC4  EFE6  F00E         	goto	u4320
  5758  001DC8                     u4321:
  5759  001DC8  EFEE  F00E         	goto	l3199
  5760  001DCC                     u4320:
  5761  001DCC  5013               	movf	___flmul@bexp^0,w,c
  5762  001DCE  A4D8               	btfss	status,2,c
  5763  001DD0  EFEC  F00E         	goto	u4331
  5764  001DD4  EFEE  F00E         	goto	u4330
  5765  001DD8                     u4331:
  5766  001DD8  EFF8  F00E         	goto	l3203
  5767  001DDC                     u4330:
  5768  001DDC                     l3199:
  5769  001DDC  0E00               	movlw	0
  5770  001DDE  6E01               	movwf	?___flmul^0,c
  5771  001DE0  0E00               	movlw	0
  5772  001DE2  6E02               	movwf	(?___flmul+1)^0,c
  5773  001DE4  0E00               	movlw	0
  5774  001DE6  6E03               	movwf	(?___flmul+2)^0,c
  5775  001DE8  0E00               	movlw	0
  5776  001DEA  6E04               	movwf	(?___flmul+3)^0,c
  5777  001DEC  EF90  F010         	goto	l971
  5778  001DF0                     l3203:
  5779  001DF0  5007               	movf	(___flmul@a+2)^0,w,c
  5780  001DF2  0201               	mulwf	___flmul@b^0,c
  5781  001DF4  CFF3 F018          	movff	prodl,___flmul@temp
  5782  001DF8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5783  001DFC  5018               	movf	___flmul@temp^0,w,c
  5784  001DFE  6E0E               	movwf	___flmul@grs^0,c
  5785  001E00  6A0F               	clrf	(___flmul@grs+1)^0,c
  5786  001E02  6A10               	clrf	(___flmul@grs+2)^0,c
  5787  001E04  6A11               	clrf	(___flmul@grs+3)^0,c
  5788  001E06  5019               	movf	(___flmul@temp+1)^0,w,c
  5789  001E08  6E14               	movwf	___flmul@prod^0,c
  5790  001E0A  6A15               	clrf	(___flmul@prod+1)^0,c
  5791  001E0C  6A16               	clrf	(___flmul@prod+2)^0,c
  5792  001E0E  6A17               	clrf	(___flmul@prod+3)^0,c
  5793  001E10  5006               	movf	(___flmul@a+1)^0,w,c
  5794  001E12  0202               	mulwf	(___flmul@b+1)^0,c
  5795  001E14  CFF3 F018          	movff	prodl,___flmul@temp
  5796  001E18  CFF4 F019          	movff	prodh,___flmul@temp+1
  5797  001E1C  5018               	movf	___flmul@temp^0,w,c
  5798  001E1E  260E               	addwf	___flmul@grs^0,f,c
  5799  001E20  0E00               	movlw	0
  5800  001E22  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5801  001E24  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5802  001E26  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5803  001E28  5019               	movf	(___flmul@temp+1)^0,w,c
  5804  001E2A  2614               	addwf	___flmul@prod^0,f,c
  5805  001E2C  0E00               	movlw	0
  5806  001E2E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5807  001E30  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5808  001E32  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5809  001E34  5005               	movf	___flmul@a^0,w,c
  5810  001E36  0203               	mulwf	(___flmul@b+2)^0,c
  5811  001E38  CFF3 F018          	movff	prodl,___flmul@temp
  5812  001E3C  CFF4 F019          	movff	prodh,___flmul@temp+1
  5813  001E40  5018               	movf	___flmul@temp^0,w,c
  5814  001E42  260E               	addwf	___flmul@grs^0,f,c
  5815  001E44  0E00               	movlw	0
  5816  001E46  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5817  001E48  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5818  001E4A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5819  001E4C  5019               	movf	(___flmul@temp+1)^0,w,c
  5820  001E4E  2614               	addwf	___flmul@prod^0,f,c
  5821  001E50  0E00               	movlw	0
  5822  001E52  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5823  001E54  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5824  001E56  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5825  001E58  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5826  001E5C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5827  001E60  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5828  001E64  6A0E               	clrf	___flmul@grs^0,c
  5829  001E66  5005               	movf	___flmul@a^0,w,c
  5830  001E68  0202               	mulwf	(___flmul@b+1)^0,c
  5831  001E6A  CFF3 F018          	movff	prodl,___flmul@temp
  5832  001E6E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5833  001E72  5018               	movf	___flmul@temp^0,w,c
  5834  001E74  260E               	addwf	___flmul@grs^0,f,c
  5835  001E76  5019               	movf	(___flmul@temp+1)^0,w,c
  5836  001E78  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5837  001E7A  0E00               	movlw	0
  5838  001E7C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5839  001E7E  0E00               	movlw	0
  5840  001E80  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5841  001E82  5006               	movf	(___flmul@a+1)^0,w,c
  5842  001E84  0201               	mulwf	___flmul@b^0,c
  5843  001E86  CFF3 F018          	movff	prodl,___flmul@temp
  5844  001E8A  CFF4 F019          	movff	prodh,___flmul@temp+1
  5845  001E8E  5018               	movf	___flmul@temp^0,w,c
  5846  001E90  260E               	addwf	___flmul@grs^0,f,c
  5847  001E92  5019               	movf	(___flmul@temp+1)^0,w,c
  5848  001E94  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5849  001E96  0E00               	movlw	0
  5850  001E98  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5851  001E9A  0E00               	movlw	0
  5852  001E9C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5853  001E9E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5854  001EA2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5855  001EA6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5856  001EAA  6A0E               	clrf	___flmul@grs^0,c
  5857  001EAC  5005               	movf	___flmul@a^0,w,c
  5858  001EAE  0201               	mulwf	___flmul@b^0,c
  5859  001EB0  CFF3 F018          	movff	prodl,___flmul@temp
  5860  001EB4  CFF4 F019          	movff	prodh,___flmul@temp+1
  5861  001EB8  5018               	movf	___flmul@temp^0,w,c
  5862  001EBA  260E               	addwf	___flmul@grs^0,f,c
  5863  001EBC  5019               	movf	(___flmul@temp+1)^0,w,c
  5864  001EBE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5865  001EC0  0E00               	movlw	0
  5866  001EC2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5867  001EC4  0E00               	movlw	0
  5868  001EC6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5869  001EC8  5007               	movf	(___flmul@a+2)^0,w,c
  5870  001ECA  0202               	mulwf	(___flmul@b+1)^0,c
  5871  001ECC  CFF3 F018          	movff	prodl,___flmul@temp
  5872  001ED0  CFF4 F019          	movff	prodh,___flmul@temp+1
  5873  001ED4  5018               	movf	___flmul@temp^0,w,c
  5874  001ED6  2614               	addwf	___flmul@prod^0,f,c
  5875  001ED8  5019               	movf	(___flmul@temp+1)^0,w,c
  5876  001EDA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5877  001EDC  0E00               	movlw	0
  5878  001EDE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5879  001EE0  0E00               	movlw	0
  5880  001EE2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5881  001EE4  5006               	movf	(___flmul@a+1)^0,w,c
  5882  001EE6  0203               	mulwf	(___flmul@b+2)^0,c
  5883  001EE8  CFF3 F018          	movff	prodl,___flmul@temp
  5884  001EEC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5885  001EF0  5018               	movf	___flmul@temp^0,w,c
  5886  001EF2  2614               	addwf	___flmul@prod^0,f,c
  5887  001EF4  5019               	movf	(___flmul@temp+1)^0,w,c
  5888  001EF6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5889  001EF8  0E00               	movlw	0
  5890  001EFA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5891  001EFC  0E00               	movlw	0
  5892  001EFE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5893  001F00  5007               	movf	(___flmul@a+2)^0,w,c
  5894  001F02  0203               	mulwf	(___flmul@b+2)^0,c
  5895  001F04  CFF3 F018          	movff	prodl,___flmul@temp
  5896  001F08  CFF4 F019          	movff	prodh,___flmul@temp+1
  5897  001F0C  5018               	movf	___flmul@temp^0,w,c
  5898  001F0E  6E09               	movwf	??___flmul^0,c
  5899  001F10  5019               	movf	(___flmul@temp+1)^0,w,c
  5900  001F12  6E0A               	movwf	(??___flmul+1)^0,c
  5901  001F14  6A0B               	clrf	(??___flmul+2)^0,c
  5902  001F16  6A0C               	clrf	(??___flmul+3)^0,c
  5903  001F18  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5904  001F1C  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5905  001F20  C009  F00A         	movff	??___flmul,??___flmul+1
  5906  001F24  6A09               	clrf	??___flmul^0,c
  5907  001F26  5009               	movf	??___flmul^0,w,c
  5908  001F28  2614               	addwf	___flmul@prod^0,f,c
  5909  001F2A  500A               	movf	(??___flmul+1)^0,w,c
  5910  001F2C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5911  001F2E  500B               	movf	(??___flmul+2)^0,w,c
  5912  001F30  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5913  001F32  500C               	movf	(??___flmul+3)^0,w,c
  5914  001F34  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5915  001F36  C00E  F009         	movff	___flmul@grs,??___flmul
  5916  001F3A  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5917  001F3E  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5918  001F42  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5919  001F46  0E19               	movlw	25
  5920  001F48  EFAB  F00F         	goto	u4340
  5921  001F4C                     u4345:
  5922  001F4C  90D8               	bcf	status,0,c
  5923  001F4E  320C               	rrcf	(??___flmul+3)^0,f,c
  5924  001F50  320B               	rrcf	(??___flmul+2)^0,f,c
  5925  001F52  320A               	rrcf	(??___flmul+1)^0,f,c
  5926  001F54  3209               	rrcf	??___flmul^0,f,c
  5927  001F56                     u4340:
  5928  001F56  2EE8               	decfsz	wreg,f,c
  5929  001F58  EFA6  F00F         	goto	u4345
  5930  001F5C  5009               	movf	??___flmul^0,w,c
  5931  001F5E  2614               	addwf	___flmul@prod^0,f,c
  5932  001F60  500A               	movf	(??___flmul+1)^0,w,c
  5933  001F62  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5934  001F64  500B               	movf	(??___flmul+2)^0,w,c
  5935  001F66  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5936  001F68  500C               	movf	(??___flmul+3)^0,w,c
  5937  001F6A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5938  001F6C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5939  001F70  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5940  001F74  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5941  001F78  6A0E               	clrf	___flmul@grs^0,c
  5942  001F7A  5012               	movf	___flmul@aexp^0,w,c
  5943  001F7C  C013  F009         	movff	___flmul@bexp,??___flmul
  5944  001F80  6A0A               	clrf	(??___flmul+1)^0,c
  5945  001F82  2609               	addwf	??___flmul^0,f,c
  5946  001F84  0E00               	movlw	0
  5947  001F86  220A               	addwfc	(??___flmul+1)^0,f,c
  5948  001F88  0E82               	movlw	130
  5949  001F8A  2409               	addwf	??___flmul^0,w,c
  5950  001F8C  6E18               	movwf	___flmul@temp^0,c
  5951  001F8E  0EFF               	movlw	255
  5952  001F90  200A               	addwfc	(??___flmul+1)^0,w,c
  5953  001F92  6E19               	movwf	(___flmul@temp+1)^0,c
  5954  001F94  EFE1  F00F         	goto	l3251
  5955  001F98                     l3245:
  5956  001F98  90D8               	bcf	status,0,c
  5957  001F9A  3614               	rlcf	___flmul@prod^0,f,c
  5958  001F9C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5959  001F9E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5960  001FA0  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5961  001FA2  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5962  001FA4  EFD6  F00F         	goto	u4351
  5963  001FA8  EFD8  F00F         	goto	u4350
  5964  001FAC                     u4351:
  5965  001FAC  EFD9  F00F         	goto	l974
  5966  001FB0                     u4350:
  5967  001FB0  8014               	bsf	___flmul@prod^0,0,c
  5968  001FB2                     l974:
  5969  001FB2  90D8               	bcf	status,0,c
  5970  001FB4  360E               	rlcf	___flmul@grs^0,f,c
  5971  001FB6  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5972  001FB8  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5973  001FBA  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5974  001FBC  0618               	decf	___flmul@temp^0,f,c
  5975  001FBE  A0D8               	btfss	status,0,c
  5976  001FC0  0619               	decf	(___flmul@temp+1)^0,f,c
  5977  001FC2                     l3251:
  5978  001FC2  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5979  001FC4  EFE6  F00F         	goto	u4361
  5980  001FC8  EFE8  F00F         	goto	u4360
  5981  001FCC                     u4361:
  5982  001FCC  EFCC  F00F         	goto	l3245
  5983  001FD0                     u4360:
  5984  001FD0  0E00               	movlw	0
  5985  001FD2  6E12               	movwf	___flmul@aexp^0,c
  5986  001FD4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5987  001FD6  EFEF  F00F         	goto	u4371
  5988  001FDA  EFF1  F00F         	goto	u4370
  5989  001FDE                     u4371:
  5990  001FDE  EF15  F010         	goto	l976
  5991  001FE2                     u4370:
  5992  001FE2  0EFF               	movlw	255
  5993  001FE4  140E               	andwf	___flmul@grs^0,w,c
  5994  001FE6  6E09               	movwf	??___flmul^0,c
  5995  001FE8  0EFF               	movlw	255
  5996  001FEA  140F               	andwf	(___flmul@grs+1)^0,w,c
  5997  001FEC  6E0A               	movwf	(??___flmul+1)^0,c
  5998  001FEE  0EFF               	movlw	255
  5999  001FF0  1410               	andwf	(___flmul@grs+2)^0,w,c
  6000  001FF2  6E0B               	movwf	(??___flmul+2)^0,c
  6001  001FF4  0E7F               	movlw	127
  6002  001FF6  1411               	andwf	(___flmul@grs+3)^0,w,c
  6003  001FF8  6E0C               	movwf	(??___flmul+3)^0,c
  6004  001FFA  5009               	movf	??___flmul^0,w,c
  6005  001FFC  100A               	iorwf	(??___flmul+1)^0,w,c
  6006  001FFE  100B               	iorwf	(??___flmul+2)^0,w,c
  6007  002000  100C               	iorwf	(??___flmul+3)^0,w,c
  6008  002002  B4D8               	btfsc	status,2,c
  6009  002004  EF06  F010         	goto	u4381
  6010  002008  EF08  F010         	goto	u4380
  6011  00200C                     u4381:
  6012  00200C  EF0C  F010         	goto	l977
  6013  002010                     u4380:
  6014  002010                     l3259:
  6015  002010  0E01               	movlw	1
  6016  002012  6E12               	movwf	___flmul@aexp^0,c
  6017  002014  EF15  F010         	goto	l976
  6018  002018                     l977:
  6019  002018  A014               	btfss	___flmul@prod^0,0,c
  6020  00201A  EF11  F010         	goto	u4391
  6021  00201E  EF13  F010         	goto	u4390
  6022  002022                     u4391:
  6023  002022  EF15  F010         	goto	l976
  6024  002026                     u4390:
  6025  002026  EF08  F010         	goto	l3259
  6026  00202A                     l976:
  6027  00202A  5012               	movf	___flmul@aexp^0,w,c
  6028  00202C  B4D8               	btfsc	status,2,c
  6029  00202E  EF1B  F010         	goto	u4401
  6030  002032  EF1D  F010         	goto	u4400
  6031  002036                     u4401:
  6032  002036  EF41  F010         	goto	l3271
  6033  00203A                     u4400:
  6034  00203A  0E01               	movlw	1
  6035  00203C  2614               	addwf	___flmul@prod^0,f,c
  6036  00203E  0E00               	movlw	0
  6037  002040  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6038  002042  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6039  002044  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6040  002046  A017               	btfss	(___flmul@prod+3)^0,0,c
  6041  002048  EF28  F010         	goto	u4411
  6042  00204C  EF2A  F010         	goto	u4410
  6043  002050                     u4411:
  6044  002050  EF41  F010         	goto	l3271
  6045  002054                     u4410:
  6046  002054  C014  F009         	movff	___flmul@prod,??___flmul
  6047  002058  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6048  00205C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6049  002060  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6050  002064  340C               	rlcf	(??___flmul+3)^0,w,c
  6051  002066  320C               	rrcf	(??___flmul+3)^0,f,c
  6052  002068  320B               	rrcf	(??___flmul+2)^0,f,c
  6053  00206A  320A               	rrcf	(??___flmul+1)^0,f,c
  6054  00206C  3209               	rrcf	??___flmul^0,f,c
  6055  00206E  C009  F014         	movff	??___flmul,___flmul@prod
  6056  002072  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6057  002076  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6058  00207A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6059  00207E  4A18               	infsnz	___flmul@temp^0,f,c
  6060  002080  2A19               	incf	(___flmul@temp+1)^0,f,c
  6061  002082                     l3271:
  6062  002082  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6063  002084  EF4C  F010         	goto	u4421
  6064  002088  5019               	movf	(___flmul@temp+1)^0,w,c
  6065  00208A  E108               	bnz	u4420
  6066  00208C  2818               	incf	___flmul@temp^0,w,c
  6067  00208E  A0D8               	btfss	status,0,c
  6068  002090  EF4C  F010         	goto	u4421
  6069  002094  EF4E  F010         	goto	u4420
  6070  002098                     u4421:
  6071  002098  EF58  F010         	goto	l3275
  6072  00209C                     u4420:
  6073  00209C  0E00               	movlw	0
  6074  00209E  6E14               	movwf	___flmul@prod^0,c
  6075  0020A0  0E00               	movlw	0
  6076  0020A2  6E15               	movwf	(___flmul@prod+1)^0,c
  6077  0020A4  0E80               	movlw	128
  6078  0020A6  6E16               	movwf	(___flmul@prod+2)^0,c
  6079  0020A8  0E7F               	movlw	127
  6080  0020AA  6E17               	movwf	(___flmul@prod+3)^0,c
  6081  0020AC  EF86  F010         	goto	l3287
  6082  0020B0                     l3275:
  6083  0020B0  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6084  0020B2  EF65  F010         	goto	u4430
  6085  0020B6  5019               	movf	(___flmul@temp+1)^0,w,c
  6086  0020B8  E106               	bnz	u4431
  6087  0020BA  0418               	decf	___flmul@temp^0,w,c
  6088  0020BC  B0D8               	btfsc	status,0,c
  6089  0020BE  EF63  F010         	goto	u4431
  6090  0020C2  EF65  F010         	goto	u4430
  6091  0020C6                     u4431:
  6092  0020C6  EF71  F010         	goto	l984
  6093  0020CA                     u4430:
  6094  0020CA  0E00               	movlw	0
  6095  0020CC  6E14               	movwf	___flmul@prod^0,c
  6096  0020CE  0E00               	movlw	0
  6097  0020D0  6E15               	movwf	(___flmul@prod+1)^0,c
  6098  0020D2  0E00               	movlw	0
  6099  0020D4  6E16               	movwf	(___flmul@prod+2)^0,c
  6100  0020D6  0E00               	movlw	0
  6101  0020D8  6E17               	movwf	(___flmul@prod+3)^0,c
  6102  0020DA  0E00               	movlw	0
  6103  0020DC  6E0D               	movwf	___flmul@sign^0,c
  6104  0020DE  EF86  F010         	goto	l3287
  6105  0020E2                     l984:
  6106  0020E2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6107  0020E6  0EFF               	movlw	255
  6108  0020E8  1614               	andwf	___flmul@prod^0,f,c
  6109  0020EA  0EFF               	movlw	255
  6110  0020EC  1615               	andwf	(___flmul@prod+1)^0,f,c
  6111  0020EE  0E7F               	movlw	127
  6112  0020F0  1616               	andwf	(___flmul@prod+2)^0,f,c
  6113  0020F2  0E00               	movlw	0
  6114  0020F4  1617               	andwf	(___flmul@prod+3)^0,f,c
  6115  0020F6  A013               	btfss	___flmul@bexp^0,0,c
  6116  0020F8  EF80  F010         	goto	u4441
  6117  0020FC  EF82  F010         	goto	u4440
  6118  002100                     u4441:
  6119  002100  EF83  F010         	goto	l3285
  6120  002104                     u4440:
  6121  002104  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6122  002106                     l3285:
  6123  002106  90D8               	bcf	status,0,c
  6124  002108  3013               	rrcf	___flmul@bexp^0,w,c
  6125  00210A  6E17               	movwf	(___flmul@prod+3)^0,c
  6126  00210C                     l3287:
  6127  00210C  500D               	movf	___flmul@sign^0,w,c
  6128  00210E  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6129  002110  C014  F001         	movff	___flmul@prod,?___flmul
  6130  002114  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6131  002118  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6132  00211C  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6133  002120                     l971:
  6134  002120  0012               	return		;funcret
  6135  002122                     __end_of___flmul:
  6136                           	opt callstack 0
  6137                           
  6138 ;; *************** function ___flge *****************
  6139 ;; Defined at:
  6140 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  ff1             4   25[COMRAM] unsigned char 
  6143 ;;  ff2             4   29[COMRAM] unsigned char 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;		None
  6146 ;; Return value:  Size  Location     Type
  6147 ;;		None               void
  6148 ;; Registers used:
  6149 ;;		wreg, status,2, status,0
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6155 ;;      Params:         8       0       0       0       0       0       0       0       0
  6156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6157 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6158 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6159 ;;Total ram usage:       12 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		_efgtoa
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text21
  6169  002E62                     __ptext21:
  6170                           	opt callstack 0
  6171  002E62                     ___flge:
  6172                           	opt callstack 26
  6173  002E62  0E00               	movlw	0
  6174  002E64  141A               	andwf	___flge@ff1^0,w,c
  6175  002E66  6E22               	movwf	??___flge^0,c
  6176  002E68  0E00               	movlw	0
  6177  002E6A  141B               	andwf	(___flge@ff1+1)^0,w,c
  6178  002E6C  6E23               	movwf	(??___flge+1)^0,c
  6179  002E6E  0E80               	movlw	128
  6180  002E70  141C               	andwf	(___flge@ff1+2)^0,w,c
  6181  002E72  6E24               	movwf	(??___flge+2)^0,c
  6182  002E74  0E7F               	movlw	127
  6183  002E76  141D               	andwf	(___flge@ff1+3)^0,w,c
  6184  002E78  6E25               	movwf	(??___flge+3)^0,c
  6185  002E7A  5022               	movf	??___flge^0,w,c
  6186  002E7C  1023               	iorwf	(??___flge+1)^0,w,c
  6187  002E7E  1024               	iorwf	(??___flge+2)^0,w,c
  6188  002E80  1025               	iorwf	(??___flge+3)^0,w,c
  6189  002E82  A4D8               	btfss	status,2,c
  6190  002E84  EF46  F017         	goto	u4601
  6191  002E88  EF48  F017         	goto	u4600
  6192  002E8C                     u4601:
  6193  002E8C  EF50  F017         	goto	l3399
  6194  002E90                     u4600:
  6195  002E90  0E00               	movlw	0
  6196  002E92  6E1A               	movwf	___flge@ff1^0,c
  6197  002E94  0E00               	movlw	0
  6198  002E96  6E1B               	movwf	(___flge@ff1+1)^0,c
  6199  002E98  0E00               	movlw	0
  6200  002E9A  6E1C               	movwf	(___flge@ff1+2)^0,c
  6201  002E9C  0E00               	movlw	0
  6202  002E9E  6E1D               	movwf	(___flge@ff1+3)^0,c
  6203  002EA0                     l3399:
  6204  002EA0  0E00               	movlw	0
  6205  002EA2  141E               	andwf	___flge@ff2^0,w,c
  6206  002EA4  6E22               	movwf	??___flge^0,c
  6207  002EA6  0E00               	movlw	0
  6208  002EA8  141F               	andwf	(___flge@ff2+1)^0,w,c
  6209  002EAA  6E23               	movwf	(??___flge+1)^0,c
  6210  002EAC  0E80               	movlw	128
  6211  002EAE  1420               	andwf	(___flge@ff2+2)^0,w,c
  6212  002EB0  6E24               	movwf	(??___flge+2)^0,c
  6213  002EB2  0E7F               	movlw	127
  6214  002EB4  1421               	andwf	(___flge@ff2+3)^0,w,c
  6215  002EB6  6E25               	movwf	(??___flge+3)^0,c
  6216  002EB8  5022               	movf	??___flge^0,w,c
  6217  002EBA  1023               	iorwf	(??___flge+1)^0,w,c
  6218  002EBC  1024               	iorwf	(??___flge+2)^0,w,c
  6219  002EBE  1025               	iorwf	(??___flge+3)^0,w,c
  6220  002EC0  A4D8               	btfss	status,2,c
  6221  002EC2  EF65  F017         	goto	u4611
  6222  002EC6  EF67  F017         	goto	u4610
  6223  002ECA                     u4611:
  6224  002ECA  EF6F  F017         	goto	l3403
  6225  002ECE                     u4610:
  6226  002ECE  0E00               	movlw	0
  6227  002ED0  6E1E               	movwf	___flge@ff2^0,c
  6228  002ED2  0E00               	movlw	0
  6229  002ED4  6E1F               	movwf	(___flge@ff2+1)^0,c
  6230  002ED6  0E00               	movlw	0
  6231  002ED8  6E20               	movwf	(___flge@ff2+2)^0,c
  6232  002EDA  0E00               	movlw	0
  6233  002EDC  6E21               	movwf	(___flge@ff2+3)^0,c
  6234  002EDE                     l3403:
  6235  002EDE  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6236  002EE0  EF74  F017         	goto	u4621
  6237  002EE4  EF76  F017         	goto	u4620
  6238  002EE8                     u4621:
  6239  002EE8  EF7F  F017         	goto	l3407
  6240  002EEC                     u4620:
  6241  002EEC  6C1A               	negf	___flge@ff1^0,c
  6242  002EEE  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6243  002EF0  B0D8               	btfsc	status,0,c
  6244  002EF2  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6245  002EF4  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6246  002EF6  B0D8               	btfsc	status,0,c
  6247  002EF8  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6248  002EFA  0E80               	movlw	128
  6249  002EFC  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6250  002EFE                     l3407:
  6251  002EFE  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6252  002F00  EF84  F017         	goto	u4631
  6253  002F04  EF86  F017         	goto	u4630
  6254  002F08                     u4631:
  6255  002F08  EF8F  F017         	goto	l618
  6256  002F0C                     u4630:
  6257  002F0C  6C1E               	negf	___flge@ff2^0,c
  6258  002F0E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6259  002F10  B0D8               	btfsc	status,0,c
  6260  002F12  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6261  002F14  1E20               	comf	(___flge@ff2+2)^0,f,c
  6262  002F16  B0D8               	btfsc	status,0,c
  6263  002F18  2A20               	incf	(___flge@ff2+2)^0,f,c
  6264  002F1A  0E80               	movlw	128
  6265  002F1C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6266  002F1E                     l618:
  6267  002F1E  0E00               	movlw	0
  6268  002F20  1A1A               	xorwf	___flge@ff1^0,f,c
  6269  002F22  0E00               	movlw	0
  6270  002F24  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6271  002F26  0E00               	movlw	0
  6272  002F28  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6273  002F2A  0E80               	movlw	128
  6274  002F2C  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6275  002F2E  0E00               	movlw	0
  6276  002F30  1A1E               	xorwf	___flge@ff2^0,f,c
  6277  002F32  0E00               	movlw	0
  6278  002F34  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6279  002F36  0E00               	movlw	0
  6280  002F38  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6281  002F3A  0E80               	movlw	128
  6282  002F3C  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6283  002F3E  501E               	movf	___flge@ff2^0,w,c
  6284  002F40  5C1A               	subwf	___flge@ff1^0,w,c
  6285  002F42  501F               	movf	(___flge@ff2+1)^0,w,c
  6286  002F44  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6287  002F46  5020               	movf	(___flge@ff2+2)^0,w,c
  6288  002F48  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6289  002F4A  5021               	movf	(___flge@ff2+3)^0,w,c
  6290  002F4C  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6291  002F4E  B0D8               	btfsc	status,0,c
  6292  002F50  EFAC  F017         	goto	u4641
  6293  002F54  EFAE  F017         	goto	u4640
  6294  002F58                     u4641:
  6295  002F58  EFB1  F017         	goto	l3413
  6296  002F5C                     u4640:
  6297  002F5C  90D8               	bcf	status,0,c
  6298  002F5E  EFB2  F017         	goto	l623
  6299  002F62                     l3413:
  6300  002F62  80D8               	bsf	status,0,c
  6301  002F64                     l623:
  6302  002F64  0012               	return		;funcret
  6303  002F66                     __end_of___flge:
  6304                           	opt callstack 0
  6305                           
  6306 ;; *************** function ___fleq *****************
  6307 ;; Defined at:
  6308 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  ff1             4    0[COMRAM] unsigned char 
  6311 ;;  ff2             4    4[COMRAM] unsigned char 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;		None               void
  6316 ;; Registers used:
  6317 ;;		wreg, status,2, status,0
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6323 ;;      Params:         8       0       0       0       0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6325 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6326 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6327 ;;Total ram usage:       12 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_efgtoa
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text22
  6337  00353C                     __ptext22:
  6338                           	opt callstack 0
  6339  00353C                     ___fleq:
  6340                           	opt callstack 26
  6341  00353C  0E00               	movlw	0
  6342  00353E  1401               	andwf	___fleq@ff1^0,w,c
  6343  003540  6E09               	movwf	??___fleq^0,c
  6344  003542  0E00               	movlw	0
  6345  003544  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6346  003546  6E0A               	movwf	(??___fleq+1)^0,c
  6347  003548  0E80               	movlw	128
  6348  00354A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6349  00354C  6E0B               	movwf	(??___fleq+2)^0,c
  6350  00354E  0E7F               	movlw	127
  6351  003550  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6352  003552  6E0C               	movwf	(??___fleq+3)^0,c
  6353  003554  5009               	movf	??___fleq^0,w,c
  6354  003556  100A               	iorwf	(??___fleq+1)^0,w,c
  6355  003558  100B               	iorwf	(??___fleq+2)^0,w,c
  6356  00355A  100C               	iorwf	(??___fleq+3)^0,w,c
  6357  00355C  A4D8               	btfss	status,2,c
  6358  00355E  EFB3  F01A         	goto	u4571
  6359  003562  EFB5  F01A         	goto	u4570
  6360  003566                     u4571:
  6361  003566  EFBD  F01A         	goto	l3383
  6362  00356A                     u4570:
  6363  00356A  0E00               	movlw	0
  6364  00356C  6E01               	movwf	___fleq@ff1^0,c
  6365  00356E  0E00               	movlw	0
  6366  003570  6E02               	movwf	(___fleq@ff1+1)^0,c
  6367  003572  0E00               	movlw	0
  6368  003574  6E03               	movwf	(___fleq@ff1+2)^0,c
  6369  003576  0E00               	movlw	0
  6370  003578  6E04               	movwf	(___fleq@ff1+3)^0,c
  6371  00357A                     l3383:
  6372  00357A  0E00               	movlw	0
  6373  00357C  1405               	andwf	___fleq@ff2^0,w,c
  6374  00357E  6E09               	movwf	??___fleq^0,c
  6375  003580  0E00               	movlw	0
  6376  003582  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6377  003584  6E0A               	movwf	(??___fleq+1)^0,c
  6378  003586  0E80               	movlw	128
  6379  003588  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6380  00358A  6E0B               	movwf	(??___fleq+2)^0,c
  6381  00358C  0E7F               	movlw	127
  6382  00358E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6383  003590  6E0C               	movwf	(??___fleq+3)^0,c
  6384  003592  5009               	movf	??___fleq^0,w,c
  6385  003594  100A               	iorwf	(??___fleq+1)^0,w,c
  6386  003596  100B               	iorwf	(??___fleq+2)^0,w,c
  6387  003598  100C               	iorwf	(??___fleq+3)^0,w,c
  6388  00359A  A4D8               	btfss	status,2,c
  6389  00359C  EFD2  F01A         	goto	u4581
  6390  0035A0  EFD4  F01A         	goto	u4580
  6391  0035A4                     u4581:
  6392  0035A4  EFDC  F01A         	goto	l3387
  6393  0035A8                     u4580:
  6394  0035A8  0E00               	movlw	0
  6395  0035AA  6E05               	movwf	___fleq@ff2^0,c
  6396  0035AC  0E00               	movlw	0
  6397  0035AE  6E06               	movwf	(___fleq@ff2+1)^0,c
  6398  0035B0  0E00               	movlw	0
  6399  0035B2  6E07               	movwf	(___fleq@ff2+2)^0,c
  6400  0035B4  0E00               	movlw	0
  6401  0035B6  6E08               	movwf	(___fleq@ff2+3)^0,c
  6402  0035B8                     l3387:
  6403  0035B8  5005               	movf	___fleq@ff2^0,w,c
  6404  0035BA  1801               	xorwf	___fleq@ff1^0,w,c
  6405  0035BC  E10F               	bnz	u4590
  6406  0035BE  5006               	movf	(___fleq@ff2+1)^0,w,c
  6407  0035C0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6408  0035C2  E10C               	bnz	u4590
  6409  0035C4  5007               	movf	(___fleq@ff2+2)^0,w,c
  6410  0035C6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6411  0035C8  E109               	bnz	u4590
  6412  0035CA  5008               	movf	(___fleq@ff2+3)^0,w,c
  6413  0035CC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6414  0035CE  B4D8               	btfsc	status,2,c
  6415  0035D0  EFEC  F01A         	goto	u4591
  6416  0035D4  EFEE  F01A         	goto	u4590
  6417  0035D8                     u4591:
  6418  0035D8  EFF1  F01A         	goto	l3391
  6419  0035DC                     u4590:
  6420  0035DC  90D8               	bcf	status,0,c
  6421  0035DE  EFF2  F01A         	goto	l612
  6422  0035E2                     l3391:
  6423  0035E2  80D8               	bsf	status,0,c
  6424  0035E4                     l612:
  6425  0035E4  0012               	return		;funcret
  6426  0035E6                     __end_of___fleq:
  6427                           	opt callstack 0
  6428                           
  6429 ;; *************** function ___fldiv *****************
  6430 ;; Defined at:
  6431 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  b               4    0[COMRAM] unsigned char 
  6434 ;;  a               4    4[COMRAM] unsigned char 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  grs             4   19[COMRAM] unsigned long 
  6437 ;;  rem             4   12[COMRAM] unsigned long 
  6438 ;;  new_exp         2   17[COMRAM] short 
  6439 ;;  aexp            1   24[COMRAM] unsigned char 
  6440 ;;  bexp            1   23[COMRAM] unsigned char 
  6441 ;;  sign            1   16[COMRAM] unsigned char 
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  4    0[COMRAM] unsigned char 
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6451 ;;      Params:         8       0       0       0       0       0       0       0       0
  6452 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6453 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6454 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6455 ;;Total ram usage:       25 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_main
  6461 ;;		_efgtoa
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text23
  6466  002122                     __ptext23:
  6467                           	opt callstack 0
  6468  002122                     ___fldiv:
  6469                           	opt callstack 26
  6470  002122  5004               	movf	(___fldiv@b+3)^0,w,c
  6471  002124  0B80               	andlw	128
  6472  002126  6E11               	movwf	___fldiv@sign^0,c
  6473  002128  5004               	movf	(___fldiv@b+3)^0,w,c
  6474  00212A  2404               	addwf	(___fldiv@b+3)^0,w,c
  6475  00212C  6E18               	movwf	___fldiv@bexp^0,c
  6476  00212E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6477  002130  EF9C  F010         	goto	u4031
  6478  002134  EF9E  F010         	goto	u4030
  6479  002138                     u4031:
  6480  002138  EF9F  F010         	goto	l3031
  6481  00213C                     u4030:
  6482  00213C  8018               	bsf	___fldiv@bexp^0,0,c
  6483  00213E                     l3031:
  6484  00213E  5018               	movf	___fldiv@bexp^0,w,c
  6485  002140  B4D8               	btfsc	status,2,c
  6486  002142  EFA5  F010         	goto	u4041
  6487  002146  EFA7  F010         	goto	u4040
  6488  00214A                     u4041:
  6489  00214A  EFBC  F010         	goto	l3041
  6490  00214E                     u4040:
  6491  00214E  2818               	incf	___fldiv@bexp^0,w,c
  6492  002150  A4D8               	btfss	status,2,c
  6493  002152  EFAD  F010         	goto	u4051
  6494  002156  EFAF  F010         	goto	u4050
  6495  00215A                     u4051:
  6496  00215A  EFB7  F010         	goto	l3037
  6497  00215E                     u4050:
  6498  00215E  0E00               	movlw	0
  6499  002160  6E01               	movwf	___fldiv@b^0,c
  6500  002162  0E00               	movlw	0
  6501  002164  6E02               	movwf	(___fldiv@b+1)^0,c
  6502  002166  0E00               	movlw	0
  6503  002168  6E03               	movwf	(___fldiv@b+2)^0,c
  6504  00216A  0E00               	movlw	0
  6505  00216C  6E04               	movwf	(___fldiv@b+3)^0,c
  6506  00216E                     l3037:
  6507  00216E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6508  002170  0E00               	movlw	0
  6509  002172  6E04               	movwf	(___fldiv@b+3)^0,c
  6510  002174  EFC4  F010         	goto	l3043
  6511  002178                     l3041:
  6512  002178  0E00               	movlw	0
  6513  00217A  6E01               	movwf	___fldiv@b^0,c
  6514  00217C  0E00               	movlw	0
  6515  00217E  6E02               	movwf	(___fldiv@b+1)^0,c
  6516  002180  0E00               	movlw	0
  6517  002182  6E03               	movwf	(___fldiv@b+2)^0,c
  6518  002184  0E00               	movlw	0
  6519  002186  6E04               	movwf	(___fldiv@b+3)^0,c
  6520  002188                     l3043:
  6521  002188  5008               	movf	(___fldiv@a+3)^0,w,c
  6522  00218A  0B80               	andlw	128
  6523  00218C  1A11               	xorwf	___fldiv@sign^0,f,c
  6524  00218E  5008               	movf	(___fldiv@a+3)^0,w,c
  6525  002190  2408               	addwf	(___fldiv@a+3)^0,w,c
  6526  002192  6E19               	movwf	___fldiv@aexp^0,c
  6527  002194  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6528  002196  EFCF  F010         	goto	u4061
  6529  00219A  EFD1  F010         	goto	u4060
  6530  00219E                     u4061:
  6531  00219E  EFD2  F010         	goto	l3051
  6532  0021A2                     u4060:
  6533  0021A2  8019               	bsf	___fldiv@aexp^0,0,c
  6534  0021A4                     l3051:
  6535  0021A4  5019               	movf	___fldiv@aexp^0,w,c
  6536  0021A6  B4D8               	btfsc	status,2,c
  6537  0021A8  EFD8  F010         	goto	u4071
  6538  0021AC  EFDA  F010         	goto	u4070
  6539  0021B0                     u4071:
  6540  0021B0  EFEF  F010         	goto	l3061
  6541  0021B4                     u4070:
  6542  0021B4  2819               	incf	___fldiv@aexp^0,w,c
  6543  0021B6  A4D8               	btfss	status,2,c
  6544  0021B8  EFE0  F010         	goto	u4081
  6545  0021BC  EFE2  F010         	goto	u4080
  6546  0021C0                     u4081:
  6547  0021C0  EFEA  F010         	goto	l3057
  6548  0021C4                     u4080:
  6549  0021C4  0E00               	movlw	0
  6550  0021C6  6E05               	movwf	___fldiv@a^0,c
  6551  0021C8  0E00               	movlw	0
  6552  0021CA  6E06               	movwf	(___fldiv@a+1)^0,c
  6553  0021CC  0E00               	movlw	0
  6554  0021CE  6E07               	movwf	(___fldiv@a+2)^0,c
  6555  0021D0  0E00               	movlw	0
  6556  0021D2  6E08               	movwf	(___fldiv@a+3)^0,c
  6557  0021D4                     l3057:
  6558  0021D4  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6559  0021D6  0E00               	movlw	0
  6560  0021D8  6E08               	movwf	(___fldiv@a+3)^0,c
  6561  0021DA  EFF7  F010         	goto	l3063
  6562  0021DE                     l3061:
  6563  0021DE  0E00               	movlw	0
  6564  0021E0  6E05               	movwf	___fldiv@a^0,c
  6565  0021E2  0E00               	movlw	0
  6566  0021E4  6E06               	movwf	(___fldiv@a+1)^0,c
  6567  0021E6  0E00               	movlw	0
  6568  0021E8  6E07               	movwf	(___fldiv@a+2)^0,c
  6569  0021EA  0E00               	movlw	0
  6570  0021EC  6E08               	movwf	(___fldiv@a+3)^0,c
  6571  0021EE                     l3063:
  6572  0021EE  5005               	movf	___fldiv@a^0,w,c
  6573  0021F0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6574  0021F2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6575  0021F4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6576  0021F6  A4D8               	btfss	status,2,c
  6577  0021F8  EF00  F011         	goto	u4091
  6578  0021FC  EF02  F011         	goto	u4090
  6579  002200                     u4091:
  6580  002200  EF1A  F011         	goto	l3075
  6581  002204                     u4090:
  6582  002204  0E00               	movlw	0
  6583  002206  6E01               	movwf	___fldiv@b^0,c
  6584  002208  0E00               	movlw	0
  6585  00220A  6E02               	movwf	(___fldiv@b+1)^0,c
  6586  00220C  0E00               	movlw	0
  6587  00220E  6E03               	movwf	(___fldiv@b+2)^0,c
  6588  002210  0E00               	movlw	0
  6589  002212  6E04               	movwf	(___fldiv@b+3)^0,c
  6590  002214  0E80               	movlw	128
  6591  002216  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6592  002218  0E7F               	movlw	127
  6593  00221A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6594  00221C                     l3069:
  6595  00221C  5011               	movf	___fldiv@sign^0,w,c
  6596  00221E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6597  002220  C001  F001         	movff	___fldiv@b,?___fldiv
  6598  002224  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6599  002228  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6600  00222C  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6601  002230  EF5D  F012         	goto	l935
  6602  002234                     l3075:
  6603  002234  5018               	movf	___fldiv@bexp^0,w,c
  6604  002236  A4D8               	btfss	status,2,c
  6605  002238  EF20  F011         	goto	u4101
  6606  00223C  EF22  F011         	goto	u4100
  6607  002240                     u4101:
  6608  002240  EF2C  F011         	goto	l3083
  6609  002244                     u4100:
  6610  002244  0E00               	movlw	0
  6611  002246  6E01               	movwf	?___fldiv^0,c
  6612  002248  0E00               	movlw	0
  6613  00224A  6E02               	movwf	(?___fldiv+1)^0,c
  6614  00224C  0E00               	movlw	0
  6615  00224E  6E03               	movwf	(?___fldiv+2)^0,c
  6616  002250  0E00               	movlw	0
  6617  002252  6E04               	movwf	(?___fldiv+3)^0,c
  6618  002254  EF5D  F012         	goto	l935
  6619  002258                     l3083:
  6620  002258  5019               	movf	___fldiv@aexp^0,w,c
  6621  00225A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6622  00225E  6A0A               	clrf	(??___fldiv+1)^0,c
  6623  002260  5E09               	subwf	??___fldiv^0,f,c
  6624  002262  0E00               	movlw	0
  6625  002264  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6626  002266  0E7F               	movlw	127
  6627  002268  2409               	addwf	??___fldiv^0,w,c
  6628  00226A  6E12               	movwf	___fldiv@new_exp^0,c
  6629  00226C  0E00               	movlw	0
  6630  00226E  200A               	addwfc	(??___fldiv+1)^0,w,c
  6631  002270  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6632  002272  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6633  002276  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6634  00227A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6635  00227E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6636  002282  0E00               	movlw	0
  6637  002284  6E01               	movwf	___fldiv@b^0,c
  6638  002286  0E00               	movlw	0
  6639  002288  6E02               	movwf	(___fldiv@b+1)^0,c
  6640  00228A  0E00               	movlw	0
  6641  00228C  6E03               	movwf	(___fldiv@b+2)^0,c
  6642  00228E  0E00               	movlw	0
  6643  002290  6E04               	movwf	(___fldiv@b+3)^0,c
  6644  002292  0E00               	movlw	0
  6645  002294  6E14               	movwf	___fldiv@grs^0,c
  6646  002296  0E00               	movlw	0
  6647  002298  6E15               	movwf	(___fldiv@grs+1)^0,c
  6648  00229A  0E00               	movlw	0
  6649  00229C  6E16               	movwf	(___fldiv@grs+2)^0,c
  6650  00229E  0E00               	movlw	0
  6651  0022A0  6E17               	movwf	(___fldiv@grs+3)^0,c
  6652  0022A2  0E00               	movlw	0
  6653  0022A4  6E19               	movwf	___fldiv@aexp^0,c
  6654  0022A6  EF8D  F011         	goto	l937
  6655  0022AA                     l3093:
  6656  0022AA  5019               	movf	___fldiv@aexp^0,w,c
  6657  0022AC  B4D8               	btfsc	status,2,c
  6658  0022AE  EF5B  F011         	goto	u4111
  6659  0022B2  EF5D  F011         	goto	u4110
  6660  0022B6                     u4111:
  6661  0022B6  EF74  F011         	goto	l3101
  6662  0022BA                     u4110:
  6663  0022BA  90D8               	bcf	status,0,c
  6664  0022BC  360D               	rlcf	___fldiv@rem^0,f,c
  6665  0022BE  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6666  0022C0  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6667  0022C2  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6668  0022C4  90D8               	bcf	status,0,c
  6669  0022C6  3601               	rlcf	___fldiv@b^0,f,c
  6670  0022C8  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6671  0022CA  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6672  0022CC  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6673  0022CE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6674  0022D0  EF6C  F011         	goto	u4121
  6675  0022D4  EF6E  F011         	goto	u4120
  6676  0022D8                     u4121:
  6677  0022D8  EF6F  F011         	goto	l940
  6678  0022DC                     u4120:
  6679  0022DC  8001               	bsf	___fldiv@b^0,0,c
  6680  0022DE                     l940:
  6681  0022DE  90D8               	bcf	status,0,c
  6682  0022E0  3614               	rlcf	___fldiv@grs^0,f,c
  6683  0022E2  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6684  0022E4  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6685  0022E6  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6686  0022E8                     l3101:
  6687  0022E8  5005               	movf	___fldiv@a^0,w,c
  6688  0022EA  5C0D               	subwf	___fldiv@rem^0,w,c
  6689  0022EC  5006               	movf	(___fldiv@a+1)^0,w,c
  6690  0022EE  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6691  0022F0  5007               	movf	(___fldiv@a+2)^0,w,c
  6692  0022F2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6693  0022F4  5008               	movf	(___fldiv@a+3)^0,w,c
  6694  0022F6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6695  0022F8  A0D8               	btfss	status,0,c
  6696  0022FA  EF81  F011         	goto	u4131
  6697  0022FE  EF83  F011         	goto	u4130
  6698  002302                     u4131:
  6699  002302  EF8C  F011         	goto	l3107
  6700  002306                     u4130:
  6701  002306  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6702  002308  5005               	movf	___fldiv@a^0,w,c
  6703  00230A  5E0D               	subwf	___fldiv@rem^0,f,c
  6704  00230C  5006               	movf	(___fldiv@a+1)^0,w,c
  6705  00230E  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6706  002310  5007               	movf	(___fldiv@a+2)^0,w,c
  6707  002312  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6708  002314  5008               	movf	(___fldiv@a+3)^0,w,c
  6709  002316  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6710  002318                     l3107:
  6711  002318  2A19               	incf	___fldiv@aexp^0,f,c
  6712  00231A                     l937:
  6713  00231A  0E19               	movlw	25
  6714  00231C  6419               	cpfsgt	___fldiv@aexp^0,c
  6715  00231E  EF93  F011         	goto	u4141
  6716  002322  EF95  F011         	goto	u4140
  6717  002326                     u4141:
  6718  002326  EF55  F011         	goto	l3093
  6719  00232A                     u4140:
  6720  00232A  500D               	movf	___fldiv@rem^0,w,c
  6721  00232C  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6722  00232E  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6723  002330  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6724  002332  B4D8               	btfsc	status,2,c
  6725  002334  EF9E  F011         	goto	u4151
  6726  002338  EFA0  F011         	goto	u4150
  6727  00233C                     u4151:
  6728  00233C  EFB8  F011         	goto	l3119
  6729  002340                     u4150:
  6730  002340  8014               	bsf	___fldiv@grs^0,0,c
  6731  002342  EFB8  F011         	goto	l3119
  6732  002346                     l3113:
  6733  002346  90D8               	bcf	status,0,c
  6734  002348  3601               	rlcf	___fldiv@b^0,f,c
  6735  00234A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6736  00234C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6737  00234E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6738  002350  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6739  002352  EFAD  F011         	goto	u4161
  6740  002356  EFAF  F011         	goto	u4160
  6741  00235A                     u4161:
  6742  00235A  EFB0  F011         	goto	l946
  6743  00235E                     u4160:
  6744  00235E  8001               	bsf	___fldiv@b^0,0,c
  6745  002360                     l946:
  6746  002360  90D8               	bcf	status,0,c
  6747  002362  3614               	rlcf	___fldiv@grs^0,f,c
  6748  002364  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6749  002366  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6750  002368  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6751  00236A  0612               	decf	___fldiv@new_exp^0,f,c
  6752  00236C  A0D8               	btfss	status,0,c
  6753  00236E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6754  002370                     l3119:
  6755  002370  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6756  002372  EFBD  F011         	goto	u4171
  6757  002376  EFBF  F011         	goto	u4170
  6758  00237A                     u4171:
  6759  00237A  EFA3  F011         	goto	l3113
  6760  00237E                     u4170:
  6761  00237E  0E00               	movlw	0
  6762  002380  6E19               	movwf	___fldiv@aexp^0,c
  6763  002382  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6764  002384  EFC6  F011         	goto	u4181
  6765  002388  EFC8  F011         	goto	u4180
  6766  00238C                     u4181:
  6767  00238C  EFEC  F011         	goto	l948
  6768  002390                     u4180:
  6769  002390  0EFF               	movlw	255
  6770  002392  1414               	andwf	___fldiv@grs^0,w,c
  6771  002394  6E09               	movwf	??___fldiv^0,c
  6772  002396  0EFF               	movlw	255
  6773  002398  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6774  00239A  6E0A               	movwf	(??___fldiv+1)^0,c
  6775  00239C  0EFF               	movlw	255
  6776  00239E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6777  0023A0  6E0B               	movwf	(??___fldiv+2)^0,c
  6778  0023A2  0E7F               	movlw	127
  6779  0023A4  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6780  0023A6  6E0C               	movwf	(??___fldiv+3)^0,c
  6781  0023A8  5009               	movf	??___fldiv^0,w,c
  6782  0023AA  100A               	iorwf	(??___fldiv+1)^0,w,c
  6783  0023AC  100B               	iorwf	(??___fldiv+2)^0,w,c
  6784  0023AE  100C               	iorwf	(??___fldiv+3)^0,w,c
  6785  0023B0  B4D8               	btfsc	status,2,c
  6786  0023B2  EFDD  F011         	goto	u4191
  6787  0023B6  EFDF  F011         	goto	u4190
  6788  0023BA                     u4191:
  6789  0023BA  EFE3  F011         	goto	l949
  6790  0023BE                     u4190:
  6791  0023BE                     l3127:
  6792  0023BE  0E01               	movlw	1
  6793  0023C0  6E19               	movwf	___fldiv@aexp^0,c
  6794  0023C2  EFEC  F011         	goto	l948
  6795  0023C6                     l949:
  6796  0023C6  A001               	btfss	___fldiv@b^0,0,c
  6797  0023C8  EFE8  F011         	goto	u4201
  6798  0023CC  EFEA  F011         	goto	u4200
  6799  0023D0                     u4201:
  6800  0023D0  EFEC  F011         	goto	l948
  6801  0023D4                     u4200:
  6802  0023D4  EFDF  F011         	goto	l3127
  6803  0023D8                     l948:
  6804  0023D8  5019               	movf	___fldiv@aexp^0,w,c
  6805  0023DA  B4D8               	btfsc	status,2,c
  6806  0023DC  EFF2  F011         	goto	u4211
  6807  0023E0  EFF4  F011         	goto	u4210
  6808  0023E4                     u4211:
  6809  0023E4  EF18  F012         	goto	l3139
  6810  0023E8                     u4210:
  6811  0023E8  0E01               	movlw	1
  6812  0023EA  2601               	addwf	___fldiv@b^0,f,c
  6813  0023EC  0E00               	movlw	0
  6814  0023EE  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6815  0023F0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6816  0023F2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6817  0023F4  A004               	btfss	(___fldiv@b+3)^0,0,c
  6818  0023F6  EFFF  F011         	goto	u4221
  6819  0023FA  EF01  F012         	goto	u4220
  6820  0023FE                     u4221:
  6821  0023FE  EF18  F012         	goto	l3139
  6822  002402                     u4220:
  6823  002402  C001  F009         	movff	___fldiv@b,??___fldiv
  6824  002406  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6825  00240A  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6826  00240E  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6827  002412  340C               	rlcf	(??___fldiv+3)^0,w,c
  6828  002414  320C               	rrcf	(??___fldiv+3)^0,f,c
  6829  002416  320B               	rrcf	(??___fldiv+2)^0,f,c
  6830  002418  320A               	rrcf	(??___fldiv+1)^0,f,c
  6831  00241A  3209               	rrcf	??___fldiv^0,f,c
  6832  00241C  C009  F001         	movff	??___fldiv,___fldiv@b
  6833  002420  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6834  002424  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6835  002428  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6836  00242C  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6837  00242E  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6838  002430                     l3139:
  6839  002430  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6840  002432  EF23  F012         	goto	u4231
  6841  002436  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6842  002438  E108               	bnz	u4230
  6843  00243A  2812               	incf	___fldiv@new_exp^0,w,c
  6844  00243C  A0D8               	btfss	status,0,c
  6845  00243E  EF23  F012         	goto	u4231
  6846  002442  EF25  F012         	goto	u4230
  6847  002446                     u4231:
  6848  002446  EF30  F012         	goto	l3143
  6849  00244A                     u4230:
  6850  00244A  0E00               	movlw	0
  6851  00244C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6852  00244E  6812               	setf	___fldiv@new_exp^0,c
  6853  002450  0E00               	movlw	0
  6854  002452  6E01               	movwf	___fldiv@b^0,c
  6855  002454  0E00               	movlw	0
  6856  002456  6E02               	movwf	(___fldiv@b+1)^0,c
  6857  002458  0E00               	movlw	0
  6858  00245A  6E03               	movwf	(___fldiv@b+2)^0,c
  6859  00245C  0E00               	movlw	0
  6860  00245E  6E04               	movwf	(___fldiv@b+3)^0,c
  6861  002460                     l3143:
  6862  002460  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6863  002462  EF3D  F012         	goto	u4240
  6864  002466  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6865  002468  E106               	bnz	u4241
  6866  00246A  0412               	decf	___fldiv@new_exp^0,w,c
  6867  00246C  B0D8               	btfsc	status,0,c
  6868  00246E  EF3B  F012         	goto	u4241
  6869  002472  EF3D  F012         	goto	u4240
  6870  002476                     u4241:
  6871  002476  EF4B  F012         	goto	l3147
  6872  00247A                     u4240:
  6873  00247A  0E00               	movlw	0
  6874  00247C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6875  00247E  0E00               	movlw	0
  6876  002480  6E12               	movwf	___fldiv@new_exp^0,c
  6877  002482  0E00               	movlw	0
  6878  002484  6E01               	movwf	___fldiv@b^0,c
  6879  002486  0E00               	movlw	0
  6880  002488  6E02               	movwf	(___fldiv@b+1)^0,c
  6881  00248A  0E00               	movlw	0
  6882  00248C  6E03               	movwf	(___fldiv@b+2)^0,c
  6883  00248E  0E00               	movlw	0
  6884  002490  6E04               	movwf	(___fldiv@b+3)^0,c
  6885  002492  0E00               	movlw	0
  6886  002494  6E11               	movwf	___fldiv@sign^0,c
  6887  002496                     l3147:
  6888  002496  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6889  00249A  A018               	btfss	___fldiv@bexp^0,0,c
  6890  00249C  EF52  F012         	goto	u4251
  6891  0024A0  EF54  F012         	goto	u4250
  6892  0024A4                     u4251:
  6893  0024A4  EF57  F012         	goto	l3153
  6894  0024A8                     u4250:
  6895  0024A8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6896  0024AA  EF58  F012         	goto	l3155
  6897  0024AE                     l3153:
  6898  0024AE  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6899  0024B0                     l3155:
  6900  0024B0  90D8               	bcf	status,0,c
  6901  0024B2  3018               	rrcf	___fldiv@bexp^0,w,c
  6902  0024B4  6E04               	movwf	(___fldiv@b+3)^0,c
  6903  0024B6  EF0E  F011         	goto	l3069
  6904  0024BA                     l935:
  6905  0024BA  0012               	return		;funcret
  6906  0024BC                     __end_of___fldiv:
  6907                           	opt callstack 0
  6908                           
  6909 ;; *************** function ___awmod *****************
  6910 ;; Defined at:
  6911 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  dividend        2    0[COMRAM] int 
  6914 ;;  divisor         2    2[COMRAM] int 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  sign            1    5[COMRAM] unsigned char 
  6917 ;;  counter         1    4[COMRAM] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  2    0[COMRAM] int 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6927 ;;      Params:         4       0       0       0       0       0       0       0       0
  6928 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6930 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6931 ;;Total ram usage:        6 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_efgtoa
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text24
  6941  00348C                     __ptext24:
  6942                           	opt callstack 0
  6943  00348C                     ___awmod:
  6944                           	opt callstack 26
  6945  00348C  0E00               	movlw	0
  6946  00348E  6E06               	movwf	___awmod@sign^0,c
  6947  003490  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6948  003492  EF4F  F01A         	goto	u4510
  6949  003496  EF4D  F01A         	goto	u4511
  6950  00349A                     u4511:
  6951  00349A  EF55  F01A         	goto	l3351
  6952  00349E                     u4510:
  6953  00349E  6C01               	negf	___awmod@dividend^0,c
  6954  0034A0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6955  0034A2  B0D8               	btfsc	status,0,c
  6956  0034A4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6957  0034A6  0E01               	movlw	1
  6958  0034A8  6E06               	movwf	___awmod@sign^0,c
  6959  0034AA                     l3351:
  6960  0034AA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6961  0034AC  EF5C  F01A         	goto	u4520
  6962  0034B0  EF5A  F01A         	goto	u4521
  6963  0034B4                     u4521:
  6964  0034B4  EF60  F01A         	goto	l3355
  6965  0034B8                     u4520:
  6966  0034B8  6C03               	negf	___awmod@divisor^0,c
  6967  0034BA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6968  0034BC  B0D8               	btfsc	status,0,c
  6969  0034BE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6970  0034C0                     l3355:
  6971  0034C0  5003               	movf	___awmod@divisor^0,w,c
  6972  0034C2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6973  0034C4  B4D8               	btfsc	status,2,c
  6974  0034C6  EF67  F01A         	goto	u4531
  6975  0034CA  EF69  F01A         	goto	u4530
  6976  0034CE                     u4531:
  6977  0034CE  EF8D  F01A         	goto	l3371
  6978  0034D2                     u4530:
  6979  0034D2  0E01               	movlw	1
  6980  0034D4  6E05               	movwf	___awmod@counter^0,c
  6981  0034D6  EF71  F01A         	goto	l3361
  6982  0034DA                     l3359:
  6983  0034DA  90D8               	bcf	status,0,c
  6984  0034DC  3603               	rlcf	___awmod@divisor^0,f,c
  6985  0034DE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6986  0034E0  2A05               	incf	___awmod@counter^0,f,c
  6987  0034E2                     l3361:
  6988  0034E2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6989  0034E4  EF76  F01A         	goto	u4541
  6990  0034E8  EF78  F01A         	goto	u4540
  6991  0034EC                     u4541:
  6992  0034EC  EF6D  F01A         	goto	l3359
  6993  0034F0                     u4540:
  6994  0034F0                     l3363:
  6995  0034F0  5003               	movf	___awmod@divisor^0,w,c
  6996  0034F2  5C01               	subwf	___awmod@dividend^0,w,c
  6997  0034F4  5004               	movf	(___awmod@divisor+1)^0,w,c
  6998  0034F6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6999  0034F8  A0D8               	btfss	status,0,c
  7000  0034FA  EF81  F01A         	goto	u4551
  7001  0034FE  EF83  F01A         	goto	u4550
  7002  003502                     u4551:
  7003  003502  EF87  F01A         	goto	l3367
  7004  003506                     u4550:
  7005  003506  5003               	movf	___awmod@divisor^0,w,c
  7006  003508  5E01               	subwf	___awmod@dividend^0,f,c
  7007  00350A  5004               	movf	(___awmod@divisor+1)^0,w,c
  7008  00350C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7009  00350E                     l3367:
  7010  00350E  90D8               	bcf	status,0,c
  7011  003510  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7012  003512  3203               	rrcf	___awmod@divisor^0,f,c
  7013  003514  2E05               	decfsz	___awmod@counter^0,f,c
  7014  003516  EF78  F01A         	goto	l3363
  7015  00351A                     l3371:
  7016  00351A  5006               	movf	___awmod@sign^0,w,c
  7017  00351C  B4D8               	btfsc	status,2,c
  7018  00351E  EF93  F01A         	goto	u4561
  7019  003522  EF95  F01A         	goto	u4560
  7020  003526                     u4561:
  7021  003526  EF99  F01A         	goto	l3375
  7022  00352A                     u4560:
  7023  00352A  6C01               	negf	___awmod@dividend^0,c
  7024  00352C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7025  00352E  B0D8               	btfsc	status,0,c
  7026  003530  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7027  003532                     l3375:
  7028  003532  C001  F001         	movff	___awmod@dividend,?___awmod
  7029  003536  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7030  00353A  0012               	return		;funcret
  7031  00353C                     __end_of___awmod:
  7032                           	opt callstack 0
  7033                           
  7034 ;; *************** function ___awdiv *****************
  7035 ;; Defined at:
  7036 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;  dividend        2    0[COMRAM] int 
  7039 ;;  divisor         2    2[COMRAM] int 
  7040 ;; Auto vars:     Size  Location     Type
  7041 ;;  quotient        2    6[COMRAM] int 
  7042 ;;  sign            1    5[COMRAM] unsigned char 
  7043 ;;  counter         1    4[COMRAM] unsigned char 
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  2    0[COMRAM] int 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7053 ;;      Params:         4       0       0       0       0       0       0       0       0
  7054 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7056 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7057 ;;Total ram usage:        8 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; This function calls:
  7060 ;;		Nothing
  7061 ;; This function is called by:
  7062 ;;		_efgtoa
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text25
  7067  0033C8                     __ptext25:
  7068                           	opt callstack 0
  7069  0033C8                     ___awdiv:
  7070                           	opt callstack 26
  7071  0033C8  0E00               	movlw	0
  7072  0033CA  6E06               	movwf	___awdiv@sign^0,c
  7073  0033CC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7074  0033CE  EFED  F019         	goto	u4450
  7075  0033D2  EFEB  F019         	goto	u4451
  7076  0033D6                     u4451:
  7077  0033D6  EFF3  F019         	goto	l3307
  7078  0033DA                     u4450:
  7079  0033DA  6C03               	negf	___awdiv@divisor^0,c
  7080  0033DC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7081  0033DE  B0D8               	btfsc	status,0,c
  7082  0033E0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7083  0033E2  0E01               	movlw	1
  7084  0033E4  6E06               	movwf	___awdiv@sign^0,c
  7085  0033E6                     l3307:
  7086  0033E6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7087  0033E8  EFFA  F019         	goto	u4460
  7088  0033EC  EFF8  F019         	goto	u4461
  7089  0033F0                     u4461:
  7090  0033F0  EF00  F01A         	goto	l3313
  7091  0033F4                     u4460:
  7092  0033F4  6C01               	negf	___awdiv@dividend^0,c
  7093  0033F6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7094  0033F8  B0D8               	btfsc	status,0,c
  7095  0033FA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7096  0033FC  0E01               	movlw	1
  7097  0033FE  1A06               	xorwf	___awdiv@sign^0,f,c
  7098  003400                     l3313:
  7099  003400  0E00               	movlw	0
  7100  003402  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7101  003404  0E00               	movlw	0
  7102  003406  6E07               	movwf	___awdiv@quotient^0,c
  7103  003408  5003               	movf	___awdiv@divisor^0,w,c
  7104  00340A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7105  00340C  B4D8               	btfsc	status,2,c
  7106  00340E  EF0B  F01A         	goto	u4471
  7107  003412  EF0D  F01A         	goto	u4470
  7108  003416                     u4471:
  7109  003416  EF35  F01A         	goto	l3335
  7110  00341A                     u4470:
  7111  00341A  0E01               	movlw	1
  7112  00341C  6E05               	movwf	___awdiv@counter^0,c
  7113  00341E  EF15  F01A         	goto	l3321
  7114  003422                     l3319:
  7115  003422  90D8               	bcf	status,0,c
  7116  003424  3603               	rlcf	___awdiv@divisor^0,f,c
  7117  003426  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7118  003428  2A05               	incf	___awdiv@counter^0,f,c
  7119  00342A                     l3321:
  7120  00342A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7121  00342C  EF1A  F01A         	goto	u4481
  7122  003430  EF1C  F01A         	goto	u4480
  7123  003434                     u4481:
  7124  003434  EF11  F01A         	goto	l3319
  7125  003438                     u4480:
  7126  003438                     l3323:
  7127  003438  90D8               	bcf	status,0,c
  7128  00343A  3607               	rlcf	___awdiv@quotient^0,f,c
  7129  00343C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7130  00343E  5003               	movf	___awdiv@divisor^0,w,c
  7131  003440  5C01               	subwf	___awdiv@dividend^0,w,c
  7132  003442  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7133  003444  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7134  003446  A0D8               	btfss	status,0,c
  7135  003448  EF28  F01A         	goto	u4491
  7136  00344C  EF2A  F01A         	goto	u4490
  7137  003450                     u4491:
  7138  003450  EF2F  F01A         	goto	l3331
  7139  003454                     u4490:
  7140  003454  5003               	movf	___awdiv@divisor^0,w,c
  7141  003456  5E01               	subwf	___awdiv@dividend^0,f,c
  7142  003458  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7143  00345A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7144  00345C  8007               	bsf	___awdiv@quotient^0,0,c
  7145  00345E                     l3331:
  7146  00345E  90D8               	bcf	status,0,c
  7147  003460  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7148  003462  3203               	rrcf	___awdiv@divisor^0,f,c
  7149  003464  2E05               	decfsz	___awdiv@counter^0,f,c
  7150  003466  EF1C  F01A         	goto	l3323
  7151  00346A                     l3335:
  7152  00346A  5006               	movf	___awdiv@sign^0,w,c
  7153  00346C  B4D8               	btfsc	status,2,c
  7154  00346E  EF3B  F01A         	goto	u4501
  7155  003472  EF3D  F01A         	goto	u4500
  7156  003476                     u4501:
  7157  003476  EF41  F01A         	goto	l3339
  7158  00347A                     u4500:
  7159  00347A  6C07               	negf	___awdiv@quotient^0,c
  7160  00347C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7161  00347E  B0D8               	btfsc	status,0,c
  7162  003480  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7163  003482                     l3339:
  7164  003482  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7165  003486  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7166  00348A  0012               	return		;funcret
  7167  00348C                     __end_of___awdiv:
  7168                           	opt callstack 0
  7169                           
  7170 ;; *************** function _atoi *****************
  7171 ;; Defined at:
  7172 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7175 ;;		 -> STR_3(5), 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  n               2   20[COMRAM] int 
  7178 ;;  neg             2   13[COMRAM] int 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  2    7[COMRAM] int 
  7181 ;; Registers used:
  7182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7188 ;;      Params:         2       0       0       0       0       0       0       0       0
  7189 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7190 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7191 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7192 ;;Total ram usage:       15 bytes
  7193 ;; Hardware stack levels used:    1
  7194 ;; Hardware stack levels required when called:    1
  7195 ;; This function calls:
  7196 ;;		___wmul
  7197 ;;		_isdigit
  7198 ;;		_isspace
  7199 ;; This function is called by:
  7200 ;;		_vfpfcnvrt
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text26
  7205  002882                     __ptext26:
  7206                           	opt callstack 0
  7207  002882                     _atoi:
  7208                           	opt callstack 26
  7209  002882  0E00               	movlw	0
  7210  002884  6E16               	movwf	(atoi@n+1)^0,c
  7211  002886  0E00               	movlw	0
  7212  002888  6E15               	movwf	atoi@n^0,c
  7213  00288A  0E00               	movlw	0
  7214  00288C  6E0F               	movwf	(atoi@neg+1)^0,c
  7215  00288E  0E00               	movlw	0
  7216  002890  6E0E               	movwf	atoi@neg^0,c
  7217  002892  EF4D  F014         	goto	l3815
  7218  002896                     l3813:
  7219  002896  4A08               	infsnz	atoi@s^0,f,c
  7220  002898  2A09               	incf	(atoi@s+1)^0,f,c
  7221  00289A                     l3815:
  7222  00289A  0E01               	movlw	1
  7223  00289C  6E14               	movwf	_atoi$1089^0,c
  7224  00289E  C008  FFF6         	movff	atoi@s,tblptrl
  7225  0028A2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7226  0028A6                     	if	0	;tblptru may be non-zero
  7227  0028A6                     	endif
  7228  0028A6                     	if	0	;tblptru may be non-zero
  7229  0028A6                     	endif
  7230  0028A6  0008               	tblrd		*
  7231  0028A8  50F5               	movf	tablat,w,c
  7232  0028AA  0A20               	xorlw	32
  7233  0028AC  B4D8               	btfsc	status,2,c
  7234  0028AE  EF5B  F014         	goto	u5431
  7235  0028B2  EF5D  F014         	goto	u5430
  7236  0028B6                     u5431:
  7237  0028B6  EF7A  F014         	goto	l3823
  7238  0028BA                     u5430:
  7239  0028BA  0EF7               	movlw	247
  7240  0028BC  6E0A               	movwf	??_atoi^0,c
  7241  0028BE  0EFF               	movlw	255
  7242  0028C0  6E0B               	movwf	(??_atoi+1)^0,c
  7243  0028C2  C008  FFF6         	movff	atoi@s,tblptrl
  7244  0028C6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7245  0028CA                     	if	0	;tblptru may be non-zero
  7246  0028CA                     	endif
  7247  0028CA                     	if	0	;tblptru may be non-zero
  7248  0028CA                     	endif
  7249  0028CA  0008               	tblrd		*
  7250  0028CC  50F5               	movf	tablat,w,c
  7251  0028CE  6E0C               	movwf	(??_atoi+2)^0,c
  7252  0028D0  6A0D               	clrf	(??_atoi+3)^0,c
  7253  0028D2  500A               	movf	??_atoi^0,w,c
  7254  0028D4  260C               	addwf	(??_atoi+2)^0,f,c
  7255  0028D6  500B               	movf	(??_atoi+1)^0,w,c
  7256  0028D8  220D               	addwfc	(??_atoi+3)^0,f,c
  7257  0028DA  500D               	movf	(??_atoi+3)^0,w,c
  7258  0028DC  E109               	bnz	u5440
  7259  0028DE  0E05               	movlw	5
  7260  0028E0  5C0C               	subwf	(??_atoi+2)^0,w,c
  7261  0028E2  A0D8               	btfss	status,0,c
  7262  0028E4  EF76  F014         	goto	u5441
  7263  0028E8  EF78  F014         	goto	u5440
  7264  0028EC                     u5441:
  7265  0028EC  EF7A  F014         	goto	l3823
  7266  0028F0                     u5440:
  7267  0028F0  0E00               	movlw	0
  7268  0028F2  6E14               	movwf	_atoi$1089^0,c
  7269  0028F4                     l3823:
  7270  0028F4  C014  F010         	movff	_atoi$1089,_atoi$1088
  7271  0028F8  6A11               	clrf	(_atoi$1088+1)^0,c
  7272  0028FA  5010               	movf	_atoi$1088^0,w,c
  7273  0028FC  1011               	iorwf	(_atoi$1088+1)^0,w,c
  7274  0028FE  A4D8               	btfss	status,2,c
  7275  002900  EF84  F014         	goto	u5451
  7276  002904  EF86  F014         	goto	u5450
  7277  002908                     u5451:
  7278  002908  EF4B  F014         	goto	l3813
  7279  00290C                     u5450:
  7280  00290C  EF90  F014         	goto	l3833
  7281  002910                     l3829:
  7282  002910  0E00               	movlw	0
  7283  002912  6E0F               	movwf	(atoi@neg+1)^0,c
  7284  002914  0E01               	movlw	1
  7285  002916  6E0E               	movwf	atoi@neg^0,c
  7286  002918                     l3831:
  7287  002918  4A08               	infsnz	atoi@s^0,f,c
  7288  00291A  2A09               	incf	(atoi@s+1)^0,f,c
  7289  00291C  EFC5  F014         	goto	l3839
  7290  002920                     l3833:
  7291  002920  C008  FFF6         	movff	atoi@s,tblptrl
  7292  002924  C009  FFF7         	movff	atoi@s+1,tblptrh
  7293  002928                     	if	0	;tblptru may be non-zero
  7294  002928                     	endif
  7295  002928                     	if	0	;tblptru may be non-zero
  7296  002928                     	endif
  7297  002928  0008               	tblrd		*
  7298  00292A  50F5               	movf	tablat,w,c
  7299  00292C  6E0A               	movwf	??_atoi^0,c
  7300  00292E  6A0B               	clrf	(??_atoi+1)^0,c
  7301                           
  7302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7303                           ; Switch size 1, requested type "simple"
  7304                           ; Number of cases is 1, Range of values is 0 to 0
  7305                           ; switch strategies available:
  7306                           ; Name         Instructions Cycles
  7307                           ; simple_byte            4     3 (average)
  7308                           ;	Chosen strategy is simple_byte
  7309  002930  500B               	movf	(??_atoi+1)^0,w,c
  7310  002932  0A00               	xorlw	0	; case 0
  7311  002934  B4D8               	btfsc	status,2,c
  7312  002936  EF9F  F014         	goto	l4207
  7313  00293A  EFC5  F014         	goto	l3839
  7314  00293E                     l4207:
  7315                           
  7316                           ; Switch size 1, requested type "simple"
  7317                           ; Number of cases is 2, Range of values is 43 to 45
  7318                           ; switch strategies available:
  7319                           ; Name         Instructions Cycles
  7320                           ; simple_byte            7     4 (average)
  7321                           ;	Chosen strategy is simple_byte
  7322  00293E  500A               	movf	??_atoi^0,w,c
  7323  002940  0A2B               	xorlw	43	; case 43
  7324  002942  B4D8               	btfsc	status,2,c
  7325  002944  EF8C  F014         	goto	l3831
  7326  002948  0A06               	xorlw	6	; case 45
  7327  00294A  B4D8               	btfsc	status,2,c
  7328  00294C  EF88  F014         	goto	l3829
  7329  002950  EFC5  F014         	goto	l3839
  7330  002954                     l3835:
  7331  002954  C015  F001         	movff	atoi@n,___wmul@multiplier
  7332  002958  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7333  00295C  0E00               	movlw	0
  7334  00295E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7335  002960  0E0A               	movlw	10
  7336  002962  6E03               	movwf	___wmul@multiplicand^0,c
  7337  002964  EC20  F01D         	call	___wmul	;wreg free
  7338  002968  C008  FFF6         	movff	atoi@s,tblptrl
  7339  00296C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7340  002970                     	if	0	;tblptru may be non-zero
  7341  002970                     	endif
  7342  002970                     	if	0	;tblptru may be non-zero
  7343  002970                     	endif
  7344  002970  0008               	tblrd		*
  7345  002972  50F5               	movf	tablat,w,c
  7346  002974  5E01               	subwf	?___wmul^0,f,c
  7347  002976  0E00               	movlw	0
  7348  002978  5A02               	subwfb	(?___wmul+1)^0,f,c
  7349  00297A  0E30               	movlw	48
  7350  00297C  2401               	addwf	?___wmul^0,w,c
  7351  00297E  6E15               	movwf	atoi@n^0,c
  7352  002980  0E00               	movlw	0
  7353  002982  2002               	addwfc	(?___wmul+1)^0,w,c
  7354  002984  6E16               	movwf	(atoi@n+1)^0,c
  7355  002986  EF8C  F014         	goto	l3831
  7356  00298A                     l3839:
  7357  00298A  0ED0               	movlw	208
  7358  00298C  6E0A               	movwf	??_atoi^0,c
  7359  00298E  0EFF               	movlw	255
  7360  002990  6E0B               	movwf	(??_atoi+1)^0,c
  7361  002992  C008  FFF6         	movff	atoi@s,tblptrl
  7362  002996  C009  FFF7         	movff	atoi@s+1,tblptrh
  7363  00299A                     	if	0	;tblptru may be non-zero
  7364  00299A                     	endif
  7365  00299A                     	if	0	;tblptru may be non-zero
  7366  00299A                     	endif
  7367  00299A  0008               	tblrd		*
  7368  00299C  50F5               	movf	tablat,w,c
  7369  00299E  6E0C               	movwf	(??_atoi+2)^0,c
  7370  0029A0  6A0D               	clrf	(??_atoi+3)^0,c
  7371  0029A2  500A               	movf	??_atoi^0,w,c
  7372  0029A4  260C               	addwf	(??_atoi+2)^0,f,c
  7373  0029A6  500B               	movf	(??_atoi+1)^0,w,c
  7374  0029A8  220D               	addwfc	(??_atoi+3)^0,f,c
  7375  0029AA  500D               	movf	(??_atoi+3)^0,w,c
  7376  0029AC  E10A               	bnz	u5460
  7377  0029AE  0E0A               	movlw	10
  7378  0029B0  5C0C               	subwf	(??_atoi+2)^0,w,c
  7379  0029B2  A0D8               	btfss	status,0,c
  7380  0029B4  EFDE  F014         	goto	u5461
  7381  0029B8  EFE1  F014         	goto	u5460
  7382  0029BC                     u5461:
  7383  0029BC  0E01               	movlw	1
  7384  0029BE  EFE2  F014         	goto	u5470
  7385  0029C2                     u5460:
  7386  0029C2  0E00               	movlw	0
  7387  0029C4                     u5470:
  7388  0029C4  6E12               	movwf	_atoi$1090^0,c
  7389  0029C6  6A13               	clrf	(_atoi$1090+1)^0,c
  7390  0029C8  5012               	movf	_atoi$1090^0,w,c
  7391  0029CA  1013               	iorwf	(_atoi$1090+1)^0,w,c
  7392  0029CC  A4D8               	btfss	status,2,c
  7393  0029CE  EFEB  F014         	goto	u5481
  7394  0029D2  EFED  F014         	goto	u5480
  7395  0029D6                     u5481:
  7396  0029D6  EFAA  F014         	goto	l3835
  7397  0029DA                     u5480:
  7398  0029DA  500E               	movf	atoi@neg^0,w,c
  7399  0029DC  100F               	iorwf	(atoi@neg+1)^0,w,c
  7400  0029DE  A4D8               	btfss	status,2,c
  7401  0029E0  EFF4  F014         	goto	u5491
  7402  0029E4  EFF6  F014         	goto	u5490
  7403  0029E8                     u5491:
  7404  0029E8  EF04  F015         	goto	l1063
  7405  0029EC                     u5490:
  7406  0029EC  C015  F00A         	movff	atoi@n,??_atoi
  7407  0029F0  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7408  0029F4  1E0A               	comf	??_atoi^0,f,c
  7409  0029F6  1E0B               	comf	(??_atoi+1)^0,f,c
  7410  0029F8  4A0A               	infsnz	??_atoi^0,f,c
  7411  0029FA  2A0B               	incf	(??_atoi+1)^0,f,c
  7412  0029FC  C00A  F008         	movff	??_atoi,?_atoi
  7413  002A00  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7414  002A04  EF08  F015         	goto	l1066
  7415  002A08                     l1063:
  7416  002A08  C015  F008         	movff	atoi@n,?_atoi
  7417  002A0C  C016  F009         	movff	atoi@n+1,?_atoi+1
  7418  002A10                     l1066:
  7419  002A10  0012               	return		;funcret
  7420  002A12                     __end_of_atoi:
  7421                           	opt callstack 0
  7422                           
  7423 ;; *************** function _isspace *****************
  7424 ;; Defined at:
  7425 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  c               2    0[COMRAM] int 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  2    0[COMRAM] int 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7439 ;;      Params:         2       0       0       0       0       0       0       0       0
  7440 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7441 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7442 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7443 ;;Total ram usage:        7 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_atoi
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           	psect	text27
  7453  00383A                     __ptext27:
  7454                           	opt callstack 0
  7455  00383A                     _isspace:
  7456                           	opt callstack 26
  7457  00383A  0E01               	movlw	1
  7458  00383C  6E07               	movwf	_isspace$1119^0,c
  7459  00383E  0E20               	movlw	32
  7460  003840  1801               	xorwf	isspace@c^0,w,c
  7461  003842  1002               	iorwf	(isspace@c+1)^0,w,c
  7462  003844  B4D8               	btfsc	status,2,c
  7463  003846  EF27  F01C         	goto	u4731
  7464  00384A  EF29  F01C         	goto	u4730
  7465  00384E                     u4731:
  7466  00384E  EF42  F01C         	goto	l3477
  7467  003852                     u4730:
  7468  003852  0EF7               	movlw	247
  7469  003854  6E03               	movwf	??_isspace^0,c
  7470  003856  0EFF               	movlw	255
  7471  003858  6E04               	movwf	(??_isspace+1)^0,c
  7472  00385A  C001  F005         	movff	isspace@c,??_isspace+2
  7473  00385E  C002  F006         	movff	isspace@c+1,??_isspace+3
  7474  003862  5003               	movf	??_isspace^0,w,c
  7475  003864  2605               	addwf	(??_isspace+2)^0,f,c
  7476  003866  5004               	movf	(??_isspace+1)^0,w,c
  7477  003868  2206               	addwfc	(??_isspace+3)^0,f,c
  7478  00386A  5006               	movf	(??_isspace+3)^0,w,c
  7479  00386C  E109               	bnz	u4740
  7480  00386E  0E05               	movlw	5
  7481  003870  5C05               	subwf	(??_isspace+2)^0,w,c
  7482  003872  A0D8               	btfss	status,0,c
  7483  003874  EF3E  F01C         	goto	u4741
  7484  003878  EF40  F01C         	goto	u4740
  7485  00387C                     u4741:
  7486  00387C  EF42  F01C         	goto	l3477
  7487  003880                     u4740:
  7488  003880  0E00               	movlw	0
  7489  003882  6E07               	movwf	_isspace$1119^0,c
  7490  003884                     l3477:
  7491  003884  C007  F001         	movff	_isspace$1119,?_isspace
  7492  003888  6A02               	clrf	(?_isspace+1)^0,c
  7493  00388A  0012               	return		;funcret
  7494  00388C                     __end_of_isspace:
  7495                           	opt callstack 0
  7496                           
  7497 ;; *************** function _isdigit *****************
  7498 ;; Defined at:
  7499 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  c               2    0[COMRAM] int 
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  2    0[COMRAM] int 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7513 ;;      Params:         2       0       0       0       0       0       0       0       0
  7514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7515 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7516 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7517 ;;Total ram usage:        6 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_vfpfcnvrt
  7523 ;;		_atoi
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text28
  7528  0039D2                     __ptext28:
  7529                           	opt callstack 0
  7530  0039D2                     _isdigit:
  7531                           	opt callstack 27
  7532  0039D2  0ED0               	movlw	208
  7533  0039D4  6E03               	movwf	??_isdigit^0,c
  7534  0039D6  0EFF               	movlw	255
  7535  0039D8  6E04               	movwf	(??_isdigit+1)^0,c
  7536  0039DA  C001  F005         	movff	isdigit@c,??_isdigit+2
  7537  0039DE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7538  0039E2  5003               	movf	??_isdigit^0,w,c
  7539  0039E4  2605               	addwf	(??_isdigit+2)^0,f,c
  7540  0039E6  5004               	movf	(??_isdigit+1)^0,w,c
  7541  0039E8  2206               	addwfc	(??_isdigit+3)^0,f,c
  7542  0039EA  5006               	movf	(??_isdigit+3)^0,w,c
  7543  0039EC  E10A               	bnz	u4010
  7544  0039EE  0E0A               	movlw	10
  7545  0039F0  5C05               	subwf	(??_isdigit+2)^0,w,c
  7546  0039F2  A0D8               	btfss	status,0,c
  7547  0039F4  EFFE  F01C         	goto	u4011
  7548  0039F8  EF01  F01D         	goto	u4010
  7549  0039FC                     u4011:
  7550  0039FC  0E01               	movlw	1
  7551  0039FE  EF02  F01D         	goto	u4020
  7552  003A02                     u4010:
  7553  003A02  0E00               	movlw	0
  7554  003A04                     u4020:
  7555  003A04  6E01               	movwf	?_isdigit^0,c
  7556  003A06  6A02               	clrf	(?_isdigit+1)^0,c
  7557  003A08  0012               	return		;funcret
  7558  003A0A                     __end_of_isdigit:
  7559                           	opt callstack 0
  7560                           
  7561 ;; *************** function ___wmul *****************
  7562 ;; Defined at:
  7563 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  multiplier      2    0[COMRAM] unsigned int 
  7566 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;  product         2    4[COMRAM] unsigned int 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  2    0[COMRAM] unsigned int 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0, prodl, prodh
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7578 ;;      Params:         4       0       0       0       0       0       0       0       0
  7579 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7581 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7582 ;;Total ram usage:        6 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_atoi
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text29
  7592  003A40                     __ptext29:
  7593                           	opt callstack 0
  7594  003A40                     ___wmul:
  7595                           	opt callstack 26
  7596  003A40  5001               	movf	___wmul@multiplier^0,w,c
  7597  003A42  0203               	mulwf	___wmul@multiplicand^0,c
  7598  003A44  CFF3 F005          	movff	prodl,___wmul@product
  7599  003A48  CFF4 F006          	movff	prodh,___wmul@product+1
  7600  003A4C  5001               	movf	___wmul@multiplier^0,w,c
  7601  003A4E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7602  003A50  50F3               	movf	243,w,c
  7603  003A52  2606               	addwf	(___wmul@product+1)^0,f,c
  7604  003A54  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7605  003A56  0203               	mulwf	___wmul@multiplicand^0,c
  7606  003A58  50F3               	movf	243,w,c
  7607  003A5A  2606               	addwf	(___wmul@product+1)^0,f,c
  7608  003A5C  C005  F001         	movff	___wmul@product,?___wmul
  7609  003A60  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7610  003A64  0012               	return		;funcret
  7611  003A66                     __end_of___wmul:
  7612                           	opt callstack 0
  7613                           
  7614 ;; *************** function ___xxtofl *****************
  7615 ;; Defined at:
  7616 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  sign            1    wreg     unsigned char 
  7619 ;;  val             4    0[COMRAM] long 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  sign            1    8[COMRAM] unsigned char 
  7622 ;;  arg             4   10[COMRAM] unsigned long 
  7623 ;;  exp             1    9[COMRAM] unsigned char 
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  4    0[COMRAM] unsigned char 
  7626 ;; Registers used:
  7627 ;;		wreg, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7633 ;;      Params:         4       0       0       0       0       0       0       0       0
  7634 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7635 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7636 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7637 ;;Total ram usage:       14 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_main
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text30
  7647  0026CE                     __ptext30:
  7648                           	opt callstack 0
  7649  0026CE                     ___xxtofl:
  7650                           	opt callstack 30
  7651                           
  7652                           ;incstack = 0
  7653                           ;___xxtofl@sign stored from wreg
  7654  0026CE  6E09               	movwf	___xxtofl@sign^0,c
  7655  0026D0  5009               	movf	___xxtofl@sign^0,w,c
  7656  0026D2  B4D8               	btfsc	status,2,c
  7657  0026D4  EF6E  F013         	goto	u5761
  7658  0026D8  EF70  F013         	goto	u5760
  7659  0026DC                     u5761:
  7660  0026DC  EF92  F013         	goto	l1008
  7661  0026E0                     u5760:
  7662  0026E0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7663  0026E2  EF77  F013         	goto	u5770
  7664  0026E6  EF75  F013         	goto	u5771
  7665  0026EA                     u5771:
  7666  0026EA  EF92  F013         	goto	l1008
  7667  0026EE                     u5770:
  7668  0026EE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7669  0026F2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7670  0026F6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7671  0026FA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7672  0026FE  1E05               	comf	??___xxtofl^0,f,c
  7673  002700  1E06               	comf	(??___xxtofl+1)^0,f,c
  7674  002702  1E07               	comf	(??___xxtofl+2)^0,f,c
  7675  002704  1E08               	comf	(??___xxtofl+3)^0,f,c
  7676  002706  2A05               	incf	??___xxtofl^0,f,c
  7677  002708  0E00               	movlw	0
  7678  00270A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7679  00270C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7680  00270E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7681  002710  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7682  002714  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7683  002718  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7684  00271C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7685  002720  EF9A  F013         	goto	l4055
  7686  002724                     l1008:
  7687  002724  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7688  002728  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7689  00272C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7690  002730  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7691  002734                     l4055:
  7692  002734  5001               	movf	___xxtofl@val^0,w,c
  7693  002736  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7694  002738  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7695  00273A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7696  00273C  A4D8               	btfss	status,2,c
  7697  00273E  EFA3  F013         	goto	u5781
  7698  002742  EFA5  F013         	goto	u5780
  7699  002746                     u5781:
  7700  002746  EFAF  F013         	goto	l4061
  7701  00274A                     u5780:
  7702  00274A  0E00               	movlw	0
  7703  00274C  6E01               	movwf	?___xxtofl^0,c
  7704  00274E  0E00               	movlw	0
  7705  002750  6E02               	movwf	(?___xxtofl+1)^0,c
  7706  002752  0E00               	movlw	0
  7707  002754  6E03               	movwf	(?___xxtofl+2)^0,c
  7708  002756  0E00               	movlw	0
  7709  002758  6E04               	movwf	(?___xxtofl+3)^0,c
  7710  00275A  EF40  F014         	goto	l1011
  7711  00275E                     l4061:
  7712  00275E  0E96               	movlw	150
  7713  002760  6E0A               	movwf	___xxtofl@exp^0,c
  7714  002762  EFB9  F013         	goto	l4065
  7715  002766                     l4063:
  7716  002766  2A0A               	incf	___xxtofl@exp^0,f,c
  7717  002768  90D8               	bcf	status,0,c
  7718  00276A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7719  00276C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7720  00276E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7721  002770  320B               	rrcf	___xxtofl@arg^0,f,c
  7722  002772                     l4065:
  7723  002772  0E00               	movlw	0
  7724  002774  140B               	andwf	___xxtofl@arg^0,w,c
  7725  002776  6E05               	movwf	??___xxtofl^0,c
  7726  002778  0E00               	movlw	0
  7727  00277A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7728  00277C  6E06               	movwf	(??___xxtofl+1)^0,c
  7729  00277E  0E00               	movlw	0
  7730  002780  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7731  002782  6E07               	movwf	(??___xxtofl+2)^0,c
  7732  002784  0EFE               	movlw	254
  7733  002786  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7734  002788  6E08               	movwf	(??___xxtofl+3)^0,c
  7735  00278A  5005               	movf	??___xxtofl^0,w,c
  7736  00278C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7737  00278E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7738  002790  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7739  002792  A4D8               	btfss	status,2,c
  7740  002794  EFCE  F013         	goto	u5791
  7741  002798  EFD0  F013         	goto	u5790
  7742  00279C                     u5791:
  7743  00279C  EFB3  F013         	goto	l4063
  7744  0027A0                     u5790:
  7745  0027A0  EFDE  F013         	goto	l1015
  7746  0027A4                     l4067:
  7747  0027A4  2A0A               	incf	___xxtofl@exp^0,f,c
  7748  0027A6  0E01               	movlw	1
  7749  0027A8  260B               	addwf	___xxtofl@arg^0,f,c
  7750  0027AA  0E00               	movlw	0
  7751  0027AC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7752  0027AE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7753  0027B0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7754  0027B2  90D8               	bcf	status,0,c
  7755  0027B4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7756  0027B6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7757  0027B8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7758  0027BA  320B               	rrcf	___xxtofl@arg^0,f,c
  7759  0027BC                     l1015:
  7760  0027BC  0E00               	movlw	0
  7761  0027BE  140B               	andwf	___xxtofl@arg^0,w,c
  7762  0027C0  6E05               	movwf	??___xxtofl^0,c
  7763  0027C2  0E00               	movlw	0
  7764  0027C4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7765  0027C6  6E06               	movwf	(??___xxtofl+1)^0,c
  7766  0027C8  0E00               	movlw	0
  7767  0027CA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7768  0027CC  6E07               	movwf	(??___xxtofl+2)^0,c
  7769  0027CE  0EFF               	movlw	255
  7770  0027D0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7771  0027D2  6E08               	movwf	(??___xxtofl+3)^0,c
  7772  0027D4  5005               	movf	??___xxtofl^0,w,c
  7773  0027D6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7774  0027D8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7775  0027DA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7776  0027DC  A4D8               	btfss	status,2,c
  7777  0027DE  EFF3  F013         	goto	u5801
  7778  0027E2  EFF5  F013         	goto	u5800
  7779  0027E6                     u5801:
  7780  0027E6  EFD2  F013         	goto	l4067
  7781  0027EA                     u5800:
  7782  0027EA  EFFD  F013         	goto	l4075
  7783  0027EE                     l4073:
  7784  0027EE  060A               	decf	___xxtofl@exp^0,f,c
  7785  0027F0  90D8               	bcf	status,0,c
  7786  0027F2  360B               	rlcf	___xxtofl@arg^0,f,c
  7787  0027F4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7788  0027F6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7789  0027F8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7790  0027FA                     l4075:
  7791  0027FA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7792  0027FC  EF02  F014         	goto	u5811
  7793  002800  EF04  F014         	goto	u5810
  7794  002804                     u5811:
  7795  002804  EF0C  F014         	goto	l1022
  7796  002808                     u5810:
  7797  002808  0E02               	movlw	2
  7798  00280A  600A               	cpfslt	___xxtofl@exp^0,c
  7799  00280C  EF0A  F014         	goto	u5821
  7800  002810  EF0C  F014         	goto	u5820
  7801  002814                     u5821:
  7802  002814  EFF7  F013         	goto	l4073
  7803  002818                     u5820:
  7804  002818                     l1022:
  7805  002818  B00A               	btfsc	___xxtofl@exp^0,0,c
  7806  00281A  EF11  F014         	goto	u5831
  7807  00281E  EF13  F014         	goto	u5830
  7808  002822                     u5831:
  7809  002822  EF14  F014         	goto	l4081
  7810  002826                     u5830:
  7811  002826  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7812  002828                     l4081:
  7813  002828  90D8               	bcf	status,0,c
  7814  00282A  320A               	rrcf	___xxtofl@exp^0,f,c
  7815  00282C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7816  002830  6A06               	clrf	(??___xxtofl+1)^0,c
  7817  002832  6A07               	clrf	(??___xxtofl+2)^0,c
  7818  002834  6A08               	clrf	(??___xxtofl+3)^0,c
  7819  002836  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7820  00283A  6A07               	clrf	(??___xxtofl+2)^0,c
  7821  00283C  6A06               	clrf	(??___xxtofl+1)^0,c
  7822  00283E  6A05               	clrf	??___xxtofl^0,c
  7823  002840  5005               	movf	??___xxtofl^0,w,c
  7824  002842  120B               	iorwf	___xxtofl@arg^0,f,c
  7825  002844  5006               	movf	(??___xxtofl+1)^0,w,c
  7826  002846  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7827  002848  5007               	movf	(??___xxtofl+2)^0,w,c
  7828  00284A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7829  00284C  5008               	movf	(??___xxtofl+3)^0,w,c
  7830  00284E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7831  002850  5009               	movf	___xxtofl@sign^0,w,c
  7832  002852  B4D8               	btfsc	status,2,c
  7833  002854  EF2E  F014         	goto	u5841
  7834  002858  EF30  F014         	goto	u5840
  7835  00285C                     u5841:
  7836  00285C  EF38  F014         	goto	l4091
  7837  002860                     u5840:
  7838  002860  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7839  002862  EF37  F014         	goto	u5850
  7840  002866  EF35  F014         	goto	u5851
  7841  00286A                     u5851:
  7842  00286A  EF38  F014         	goto	l4091
  7843  00286E                     u5850:
  7844  00286E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7845  002870                     l4091:
  7846  002870  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7847  002874  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7848  002878  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7849  00287C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7850  002880                     l1011:
  7851  002880  0012               	return		;funcret
  7852  002882                     __end_of___xxtofl:
  7853                           	opt callstack 0
  7854                           
  7855 ;; *************** function _LCD_PosicionLinea2 *****************
  7856 ;; Defined at:
  7857 ;;		line 145 in file "MiLCD.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  Pos             1    wreg     unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  Pos             1   13[COMRAM] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0
  7872 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7874 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7875 ;;Total ram usage:        1 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    3
  7878 ;; This function calls:
  7879 ;;		_LCD_EnviaComando
  7880 ;; This function is called by:
  7881 ;;		_main
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text31
  7886  003A9C                     __ptext31:
  7887                           	opt callstack 0
  7888  003A9C                     _LCD_PosicionLinea2:
  7889                           	opt callstack 27
  7890                           
  7891                           ;incstack = 0
  7892                           ;LCD_PosicionLinea2@Pos stored from wreg
  7893  003A9C  6E0E               	movwf	LCD_PosicionLinea2@Pos^0,c
  7894  003A9E                     
  7895                           ;MiLCD.c: 145: void LCD_PosicionLinea2( uint8_t Pos );MiLCD.c: 146: {;MiLCD.c: 147:     
      +                          LCD_EnviaComando(0x80 + 0x40 + Pos);
  7896  003A9E  500E               	movf	LCD_PosicionLinea2@Pos^0,w,c
  7897  003AA0  0FC0               	addlw	192
  7898  003AA2  EC5A  F01D         	call	_LCD_EnviaComando
  7899  003AA6  0012               	return		;funcret
  7900  003AA8                     __end_of_LCD_PosicionLinea2:
  7901                           	opt callstack 0
  7902                           
  7903 ;; *************** function _LCD_PosicionLinea1 *****************
  7904 ;; Defined at:
  7905 ;;		line 135 in file "MiLCD.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  Pos             1    wreg     unsigned char 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  Pos             1   13[COMRAM] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0
  7920 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7922 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7923 ;;Total ram usage:        1 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    3
  7926 ;; This function calls:
  7927 ;;		_LCD_EnviaComando
  7928 ;; This function is called by:
  7929 ;;		_main
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text32
  7934  003AA8                     __ptext32:
  7935                           	opt callstack 0
  7936  003AA8                     _LCD_PosicionLinea1:
  7937                           	opt callstack 27
  7938                           
  7939                           ;incstack = 0
  7940                           ;LCD_PosicionLinea1@Pos stored from wreg
  7941  003AA8  6E0E               	movwf	LCD_PosicionLinea1@Pos^0,c
  7942  003AAA                     
  7943                           ;MiLCD.c: 135: void LCD_PosicionLinea1( uint8_t Pos );MiLCD.c: 136: {;MiLCD.c: 137:     
      +                          LCD_EnviaComando(0x80 + 0x00 + Pos);
  7944  003AAA  500E               	movf	LCD_PosicionLinea1@Pos^0,w,c
  7945  003AAC  0F80               	addlw	128
  7946  003AAE  EC5A  F01D         	call	_LCD_EnviaComando
  7947  003AB2  0012               	return		;funcret
  7948  003AB4                     __end_of_LCD_PosicionLinea1:
  7949                           	opt callstack 0
  7950                           
  7951 ;; *************** function _LCD_Inicializa *****************
  7952 ;; Defined at:
  7953 ;;		line 50 in file "MiLCD.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;		None
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, status,2, status,0, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7967 ;;      Params:         0       0       0       0       0       0       0       0       0
  7968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7969 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7970 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7971 ;;Total ram usage:        2 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    4
  7974 ;; This function calls:
  7975 ;;		_LCD_2Lineas8Bits5x7
  7976 ;;		_LCD_Borra
  7977 ;;		_LCD_CursorIncr
  7978 ;;		_LCD_CursorOFF
  7979 ;;		_LCD_Envia
  7980 ;; This function is called by:
  7981 ;;		_main
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text33
  7986  0035E6                     __ptext33:
  7987                           	opt callstack 0
  7988  0035E6                     _LCD_Inicializa:
  7989                           	opt callstack 26
  7990  0035E6                     
  7991                           ;MiLCD.c: 52:     TRISDbits.TRISD2 = 0;
  7992  0035E6  9495               	bcf	149,2,c	;volatile
  7993                           
  7994                           ;MiLCD.c: 53:     TRISDbits.TRISD1 = 0;
  7995  0035E8  9295               	bcf	149,1,c	;volatile
  7996                           
  7997                           ;MiLCD.c: 54:     TRISDbits.TRISD0 = 0;
  7998  0035EA  9095               	bcf	149,0,c	;volatile
  7999                           
  8000                           ;MiLCD.c: 55:     TRISBbits.TRISB7 = 0;
  8001  0035EC  9E93               	bcf	147,7,c	;volatile
  8002                           
  8003                           ;MiLCD.c: 56:     TRISBbits.TRISB6 = 0;
  8004  0035EE  9C93               	bcf	147,6,c	;volatile
  8005                           
  8006                           ;MiLCD.c: 57:     TRISBbits.TRISB5 = 0;
  8007  0035F0  9A93               	bcf	147,5,c	;volatile
  8008                           
  8009                           ;MiLCD.c: 58:     TRISBbits.TRISB4 = 0;
  8010  0035F2  9893               	bcf	147,4,c	;volatile
  8011                           
  8012                           ;MiLCD.c: 59:     TRISBbits.TRISB3 = 0;
  8013  0035F4  9693               	bcf	147,3,c	;volatile
  8014                           
  8015                           ;MiLCD.c: 60:     TRISBbits.TRISB2 = 0;
  8016  0035F6  9493               	bcf	147,2,c	;volatile
  8017                           
  8018                           ;MiLCD.c: 61:     TRISBbits.TRISB1 = 0;
  8019  0035F8  9293               	bcf	147,1,c	;volatile
  8020                           
  8021                           ;MiLCD.c: 62:     TRISBbits.TRISB0 = 0;
  8022  0035FA  9093               	bcf	147,0,c	;volatile
  8023                           
  8024                           ;MiLCD.c: 64:     PORTDbits.RD1 = 0;
  8025  0035FC  9283               	bcf	131,1,c	;volatile
  8026                           
  8027                           ;MiLCD.c: 66:  PORTDbits.RD0 = 0;
  8028  0035FE  9083               	bcf	131,0,c	;volatile
  8029                           
  8030                           ;MiLCD.c: 67:     PORTDbits.RD2 = 0;
  8031  003600  9483               	bcf	131,2,c	;volatile
  8032  003602                     
  8033                           ;MiLCD.c: 68:  _delay((unsigned long)((200)*(4000000UL/4000.0)));
  8034  003602  0E02               	movlw	2
  8035  003604  6E0F               	movwf	(??_LCD_Inicializa+1)^0,c
  8036  003606  0E04               	movlw	4
  8037  003608  6E0E               	movwf	??_LCD_Inicializa^0,c
  8038  00360A  0EBA               	movlw	186
  8039  00360C                     u5947:
  8040  00360C  2EE8               	decfsz	wreg,f,c
  8041  00360E  D7FE               	bra	u5947
  8042  003610  2E0E               	decfsz	??_LCD_Inicializa^0,f,c
  8043  003612  D7FC               	bra	u5947
  8044  003614  2E0F               	decfsz	(??_LCD_Inicializa+1)^0,f,c
  8045  003616  D7FA               	bra	u5947
  8046  003618  D000               	nop2	
  8047  00361A                     
  8048                           ;MiLCD.c: 69:  LCD_Envia(0B00111000);
  8049  00361A  0E38               	movlw	56
  8050  00361C  EC32  F018         	call	_LCD_Envia
  8051  003620                     
  8052                           ;MiLCD.c: 70:  _delay((unsigned long)((5)*(4000000UL/4000.0)));
  8053  003620  0E07               	movlw	7
  8054  003622  6E0E               	movwf	??_LCD_Inicializa^0,c
  8055  003624  0E7D               	movlw	125
  8056  003626                     u5957:
  8057  003626  2EE8               	decfsz	wreg,f,c
  8058  003628  D7FE               	bra	u5957
  8059  00362A  2E0E               	decfsz	??_LCD_Inicializa^0,f,c
  8060  00362C  D7FC               	bra	u5957
  8061  00362E  F000               	nop	
  8062                           
  8063                           ;MiLCD.c: 71:     LCD_Envia(0B00110000);
  8064  003630  0E30               	movlw	48
  8065  003632  EC32  F018         	call	_LCD_Envia
  8066  003636                     
  8067                           ;MiLCD.c: 72:  _delay((unsigned long)((200)*(4000000UL/4000000.0)));
  8068  003636  0E42               	movlw	66
  8069  003638                     u5967:
  8070  003638  2EE8               	decfsz	wreg,f,c
  8071  00363A  D7FE               	bra	u5967
  8072  00363C  D000               	nop2	
  8073  00363E                     
  8074                           ;MiLCD.c: 73:     LCD_Envia(0B00110000);
  8075  00363E  0E30               	movlw	48
  8076  003640  EC32  F018         	call	_LCD_Envia
  8077                           
  8078                           ;MiLCD.c: 74:  _delay((unsigned long)((200)*(4000000UL/4000000.0)));
  8079  003644  0E42               	movlw	66
  8080  003646                     u5977:
  8081  003646  2EE8               	decfsz	wreg,f,c
  8082  003648  D7FE               	bra	u5977
  8083  00364A  D000               	nop2	
  8084  00364C                     
  8085                           ;MiLCD.c: 75:     LCD_Envia(0B00110000);
  8086  00364C  0E30               	movlw	48
  8087  00364E  EC32  F018         	call	_LCD_Envia
  8088  003652                     
  8089                           ;MiLCD.c: 76:  _delay((unsigned long)((20)*(4000000UL/4000000.0)));
  8090  003652  0E06               	movlw	6
  8091  003654                     u5987:
  8092  003654  2EE8               	decfsz	wreg,f,c
  8093  003656  D7FE               	bra	u5987
  8094  003658  D000               	nop2	
  8095                           
  8096                           ;MiLCD.c: 79:  LCD_2Lineas8Bits5x7();
  8097  00365A  EC6C  F01D         	call	_LCD_2Lineas8Bits5x7	;wreg free
  8098                           
  8099                           ;MiLCD.c: 80:  LCD_Borra();
  8100  00365E  EC68  F01D         	call	_LCD_Borra	;wreg free
  8101                           
  8102                           ;MiLCD.c: 81:  LCD_CursorOFF();
  8103  003662  EC60  F01D         	call	_LCD_CursorOFF	;wreg free
  8104                           
  8105                           ;MiLCD.c: 82:  LCD_CursorIncr();
  8106  003666  EC64  F01D         	call	_LCD_CursorIncr	;wreg free
  8107  00366A  0012               	return		;funcret
  8108  00366C                     __end_of_LCD_Inicializa:
  8109                           	opt callstack 0
  8110                           
  8111 ;; *************** function _LCD_CursorOFF *****************
  8112 ;; Defined at:
  8113 ;;		line 192 in file "MiLCD.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;		None
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      void 
  8120 ;; Registers used:
  8121 ;;		wreg, status,2, status,0, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8127 ;;      Params:         0       0       0       0       0       0       0       0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8130 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8131 ;;Total ram usage:        0 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:    3
  8134 ;; This function calls:
  8135 ;;		_LCD_EnviaComando
  8136 ;; This function is called by:
  8137 ;;		_LCD_Inicializa
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text34
  8142  003AC0                     __ptext34:
  8143                           	opt callstack 0
  8144  003AC0                     _LCD_CursorOFF:
  8145                           	opt callstack 26
  8146  003AC0                     
  8147                           ;MiLCD.c: 194:     LCD_EnviaComando(0B00001100);
  8148  003AC0  0E0C               	movlw	12
  8149  003AC2  EC5A  F01D         	call	_LCD_EnviaComando
  8150  003AC6  0012               	return		;funcret
  8151  003AC8                     __end_of_LCD_CursorOFF:
  8152                           	opt callstack 0
  8153                           
  8154 ;; *************** function _LCD_CursorIncr *****************
  8155 ;; Defined at:
  8156 ;;		line 89 in file "MiLCD.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;		None
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;		None
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  1    wreg      void 
  8163 ;; Registers used:
  8164 ;;		wreg, status,2, status,0, cstack
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0
  8171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8173 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8174 ;;Total ram usage:        0 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:    3
  8177 ;; This function calls:
  8178 ;;		_LCD_EnviaComando
  8179 ;; This function is called by:
  8180 ;;		_LCD_Inicializa
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text35
  8185  003AC8                     __ptext35:
  8186                           	opt callstack 0
  8187  003AC8                     _LCD_CursorIncr:
  8188                           	opt callstack 26
  8189  003AC8                     
  8190                           ;MiLCD.c: 91:  LCD_EnviaComando(0B00000110);
  8191  003AC8  0E06               	movlw	6
  8192  003ACA  EC5A  F01D         	call	_LCD_EnviaComando
  8193  003ACE  0012               	return		;funcret
  8194  003AD0                     __end_of_LCD_CursorIncr:
  8195                           	opt callstack 0
  8196                           
  8197 ;; *************** function _LCD_Borra *****************
  8198 ;; Defined at:
  8199 ;;		line 202 in file "MiLCD.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;		None
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;		None
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  1    wreg      void 
  8206 ;; Registers used:
  8207 ;;		wreg, status,2, status,0, cstack
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8213 ;;      Params:         0       0       0       0       0       0       0       0       0
  8214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8216 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8217 ;;Total ram usage:        0 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; Hardware stack levels required when called:    3
  8220 ;; This function calls:
  8221 ;;		_LCD_EnviaComando
  8222 ;; This function is called by:
  8223 ;;		_LCD_Inicializa
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text36
  8228  003AD0                     __ptext36:
  8229                           	opt callstack 0
  8230  003AD0                     _LCD_Borra:
  8231                           	opt callstack 26
  8232  003AD0                     
  8233                           ;MiLCD.c: 204:     LCD_EnviaComando(0B00000001);
  8234  003AD0  0E01               	movlw	1
  8235  003AD2  EC5A  F01D         	call	_LCD_EnviaComando
  8236  003AD6  0012               	return		;funcret
  8237  003AD8                     __end_of_LCD_Borra:
  8238                           	opt callstack 0
  8239                           
  8240 ;; *************** function _LCD_2Lineas8Bits5x7 *****************
  8241 ;; Defined at:
  8242 ;;		line 212 in file "MiLCD.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;		None
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1    wreg      void 
  8249 ;; Registers used:
  8250 ;;		wreg, status,2, status,0, cstack
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8256 ;;      Params:         0       0       0       0       0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8259 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8260 ;;Total ram usage:        0 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; Hardware stack levels required when called:    3
  8263 ;; This function calls:
  8264 ;;		_LCD_EnviaComando
  8265 ;; This function is called by:
  8266 ;;		_LCD_Inicializa
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text37
  8271  003AD8                     __ptext37:
  8272                           	opt callstack 0
  8273  003AD8                     _LCD_2Lineas8Bits5x7:
  8274                           	opt callstack 26
  8275  003AD8                     
  8276                           ;MiLCD.c: 214:     LCD_EnviaComando(0B00111000);
  8277  003AD8  0E38               	movlw	56
  8278  003ADA  EC5A  F01D         	call	_LCD_EnviaComando
  8279  003ADE  0012               	return		;funcret
  8280  003AE0                     __end_of_LCD_2Lineas8Bits5x7:
  8281                           	opt callstack 0
  8282                           
  8283 ;; *************** function _LCD_EnviaComando *****************
  8284 ;; Defined at:
  8285 ;;		line 222 in file "MiLCD.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;  Comando         1    wreg     unsigned char 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  Comando         1   12[COMRAM] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      void 
  8292 ;; Registers used:
  8293 ;;		wreg, status,2, status,0, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8299 ;;      Params:         0       0       0       0       0       0       0       0       0
  8300 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8302 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8303 ;;Total ram usage:        1 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    2
  8306 ;; This function calls:
  8307 ;;		_LCD_Envia
  8308 ;; This function is called by:
  8309 ;;		_LCD_CursorIncr
  8310 ;;		_LCD_PosicionLinea1
  8311 ;;		_LCD_PosicionLinea2
  8312 ;;		_LCD_CursorOFF
  8313 ;;		_LCD_Borra
  8314 ;;		_LCD_2Lineas8Bits5x7
  8315 ;;		_LCD_Linea1
  8316 ;;		_LCD_Linea2
  8317 ;;		_LCD_Linea3
  8318 ;;		_LCD_Linea4
  8319 ;;		_LCD_PosicionLinea3
  8320 ;;		_LCD_PosicionLinea4
  8321 ;;		_LCD_OFF
  8322 ;;		_LCD_CursorON
  8323 ;;		_LCD_ShiftRight
  8324 ;;		_LCD_ShiftLeft
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           	psect	text38
  8329  003AB4                     __ptext38:
  8330                           	opt callstack 0
  8331  003AB4                     _LCD_EnviaComando:
  8332                           	opt callstack 27
  8333                           
  8334                           ;incstack = 0
  8335                           ;LCD_EnviaComando@Comando stored from wreg
  8336  003AB4  6E0D               	movwf	LCD_EnviaComando@Comando^0,c
  8337  003AB6                     
  8338                           ;MiLCD.c: 222: void LCD_EnviaComando( uint8_t Comando );MiLCD.c: 223: {;MiLCD.c: 224:   
      +                            PORTDbits.RD2 = 0;
  8339  003AB6  9483               	bcf	131,2,c	;volatile
  8340  003AB8                     
  8341                           ;MiLCD.c: 225:     LCD_Envia( Comando );
  8342  003AB8  500D               	movf	LCD_EnviaComando@Comando^0,w,c
  8343  003ABA  EC32  F018         	call	_LCD_Envia
  8344  003ABE  0012               	return		;funcret
  8345  003AC0                     __end_of_LCD_EnviaComando:
  8346                           	opt callstack 0
  8347                           
  8348 ;; *************** function _LCD_EnviaCadena *****************
  8349 ;; Defined at:
  8350 ;;		line 245 in file "MiLCD.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  Cadena          2   13[COMRAM] PTR unsigned char 
  8353 ;;		 -> main@pepe(4), STR_2(3), STR_1(10), 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;		None
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      void 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8365 ;;      Params:         2       0       0       0       0       0       0       0       0
  8366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8368 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8369 ;;Total ram usage:        2 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:    3
  8372 ;; This function calls:
  8373 ;;		_LCD_EnviaCaracter
  8374 ;; This function is called by:
  8375 ;;		_main
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           	psect	text39
  8380  00372E                     __ptext39:
  8381                           	opt callstack 0
  8382  00372E                     _LCD_EnviaCadena:
  8383                           	opt callstack 27
  8384  00372E                     
  8385                           ;MiLCD.c: 245: void LCD_EnviaCadena( uint8_t * Cadena );MiLCD.c: 246: {;MiLCD.c: 247:   
      +                            while( *Cadena )
  8386  00372E  EFAD  F01B         	goto	l4033
  8387  003732                     l4029:
  8388                           
  8389                           ;MiLCD.c: 248:         LCD_EnviaCaracter( *(Cadena++) );
  8390  003732  C00E  FFF6         	movff	LCD_EnviaCadena@Cadena,tblptrl
  8391  003736  C00F  FFF7         	movff	LCD_EnviaCadena@Cadena+1,tblptrh
  8392  00373A  6AF8               	clrf	tblptru,c
  8393  00373C  0E07               	movlw	(high __ramtop+-1)
  8394  00373E  64F7               	cpfsgt	tblptrh,c
  8395  003740  D003               	bra	u5737
  8396  003742  0008               	tblrd		*
  8397  003744  50F5               	movf	tablat,w,c
  8398  003746  D005               	bra	u5730
  8399  003748                     u5737:
  8400  003748  CFF6 FFE9          	movff	tblptrl,fsr0l
  8401  00374C  CFF7 FFEA          	movff	tblptrh,fsr0h
  8402  003750  50EF               	movf	indf0,w,c
  8403  003752                     u5730:
  8404  003752  EC44  F01D         	call	_LCD_EnviaCaracter
  8405  003756  4A0E               	infsnz	LCD_EnviaCadena@Cadena^0,f,c
  8406  003758  2A0F               	incf	(LCD_EnviaCadena@Cadena+1)^0,f,c
  8407  00375A                     l4033:
  8408                           
  8409                           ;MiLCD.c: 247:     while( *Cadena )
  8410  00375A  C00E  FFF6         	movff	LCD_EnviaCadena@Cadena,tblptrl
  8411  00375E  C00F  FFF7         	movff	LCD_EnviaCadena@Cadena+1,tblptrh
  8412  003762  6AF8               	clrf	tblptru,c
  8413  003764  0E07               	movlw	(high __ramtop+-1)
  8414  003766  64F7               	cpfsgt	tblptrh,c
  8415  003768  D003               	bra	u5747
  8416  00376A  0008               	tblrd		*
  8417  00376C  50F5               	movf	tablat,w,c
  8418  00376E  D005               	bra	u5740
  8419  003770                     u5747:
  8420  003770  CFF6 FFE9          	movff	tblptrl,fsr0l
  8421  003774  CFF7 FFEA          	movff	tblptrh,fsr0h
  8422  003778  50EF               	movf	indf0,w,c
  8423  00377A                     u5740:
  8424  00377A  0900               	iorlw	0
  8425  00377C  A4D8               	btfss	status,2,c
  8426  00377E  EFC3  F01B         	goto	u5751
  8427  003782  EFC5  F01B         	goto	u5750
  8428  003786                     u5751:
  8429  003786  EF99  F01B         	goto	l4029
  8430  00378A                     u5750:
  8431  00378A  0012               	return		;funcret
  8432  00378C                     __end_of_LCD_EnviaCadena:
  8433                           	opt callstack 0
  8434                           
  8435 ;; *************** function _LCD_EnviaCaracter *****************
  8436 ;; Defined at:
  8437 ;;		line 233 in file "MiLCD.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  Caracter        1    wreg     unsigned char 
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;  Caracter        1   12[COMRAM] unsigned char 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      void 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2, status,0, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0
  8452 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8454 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8455 ;;Total ram usage:        1 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    2
  8458 ;; This function calls:
  8459 ;;		_LCD_CodigoCGROM
  8460 ;;		_LCD_Envia
  8461 ;; This function is called by:
  8462 ;;		_LCD_EnviaCadena
  8463 ;;		_LCD_EnviaBlancos
  8464 ;;		_LCD_EnviaByte
  8465 ;;		_LCD_EnviaNibble
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text40
  8470  003A88                     __ptext40:
  8471                           	opt callstack 0
  8472  003A88                     _LCD_EnviaCaracter:
  8473                           	opt callstack 27
  8474                           
  8475                           ;incstack = 0
  8476                           ;LCD_EnviaCaracter@Caracter stored from wreg
  8477  003A88  6E0D               	movwf	LCD_EnviaCaracter@Caracter^0,c
  8478  003A8A                     
  8479                           ;MiLCD.c: 233: void LCD_EnviaCaracter( uint8_t Caracter );MiLCD.c: 234: {;MiLCD.c: 235: 
      +                              PORTDbits.RD2 = 1;
  8480  003A8A  8483               	bsf	131,2,c	;volatile
  8481  003A8C                     
  8482                           ;MiLCD.c: 236:     Caracter = LCD_CodigoCGROM( Caracter );
  8483  003A8C  500D               	movf	LCD_EnviaCaracter@Caracter^0,w,c
  8484  003A8E  EC46  F01C         	call	_LCD_CodigoCGROM
  8485  003A92  6E0D               	movwf	LCD_EnviaCaracter@Caracter^0,c
  8486                           
  8487                           ;MiLCD.c: 237:     LCD_Envia( Caracter );
  8488  003A94  500D               	movf	LCD_EnviaCaracter@Caracter^0,w,c
  8489  003A96  EC32  F018         	call	_LCD_Envia
  8490  003A9A  0012               	return		;funcret
  8491  003A9C                     __end_of_LCD_EnviaCaracter:
  8492                           	opt callstack 0
  8493                           
  8494 ;; *************** function _LCD_Envia *****************
  8495 ;; Defined at:
  8496 ;;		line 256 in file "MiLCD.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  Dato            1    wreg     unsigned char 
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;  Dato            1   10[COMRAM] unsigned char 
  8501 ;;  LCD_GuardaTR    1   11[COMRAM] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  1    wreg      void 
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0, cstack
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8511 ;;      Params:         0       0       0       0       0       0       0       0       0
  8512 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8513 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8514 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8515 ;;Total ram usage:       10 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; Hardware stack levels required when called:    1
  8518 ;; This function calls:
  8519 ;;		_LCD_CfgPort
  8520 ;;		_LCD_Port
  8521 ;; This function is called by:
  8522 ;;		_LCD_Inicializa
  8523 ;;		_LCD_EnviaComando
  8524 ;;		_LCD_EnviaCaracter
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text41
  8529  003064                     __ptext41:
  8530                           	opt callstack 0
  8531  003064                     _LCD_Envia:
  8532                           	opt callstack 27
  8533                           
  8534                           ;incstack = 0
  8535                           ;LCD_Envia@Dato stored from wreg
  8536  003064  6E0B               	movwf	LCD_Envia@Dato^0,c
  8537  003066                     
  8538                           ;MiLCD.c: 256: void LCD_Envia( uint8_t Dato );MiLCD.c: 257: {;MiLCD.c: 258:     uint8_t 
      +                          LCD_GuardaTRIS = (TRISBbits.TRISB7 << 7) |
  8539  003066  B093               	btfsc	147,0,c	;volatile
  8540  003068  EF38  F018         	goto	u4751
  8541  00306C  EF3C  F018         	goto	u4750
  8542  003070                     u4751:
  8543  003070  6A03               	clrf	??_LCD_Envia^0,c
  8544  003072  2A03               	incf	??_LCD_Envia^0,f,c
  8545  003074  EF3D  F018         	goto	u4758
  8546  003078                     u4750:
  8547  003078  6A03               	clrf	??_LCD_Envia^0,c
  8548  00307A                     u4758:
  8549  00307A  B293               	btfsc	147,1,c	;volatile
  8550  00307C  EF42  F018         	goto	u4761
  8551  003080  EF46  F018         	goto	u4760
  8552  003084                     u4761:
  8553  003084  0E02               	movlw	2
  8554  003086  6E04               	movwf	(??_LCD_Envia+1)^0,c
  8555  003088  EF47  F018         	goto	u4775
  8556  00308C                     u4760:
  8557  00308C  6A04               	clrf	(??_LCD_Envia+1)^0,c
  8558  00308E                     u4775:
  8559  00308E  B493               	btfsc	147,2,c	;volatile
  8560  003090  EF4C  F018         	goto	u4781
  8561  003094  EF50  F018         	goto	u4780
  8562  003098                     u4781:
  8563  003098  0E04               	movlw	4
  8564  00309A  6E05               	movwf	(??_LCD_Envia+2)^0,c
  8565  00309C  EF51  F018         	goto	u4795
  8566  0030A0                     u4780:
  8567  0030A0  6A05               	clrf	(??_LCD_Envia+2)^0,c
  8568  0030A2                     u4795:
  8569  0030A2  B693               	btfsc	147,3,c	;volatile
  8570  0030A4  EF56  F018         	goto	u4801
  8571  0030A8  EF5A  F018         	goto	u4800
  8572  0030AC                     u4801:
  8573  0030AC  0E08               	movlw	8
  8574  0030AE  6E06               	movwf	(??_LCD_Envia+3)^0,c
  8575  0030B0  EF5B  F018         	goto	u4815
  8576  0030B4                     u4800:
  8577  0030B4  6A06               	clrf	(??_LCD_Envia+3)^0,c
  8578  0030B6                     u4815:
  8579  0030B6  B893               	btfsc	147,4,c	;volatile
  8580  0030B8  EF60  F018         	goto	u4821
  8581  0030BC  EF64  F018         	goto	u4820
  8582  0030C0                     u4821:
  8583  0030C0  0E10               	movlw	16
  8584  0030C2  6E07               	movwf	(??_LCD_Envia+4)^0,c
  8585  0030C4  EF65  F018         	goto	u4835
  8586  0030C8                     u4820:
  8587  0030C8  6A07               	clrf	(??_LCD_Envia+4)^0,c
  8588  0030CA                     u4835:
  8589  0030CA  BA93               	btfsc	147,5,c	;volatile
  8590  0030CC  EF6A  F018         	goto	u4841
  8591  0030D0  EF6E  F018         	goto	u4840
  8592  0030D4                     u4841:
  8593  0030D4  0E20               	movlw	32
  8594  0030D6  6E08               	movwf	(??_LCD_Envia+5)^0,c
  8595  0030D8  EF6F  F018         	goto	u4855
  8596  0030DC                     u4840:
  8597  0030DC  6A08               	clrf	(??_LCD_Envia+5)^0,c
  8598  0030DE                     u4855:
  8599  0030DE  BC93               	btfsc	147,6,c	;volatile
  8600  0030E0  EF74  F018         	goto	u4861
  8601  0030E4  EF78  F018         	goto	u4860
  8602  0030E8                     u4861:
  8603  0030E8  0E40               	movlw	64
  8604  0030EA  6E09               	movwf	(??_LCD_Envia+6)^0,c
  8605  0030EC  EF79  F018         	goto	u4875
  8606  0030F0                     u4860:
  8607  0030F0  6A09               	clrf	(??_LCD_Envia+6)^0,c
  8608  0030F2                     u4875:
  8609  0030F2  BE93               	btfsc	147,7,c	;volatile
  8610  0030F4  EF7E  F018         	goto	u4881
  8611  0030F8  EF82  F018         	goto	u4880
  8612  0030FC                     u4881:
  8613  0030FC  0E80               	movlw	128
  8614  0030FE  6E0A               	movwf	(??_LCD_Envia+7)^0,c
  8615  003100  EF83  F018         	goto	u4895
  8616  003104                     u4880:
  8617  003104  6A0A               	clrf	(??_LCD_Envia+7)^0,c
  8618  003106                     u4895:
  8619  003106  500A               	movf	(??_LCD_Envia+7)^0,w,c
  8620  003108  1009               	iorwf	(??_LCD_Envia+6)^0,w,c
  8621  00310A  1008               	iorwf	(??_LCD_Envia+5)^0,w,c
  8622  00310C  1007               	iorwf	(??_LCD_Envia+4)^0,w,c
  8623  00310E  1006               	iorwf	(??_LCD_Envia+3)^0,w,c
  8624  003110  1005               	iorwf	(??_LCD_Envia+2)^0,w,c
  8625  003112  1004               	iorwf	(??_LCD_Envia+1)^0,w,c
  8626  003114  1003               	iorwf	??_LCD_Envia^0,w,c
  8627  003116  6E0C               	movwf	LCD_Envia@LCD_GuardaTRIS^0,c
  8628  003118                     
  8629                           ;MiLCD.c: 267:     TRISBbits.TRISB7 = 0;
  8630  003118  9E93               	bcf	147,7,c	;volatile
  8631  00311A                     
  8632                           ;MiLCD.c: 268:     TRISBbits.TRISB6 = 0;
  8633  00311A  9C93               	bcf	147,6,c	;volatile
  8634  00311C                     
  8635                           ;MiLCD.c: 269:     TRISBbits.TRISB5 = 0;
  8636  00311C  9A93               	bcf	147,5,c	;volatile
  8637  00311E                     
  8638                           ;MiLCD.c: 270:     TRISBbits.TRISB4 = 0;
  8639  00311E  9893               	bcf	147,4,c	;volatile
  8640  003120                     
  8641                           ;MiLCD.c: 271:     TRISBbits.TRISB3 = 0;
  8642  003120  9693               	bcf	147,3,c	;volatile
  8643  003122                     
  8644                           ;MiLCD.c: 272:     TRISBbits.TRISB2 = 0;
  8645  003122  9493               	bcf	147,2,c	;volatile
  8646  003124                     
  8647                           ;MiLCD.c: 273:     TRISBbits.TRISB1 = 0;
  8648  003124  9293               	bcf	147,1,c	;volatile
  8649  003126                     
  8650                           ;MiLCD.c: 274:     TRISBbits.TRISB0 = 0;
  8651  003126  9093               	bcf	147,0,c	;volatile
  8652  003128                     
  8653                           ;MiLCD.c: 276:     LCD_Port( Dato );
  8654  003128  500B               	movf	LCD_Envia@Dato^0,w,c
  8655  00312A  EC9E  F015         	call	_LCD_Port
  8656  00312E                     
  8657                           ;MiLCD.c: 277:     PORTDbits.RD0 = 1;
  8658  00312E  8083               	bsf	131,0,c	;volatile
  8659  003130                     
  8660                           ;MiLCD.c: 278:     _delay((unsigned long)((1)*(4000000UL/4000000.0)));
  8661  003130  F000               	nop	
  8662  003132                     
  8663                           ;MiLCD.c: 279:     PORTDbits.RD0 = 0;
  8664  003132  9083               	bcf	131,0,c	;volatile
  8665  003134                     
  8666                           ;MiLCD.c: 280:     LCD_CfgPort( LCD_GuardaTRIS );
  8667  003134  500C               	movf	LCD_Envia@LCD_GuardaTRIS^0,w,c
  8668  003136  EC26  F016         	call	_LCD_CfgPort
  8669  00313A                     
  8670                           ;MiLCD.c: 282:     if( !PORTDbits.RD2 ) _delay((unsigned long)((20)*(4000000UL/4000.0)))
      +                          ;
  8671  00313A  B483               	btfsc	131,2,c	;volatile
  8672  00313C  EFA2  F018         	goto	u4901
  8673  003140  EFA4  F018         	goto	u4900
  8674  003144                     u4901:
  8675  003144  EFAC  F018         	goto	l130
  8676  003148                     u4900:
  8677  003148  0E1A               	movlw	26
  8678  00314A  6E03               	movwf	??_LCD_Envia^0,c
  8679  00314C  0EF8               	movlw	248
  8680  00314E                     u5997:
  8681  00314E  2EE8               	decfsz	wreg,f,c
  8682  003150  D7FE               	bra	u5997
  8683  003152  2E03               	decfsz	??_LCD_Envia^0,f,c
  8684  003154  D7FC               	bra	u5997
  8685  003156  D000               	nop2	
  8686  003158                     l130:
  8687                           
  8688                           ;MiLCD.c: 283:     _delay((unsigned long)((50)*(4000000UL/4000000.0)));
  8689  003158  0E10               	movlw	16
  8690  00315A                     u6007:
  8691  00315A  2EE8               	decfsz	wreg,f,c
  8692  00315C  D7FE               	bra	u6007
  8693  00315E  D000               	nop2	
  8694  003160  0012               	return		;funcret
  8695  003162                     __end_of_LCD_Envia:
  8696                           	opt callstack 0
  8697                           
  8698 ;; *************** function _LCD_Port *****************
  8699 ;; Defined at:
  8700 ;;		line 394 in file "MiLCD.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  Dato            1    wreg     unsigned char 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  Dato            1    1[COMRAM] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8714 ;;      Params:         0       0       0       0       0       0       0       0       0
  8715 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8716 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8717 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8718 ;;Total ram usage:        2 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		_LCD_Envia
  8724 ;; This function uses a non-reentrant model
  8725 ;;
  8726                           
  8727                           	psect	text42
  8728  002B3C                     __ptext42:
  8729                           	opt callstack 0
  8730  002B3C                     _LCD_Port:
  8731                           	opt callstack 27
  8732                           
  8733                           ;incstack = 0
  8734                           ;LCD_Port@Dato stored from wreg
  8735  002B3C  6E02               	movwf	LCD_Port@Dato^0,c
  8736  002B3E                     
  8737                           ;MiLCD.c: 394: void LCD_Port( uint8_t Dato );MiLCD.c: 395: {;MiLCD.c: 396:     PORTBbits
      +                          .RB7 = (Dato & 0x80) ? 1 : 0;
  8738  002B3E  BE02               	btfsc	LCD_Port@Dato^0,7,c
  8739  002B40  EFA4  F015         	goto	u3431
  8740  002B44  EFA8  F015         	goto	u3430
  8741  002B48                     u3431:
  8742  002B48  6A01               	clrf	??_LCD_Port^0,c
  8743  002B4A  2A01               	incf	??_LCD_Port^0,f,c
  8744  002B4C  EFA9  F015         	goto	u3448
  8745  002B50                     u3430:
  8746  002B50  6A01               	clrf	??_LCD_Port^0,c
  8747  002B52                     u3448:
  8748  002B52  3201               	rrcf	??_LCD_Port^0,f,c
  8749  002B54  3201               	rrcf	??_LCD_Port^0,f,c
  8750  002B56  5081               	movf	129,w,c	;volatile
  8751  002B58  1801               	xorwf	??_LCD_Port^0,w,c
  8752  002B5A  0B7F               	andlw	-129
  8753  002B5C  1801               	xorwf	??_LCD_Port^0,w,c
  8754  002B5E  6E81               	movwf	129,c	;volatile
  8755                           
  8756                           ;MiLCD.c: 397:     PORTBbits.RB6 = (Dato & 0x40) ? 1 : 0;
  8757  002B60  BC02               	btfsc	LCD_Port@Dato^0,6,c
  8758  002B62  EFB5  F015         	goto	u3451
  8759  002B66  EFB9  F015         	goto	u3450
  8760  002B6A                     u3451:
  8761  002B6A  6A01               	clrf	??_LCD_Port^0,c
  8762  002B6C  2A01               	incf	??_LCD_Port^0,f,c
  8763  002B6E  EFBA  F015         	goto	u3468
  8764  002B72                     u3450:
  8765  002B72  6A01               	clrf	??_LCD_Port^0,c
  8766  002B74                     u3468:
  8767  002B74  3A01               	swapf	??_LCD_Port^0,f,c
  8768  002B76  4601               	rlncf	??_LCD_Port^0,f,c
  8769  002B78  4601               	rlncf	??_LCD_Port^0,f,c
  8770  002B7A  5081               	movf	129,w,c	;volatile
  8771  002B7C  1801               	xorwf	??_LCD_Port^0,w,c
  8772  002B7E  0BBF               	andlw	-65
  8773  002B80  1801               	xorwf	??_LCD_Port^0,w,c
  8774  002B82  6E81               	movwf	129,c	;volatile
  8775                           
  8776                           ;MiLCD.c: 398:     PORTBbits.RB5 = (Dato & 0x20) ? 1 : 0;
  8777  002B84  BA02               	btfsc	LCD_Port@Dato^0,5,c
  8778  002B86  EFC7  F015         	goto	u3471
  8779  002B8A  EFCB  F015         	goto	u3470
  8780  002B8E                     u3471:
  8781  002B8E  6A01               	clrf	??_LCD_Port^0,c
  8782  002B90  2A01               	incf	??_LCD_Port^0,f,c
  8783  002B92  EFCC  F015         	goto	u3488
  8784  002B96                     u3470:
  8785  002B96  6A01               	clrf	??_LCD_Port^0,c
  8786  002B98                     u3488:
  8787  002B98  3A01               	swapf	??_LCD_Port^0,f,c
  8788  002B9A  4601               	rlncf	??_LCD_Port^0,f,c
  8789  002B9C  5081               	movf	129,w,c	;volatile
  8790  002B9E  1801               	xorwf	??_LCD_Port^0,w,c
  8791  002BA0  0BDF               	andlw	-33
  8792  002BA2  1801               	xorwf	??_LCD_Port^0,w,c
  8793  002BA4  6E81               	movwf	129,c	;volatile
  8794                           
  8795                           ;MiLCD.c: 399:     PORTBbits.RB4 = (Dato & 0x10) ? 1 : 0;
  8796  002BA6  B802               	btfsc	LCD_Port@Dato^0,4,c
  8797  002BA8  EFD8  F015         	goto	u3491
  8798  002BAC  EFDC  F015         	goto	u3490
  8799  002BB0                     u3491:
  8800  002BB0  6A01               	clrf	??_LCD_Port^0,c
  8801  002BB2  2A01               	incf	??_LCD_Port^0,f,c
  8802  002BB4  EFDD  F015         	goto	u3508
  8803  002BB8                     u3490:
  8804  002BB8  6A01               	clrf	??_LCD_Port^0,c
  8805  002BBA                     u3508:
  8806  002BBA  3A01               	swapf	??_LCD_Port^0,f,c
  8807  002BBC  5081               	movf	129,w,c	;volatile
  8808  002BBE  1801               	xorwf	??_LCD_Port^0,w,c
  8809  002BC0  0BEF               	andlw	-17
  8810  002BC2  1801               	xorwf	??_LCD_Port^0,w,c
  8811  002BC4  6E81               	movwf	129,c	;volatile
  8812                           
  8813                           ;MiLCD.c: 400:     PORTBbits.RB3 = (Dato & 0x08) ? 1 : 0;
  8814  002BC6  B602               	btfsc	LCD_Port@Dato^0,3,c
  8815  002BC8  EFE8  F015         	goto	u3511
  8816  002BCC  EFEC  F015         	goto	u3510
  8817  002BD0                     u3511:
  8818  002BD0  6A01               	clrf	??_LCD_Port^0,c
  8819  002BD2  2A01               	incf	??_LCD_Port^0,f,c
  8820  002BD4  EFED  F015         	goto	u3528
  8821  002BD8                     u3510:
  8822  002BD8  6A01               	clrf	??_LCD_Port^0,c
  8823  002BDA                     u3528:
  8824  002BDA  4601               	rlncf	??_LCD_Port^0,f,c
  8825  002BDC  4601               	rlncf	??_LCD_Port^0,f,c
  8826  002BDE  4601               	rlncf	??_LCD_Port^0,f,c
  8827  002BE0  5081               	movf	129,w,c	;volatile
  8828  002BE2  1801               	xorwf	??_LCD_Port^0,w,c
  8829  002BE4  0BF7               	andlw	-9
  8830  002BE6  1801               	xorwf	??_LCD_Port^0,w,c
  8831  002BE8  6E81               	movwf	129,c	;volatile
  8832                           
  8833                           ;MiLCD.c: 401:     PORTBbits.RB2 = (Dato & 0x04) ? 1 : 0;
  8834  002BEA  B402               	btfsc	LCD_Port@Dato^0,2,c
  8835  002BEC  EFFA  F015         	goto	u3531
  8836  002BF0  EFFE  F015         	goto	u3530
  8837  002BF4                     u3531:
  8838  002BF4  6A01               	clrf	??_LCD_Port^0,c
  8839  002BF6  2A01               	incf	??_LCD_Port^0,f,c
  8840  002BF8  EFFF  F015         	goto	u3548
  8841  002BFC                     u3530:
  8842  002BFC  6A01               	clrf	??_LCD_Port^0,c
  8843  002BFE                     u3548:
  8844  002BFE  4601               	rlncf	??_LCD_Port^0,f,c
  8845  002C00  4601               	rlncf	??_LCD_Port^0,f,c
  8846  002C02  5081               	movf	129,w,c	;volatile
  8847  002C04  1801               	xorwf	??_LCD_Port^0,w,c
  8848  002C06  0BFB               	andlw	-5
  8849  002C08  1801               	xorwf	??_LCD_Port^0,w,c
  8850  002C0A  6E81               	movwf	129,c	;volatile
  8851                           
  8852                           ;MiLCD.c: 402:     PORTBbits.RB1 = (Dato & 0x02) ? 1 : 0;
  8853  002C0C  B202               	btfsc	LCD_Port@Dato^0,1,c
  8854  002C0E  EF0B  F016         	goto	u3551
  8855  002C12  EF0F  F016         	goto	u3550
  8856  002C16                     u3551:
  8857  002C16  6A01               	clrf	??_LCD_Port^0,c
  8858  002C18  2A01               	incf	??_LCD_Port^0,f,c
  8859  002C1A  EF10  F016         	goto	u3568
  8860  002C1E                     u3550:
  8861  002C1E  6A01               	clrf	??_LCD_Port^0,c
  8862  002C20                     u3568:
  8863  002C20  4601               	rlncf	??_LCD_Port^0,f,c
  8864  002C22  5081               	movf	129,w,c	;volatile
  8865  002C24  1801               	xorwf	??_LCD_Port^0,w,c
  8866  002C26  0BFD               	andlw	-3
  8867  002C28  1801               	xorwf	??_LCD_Port^0,w,c
  8868  002C2A  6E81               	movwf	129,c	;volatile
  8869                           
  8870                           ;MiLCD.c: 403:     PORTBbits.RB0 = (Dato & 0x01) ? 1 : 0;
  8871  002C2C  B002               	btfsc	LCD_Port@Dato^0,0,c
  8872  002C2E  EF1B  F016         	goto	u3571
  8873  002C32  EF1F  F016         	goto	u3570
  8874  002C36                     u3571:
  8875  002C36  6A01               	clrf	??_LCD_Port^0,c
  8876  002C38  2A01               	incf	??_LCD_Port^0,f,c
  8877  002C3A  EF20  F016         	goto	u3588
  8878  002C3E                     u3570:
  8879  002C3E  6A01               	clrf	??_LCD_Port^0,c
  8880  002C40                     u3588:
  8881  002C40  5081               	movf	129,w,c	;volatile
  8882  002C42  1801               	xorwf	??_LCD_Port^0,w,c
  8883  002C44  0BFE               	andlw	-2
  8884  002C46  1801               	xorwf	??_LCD_Port^0,w,c
  8885  002C48  6E81               	movwf	129,c	;volatile
  8886  002C4A  0012               	return		;funcret
  8887  002C4C                     __end_of_LCD_Port:
  8888                           	opt callstack 0
  8889                           
  8890 ;; *************** function _LCD_CfgPort *****************
  8891 ;; Defined at:
  8892 ;;		line 411 in file "MiLCD.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;  Cfg             1    wreg     unsigned char 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  Cfg             1    1[COMRAM] unsigned char 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg, status,2, status,0
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8906 ;;      Params:         0       0       0       0       0       0       0       0       0
  8907 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8908 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8909 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8910 ;;Total ram usage:        2 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; This function calls:
  8913 ;;		Nothing
  8914 ;; This function is called by:
  8915 ;;		_LCD_Envia
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text43
  8920  002C4C                     __ptext43:
  8921                           	opt callstack 0
  8922  002C4C                     _LCD_CfgPort:
  8923                           	opt callstack 27
  8924                           
  8925                           ;incstack = 0
  8926                           ;LCD_CfgPort@Cfg stored from wreg
  8927  002C4C  6E02               	movwf	LCD_CfgPort@Cfg^0,c
  8928  002C4E                     
  8929                           ;MiLCD.c: 411: void LCD_CfgPort( uint8_t Cfg );MiLCD.c: 412: {;MiLCD.c: 413:     TRISBbi
      +                          ts.TRISB7 = (Cfg & 0x80) ? 1 : 0;
  8930  002C4E  BE02               	btfsc	LCD_CfgPort@Cfg^0,7,c
  8931  002C50  EF2C  F016         	goto	u3591
  8932  002C54  EF30  F016         	goto	u3590
  8933  002C58                     u3591:
  8934  002C58  6A01               	clrf	??_LCD_CfgPort^0,c
  8935  002C5A  2A01               	incf	??_LCD_CfgPort^0,f,c
  8936  002C5C  EF31  F016         	goto	u3608
  8937  002C60                     u3590:
  8938  002C60  6A01               	clrf	??_LCD_CfgPort^0,c
  8939  002C62                     u3608:
  8940  002C62  3201               	rrcf	??_LCD_CfgPort^0,f,c
  8941  002C64  3201               	rrcf	??_LCD_CfgPort^0,f,c
  8942  002C66  5093               	movf	147,w,c	;volatile
  8943  002C68  1801               	xorwf	??_LCD_CfgPort^0,w,c
  8944  002C6A  0B7F               	andlw	-129
  8945  002C6C  1801               	xorwf	??_LCD_CfgPort^0,w,c
  8946  002C6E  6E93               	movwf	147,c	;volatile
  8947                           
  8948                           ;MiLCD.c: 414:     TRISBbits.TRISB6 = (Cfg & 0x40) ? 1 : 0;
  8949  002C70  BC02               	btfsc	LCD_CfgPort@Cfg^0,6,c
  8950  002C72  EF3D  F016         	goto	u3611
  8951  002C76  EF41  F016         	goto	u3610
  8952  002C7A                     u3611:
  8953  002C7A  6A01               	clrf	??_LCD_CfgPort^0,c
  8954  002C7C  2A01               	incf	??_LCD_CfgPort^0,f,c
  8955  002C7E  EF42  F016         	goto	u3628
  8956  002C82                     u3610:
  8957  002C82  6A01               	clrf	??_LCD_CfgPort^0,c
  8958  002C84                     u3628:
  8959  002C84  3A01               	swapf	??_LCD_CfgPort^0,f,c
  8960  002C86  4601               	rlncf	??_LCD_CfgPort^0,f,c
  8961  002C88  4601               	rlncf	??_LCD_CfgPort^0,f,c
  8962  002C8A  5093               	movf	147,w,c	;volatile
  8963  002C8C  1801               	xorwf	??_LCD_CfgPort^0,w,c
  8964  002C8E  0BBF               	andlw	-65
  8965  002C90  1801               	xorwf	??_LCD_CfgPort^0,w,c
  8966  002C92  6E93               	movwf	147,c	;volatile
  8967                           
  8968                           ;MiLCD.c: 415:     TRISBbits.TRISB5 = (Cfg & 0x20) ? 1 : 0;
  8969  002C94  BA02               	btfsc	LCD_CfgPort@Cfg^0,5,c
  8970  002C96  EF4F  F016         	goto	u3631
  8971  002C9A  EF53  F016         	goto	u3630
  8972  002C9E                     u3631:
  8973  002C9E  6A01               	clrf	??_LCD_CfgPort^0,c
  8974  002CA0  2A01               	incf	??_LCD_CfgPort^0,f,c
  8975  002CA2  EF54  F016         	goto	u3648
  8976  002CA6                     u3630:
  8977  002CA6  6A01               	clrf	??_LCD_CfgPort^0,c
  8978  002CA8                     u3648:
  8979  002CA8  3A01               	swapf	??_LCD_CfgPort^0,f,c
  8980  002CAA  4601               	rlncf	??_LCD_CfgPort^0,f,c
  8981  002CAC  5093               	movf	147,w,c	;volatile
  8982  002CAE  1801               	xorwf	??_LCD_CfgPort^0,w,c
  8983  002CB0  0BDF               	andlw	-33
  8984  002CB2  1801               	xorwf	??_LCD_CfgPort^0,w,c
  8985  002CB4  6E93               	movwf	147,c	;volatile
  8986                           
  8987                           ;MiLCD.c: 416:     TRISBbits.TRISB4 = (Cfg & 0x10) ? 1 : 0;
  8988  002CB6  B802               	btfsc	LCD_CfgPort@Cfg^0,4,c
  8989  002CB8  EF60  F016         	goto	u3651
  8990  002CBC  EF64  F016         	goto	u3650
  8991  002CC0                     u3651:
  8992  002CC0  6A01               	clrf	??_LCD_CfgPort^0,c
  8993  002CC2  2A01               	incf	??_LCD_CfgPort^0,f,c
  8994  002CC4  EF65  F016         	goto	u3668
  8995  002CC8                     u3650:
  8996  002CC8  6A01               	clrf	??_LCD_CfgPort^0,c
  8997  002CCA                     u3668:
  8998  002CCA  3A01               	swapf	??_LCD_CfgPort^0,f,c
  8999  002CCC  5093               	movf	147,w,c	;volatile
  9000  002CCE  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9001  002CD0  0BEF               	andlw	-17
  9002  002CD2  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9003  002CD4  6E93               	movwf	147,c	;volatile
  9004                           
  9005                           ;MiLCD.c: 417:     TRISBbits.TRISB3 = (Cfg & 0x08) ? 1 : 0;
  9006  002CD6  B602               	btfsc	LCD_CfgPort@Cfg^0,3,c
  9007  002CD8  EF70  F016         	goto	u3671
  9008  002CDC  EF74  F016         	goto	u3670
  9009  002CE0                     u3671:
  9010  002CE0  6A01               	clrf	??_LCD_CfgPort^0,c
  9011  002CE2  2A01               	incf	??_LCD_CfgPort^0,f,c
  9012  002CE4  EF75  F016         	goto	u3688
  9013  002CE8                     u3670:
  9014  002CE8  6A01               	clrf	??_LCD_CfgPort^0,c
  9015  002CEA                     u3688:
  9016  002CEA  4601               	rlncf	??_LCD_CfgPort^0,f,c
  9017  002CEC  4601               	rlncf	??_LCD_CfgPort^0,f,c
  9018  002CEE  4601               	rlncf	??_LCD_CfgPort^0,f,c
  9019  002CF0  5093               	movf	147,w,c	;volatile
  9020  002CF2  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9021  002CF4  0BF7               	andlw	-9
  9022  002CF6  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9023  002CF8  6E93               	movwf	147,c	;volatile
  9024                           
  9025                           ;MiLCD.c: 418:     TRISBbits.TRISB2 = (Cfg & 0x04) ? 1 : 0;
  9026  002CFA  B402               	btfsc	LCD_CfgPort@Cfg^0,2,c
  9027  002CFC  EF82  F016         	goto	u3691
  9028  002D00  EF86  F016         	goto	u3690
  9029  002D04                     u3691:
  9030  002D04  6A01               	clrf	??_LCD_CfgPort^0,c
  9031  002D06  2A01               	incf	??_LCD_CfgPort^0,f,c
  9032  002D08  EF87  F016         	goto	u3708
  9033  002D0C                     u3690:
  9034  002D0C  6A01               	clrf	??_LCD_CfgPort^0,c
  9035  002D0E                     u3708:
  9036  002D0E  4601               	rlncf	??_LCD_CfgPort^0,f,c
  9037  002D10  4601               	rlncf	??_LCD_CfgPort^0,f,c
  9038  002D12  5093               	movf	147,w,c	;volatile
  9039  002D14  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9040  002D16  0BFB               	andlw	-5
  9041  002D18  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9042  002D1A  6E93               	movwf	147,c	;volatile
  9043                           
  9044                           ;MiLCD.c: 419:     TRISBbits.TRISB1 = (Cfg & 0x02) ? 1 : 0;
  9045  002D1C  B202               	btfsc	LCD_CfgPort@Cfg^0,1,c
  9046  002D1E  EF93  F016         	goto	u3711
  9047  002D22  EF97  F016         	goto	u3710
  9048  002D26                     u3711:
  9049  002D26  6A01               	clrf	??_LCD_CfgPort^0,c
  9050  002D28  2A01               	incf	??_LCD_CfgPort^0,f,c
  9051  002D2A  EF98  F016         	goto	u3728
  9052  002D2E                     u3710:
  9053  002D2E  6A01               	clrf	??_LCD_CfgPort^0,c
  9054  002D30                     u3728:
  9055  002D30  4601               	rlncf	??_LCD_CfgPort^0,f,c
  9056  002D32  5093               	movf	147,w,c	;volatile
  9057  002D34  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9058  002D36  0BFD               	andlw	-3
  9059  002D38  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9060  002D3A  6E93               	movwf	147,c	;volatile
  9061                           
  9062                           ;MiLCD.c: 420:     TRISBbits.TRISB0 = (Cfg & 0x01) ? 1 : 0;
  9063  002D3C  B002               	btfsc	LCD_CfgPort@Cfg^0,0,c
  9064  002D3E  EFA3  F016         	goto	u3731
  9065  002D42  EFA7  F016         	goto	u3730
  9066  002D46                     u3731:
  9067  002D46  6A01               	clrf	??_LCD_CfgPort^0,c
  9068  002D48  2A01               	incf	??_LCD_CfgPort^0,f,c
  9069  002D4A  EFA8  F016         	goto	u3748
  9070  002D4E                     u3730:
  9071  002D4E  6A01               	clrf	??_LCD_CfgPort^0,c
  9072  002D50                     u3748:
  9073  002D50  5093               	movf	147,w,c	;volatile
  9074  002D52  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9075  002D54  0BFE               	andlw	-2
  9076  002D56  1801               	xorwf	??_LCD_CfgPort^0,w,c
  9077  002D58  6E93               	movwf	147,c	;volatile
  9078  002D5A  0012               	return		;funcret
  9079  002D5C                     __end_of_LCD_CfgPort:
  9080                           	opt callstack 0
  9081                           
  9082 ;; *************** function _LCD_CodigoCGROM *****************
  9083 ;; Defined at:
  9084 ;;		line 298 in file "MiLCD.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  Caracter        1    wreg     unsigned char 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;  Caracter        1    0[COMRAM] unsigned char 
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  1    wreg      unsigned char 
  9091 ;; Registers used:
  9092 ;;		wreg, status,2, status,0
  9093 ;; Tracked objects:
  9094 ;;		On entry : 0/0
  9095 ;;		On exit  : 0/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9098 ;;      Params:         0       0       0       0       0       0       0       0       0
  9099 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9101 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9102 ;;Total ram usage:        1 bytes
  9103 ;; Hardware stack levels used:    1
  9104 ;; This function calls:
  9105 ;;		Nothing
  9106 ;; This function is called by:
  9107 ;;		_LCD_EnviaCaracter
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text44
  9112  00388C                     __ptext44:
  9113                           	opt callstack 0
  9114  00388C                     _LCD_CodigoCGROM:
  9115                           	opt callstack 28
  9116                           
  9117                           ;incstack = 0
  9118                           ;LCD_CodigoCGROM@Caracter stored from wreg
  9119  00388C  6E01               	movwf	LCD_CodigoCGROM@Caracter^0,c
  9120  00388E                     
  9121                           ;MiLCD.c: 298: uint8_t LCD_CodigoCGROM( uint8_t Caracter );MiLCD.c: 299: {;MiLCD.c: 300:
      +                               if( Caracter == 'ñ' ) return 0B11101110;
  9122  00388E  0EF1               	movlw	241
  9123  003890  1801               	xorwf	LCD_CodigoCGROM@Caracter^0,w,c
  9124  003892  A4D8               	btfss	status,2,c
  9125  003894  EF4E  F01C         	goto	u5551
  9126  003898  EF50  F01C         	goto	u5550
  9127  00389C                     u5551:
  9128  00389C  EF53  F01C         	goto	l3883
  9129  0038A0                     u5550:
  9130  0038A0                     l3879:
  9131  0038A0  0EEE               	movlw	238
  9132  0038A2  EF6B  F01C         	goto	l135
  9133  0038A6                     l3883:
  9134                           
  9135                           ;MiLCD.c: 301:     if( Caracter == 'Ñ' ) return 0B11101110;
  9136  0038A6  0ED1               	movlw	209
  9137  0038A8  1801               	xorwf	LCD_CodigoCGROM@Caracter^0,w,c
  9138  0038AA  A4D8               	btfss	status,2,c
  9139  0038AC  EF5A  F01C         	goto	u5561
  9140  0038B0  EF5C  F01C         	goto	u5560
  9141  0038B4                     u5561:
  9142  0038B4  EF5E  F01C         	goto	l3889
  9143  0038B8                     u5560:
  9144  0038B8  EF50  F01C         	goto	l3879
  9145  0038BC                     l3889:
  9146                           
  9147                           ;MiLCD.c: 302:     if( Caracter == '°' ) return 0B11011111;
  9148  0038BC  0EB0               	movlw	176
  9149  0038BE  1801               	xorwf	LCD_CodigoCGROM@Caracter^0,w,c
  9150  0038C0  A4D8               	btfss	status,2,c
  9151  0038C2  EF65  F01C         	goto	u5571
  9152  0038C6  EF67  F01C         	goto	u5570
  9153  0038CA                     u5571:
  9154  0038CA  EF6A  F01C         	goto	l3895
  9155  0038CE                     u5570:
  9156  0038CE  0EDF               	movlw	223
  9157  0038D0  EF6B  F01C         	goto	l135
  9158  0038D4                     l3895:
  9159                           
  9160                           ;MiLCD.c: 303:     return Caracter;
  9161  0038D4  5001               	movf	LCD_CodigoCGROM@Caracter^0,w,c
  9162  0038D6                     l135:
  9163  0038D6  0012               	return		;funcret
  9164  0038D8                     __end_of_LCD_CodigoCGROM:
  9165                           	opt callstack 0
  9166                           
  9167                           	psect	rparam
  9168  0000                     tosu	equ	0xFFF
  9169                           tosh	equ	0xFFE
  9170                           tosl	equ	0xFFD
  9171                           stkptr	equ	0xFFC
  9172                           pclatu	equ	0xFFB
  9173                           pclath	equ	0xFFA
  9174                           pcl	equ	0xFF9
  9175                           tblptru	equ	0xFF8
  9176                           tblptrh	equ	0xFF7
  9177                           tblptrl	equ	0xFF6
  9178                           tablat	equ	0xFF5
  9179                           prodh	equ	0xFF4
  9180                           prodl	equ	0xFF3
  9181                           indf0	equ	0xFEF
  9182                           postinc0	equ	0xFEE
  9183                           postdec0	equ	0xFED
  9184                           preinc0	equ	0xFEC
  9185                           plusw0	equ	0xFEB
  9186                           fsr0h	equ	0xFEA
  9187                           fsr0l	equ	0xFE9
  9188                           wreg	equ	0xFE8
  9189                           indf1	equ	0xFE7
  9190                           postinc1	equ	0xFE6
  9191                           postdec1	equ	0xFE5
  9192                           preinc1	equ	0xFE4
  9193                           plusw1	equ	0xFE3
  9194                           fsr1h	equ	0xFE2
  9195                           fsr1l	equ	0xFE1
  9196                           bsr	equ	0xFE0
  9197                           indf2	equ	0xFDF
  9198                           postinc2	equ	0xFDE
  9199                           postdec2	equ	0xFDD
  9200                           preinc2	equ	0xFDC
  9201                           plusw2	equ	0xFDB
  9202                           fsr2h	equ	0xFDA
  9203                           fsr2l	equ	0xFD9
  9204                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     80      96
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> main@pepe(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> main@pepe(BANK0[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1132_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> main@pepe(BANK0[4]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> main@pepe(BANK0[4]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_EnviaCadena@Cadena	PTR unsigned char  size(2) Largest target is 10
		 -> main@pepe(BANK0[4]), STR_2(CODE[3]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _LCD_PosicionLinea2->_LCD_EnviaComando
    _LCD_PosicionLinea1->_LCD_EnviaComando
    _LCD_CursorOFF->_LCD_EnviaComando
    _LCD_CursorIncr->_LCD_EnviaComando
    _LCD_Borra->_LCD_EnviaComando
    _LCD_2Lineas8Bits5x7->_LCD_EnviaComando
    _LCD_EnviaComando->_LCD_Envia
    _LCD_EnviaCadena->_LCD_EnviaCaracter
    _LCD_EnviaCaracter->_LCD_Envia
    _LCD_Envia->_LCD_CfgPort
    _LCD_Envia->_LCD_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   34132
                                             66 BANK0     14    14      0
                    _LCD_EnviaCadena
                     _LCD_Inicializa
                 _LCD_PosicionLinea1
                 _LCD_PosicionLinea2
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27721
                                             87 COMRAM     8     0      8
                                             56 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27364
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   26992
                                             57 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21693
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_PosicionLinea2                                   1     1      0     441
                                             13 COMRAM     1     1      0
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (1) _LCD_PosicionLinea1                                   1     1      0     441
                                             13 COMRAM     1     1      0
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (1) _LCD_Inicializa                                       2     2      0    2073
                                             13 COMRAM     2     2      0
                _LCD_2Lineas8Bits5x7
                          _LCD_Borra
                     _LCD_CursorIncr
                      _LCD_CursorOFF
                          _LCD_Envia
 ---------------------------------------------------------------------------------
 (2) _LCD_CursorOFF                                        0     0      0     419
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (2) _LCD_CursorIncr                                       0     0      0     419
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (2) _LCD_Borra                                            0     0      0     419
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (2) _LCD_2Lineas8Bits5x7                                  0     0      0     419
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (2) _LCD_EnviaComando                                     1     1      0     419
                                             12 COMRAM     1     1      0
                          _LCD_Envia
 ---------------------------------------------------------------------------------
 (1) _LCD_EnviaCadena                                      2     0      2     803
                                             13 COMRAM     2     0      2
                  _LCD_EnviaCaracter
 ---------------------------------------------------------------------------------
 (2) _LCD_EnviaCaracter                                    1     1      0     530
                                             12 COMRAM     1     1      0
                    _LCD_CodigoCGROM
                          _LCD_Envia
 ---------------------------------------------------------------------------------
 (3) _LCD_Envia                                           10    10      0     397
                                              2 COMRAM    10    10      0
                        _LCD_CfgPort
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             2     2      0     176
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _LCD_CfgPort                                          2     2      0     176
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_CodigoCGROM                                      1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_EnviaCadena
     _LCD_EnviaCaracter
       _LCD_CodigoCGROM
       _LCD_Envia
         _LCD_CfgPort
         _LCD_Port
   _LCD_Inicializa
     _LCD_2Lineas8Bits5x7
       _LCD_EnviaComando
         _LCD_Envia
           _LCD_CfgPort
           _LCD_Port
     _LCD_Borra
       _LCD_EnviaComando
         _LCD_Envia
           _LCD_CfgPort
           _LCD_Port
     _LCD_CursorIncr
       _LCD_EnviaComando
         _LCD_Envia
           _LCD_CfgPort
           _LCD_Port
     _LCD_CursorOFF
       _LCD_EnviaComando
         _LCD_Envia
           _LCD_CfgPort
           _LCD_Port
     _LCD_Envia
       _LCD_CfgPort
       _LCD_Port
   _LCD_PosicionLinea1
     _LCD_EnviaComando
       _LCD_Envia
         _LCD_CfgPort
         _LCD_Port
   _LCD_PosicionLinea2
     _LCD_EnviaComando
       _LCD_Envia
         _LCD_CfgPort
         _LCD_Port
   ___fldiv
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      60       5       60.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      20        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 18 22:21:58 2019

                ?_LCD_CfgPort 0001                 _LCD_CursorOFF 3AC0                  ___fldiv@aexp 0019  
                ___fldiv@bexp 0018                _LCD_CursorIncr 3AC8                  ___fldiv@sign 0011  
                          l30 2A66                            l33 2A7E                            l73 366A  
                          l91 3AB2                            l76 3ACE                            l94 3AA6  
                ___awdiv@sign 0006                   __CFG_BOR$ON 000000           ___wmul@multiplicand 0003  
                 __CFG_BORV$3 000000          ?_LCD_2Lineas8Bits5x7 0001                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                         l112 3AD6                           l121 3A9A                           l130 3158  
                         l131 3160                           l115 3ADE                           l109 3AC6  
                         l118 3ABE                           l135 38D6                           l127 378A  
                         l223 3348                           l226 338A                           l228 33C6  
                         l173 2C4A                           l246 13D6                           l350 36CC  
                         l343 1C40                           l176 2D5A                           l264 0C14  
                         l336 1CF6                           l353 3A64                           l290 0FAC  
                         l612 35E4                           l349 36C4                           l623 2F64  
                         l618 2F1E                           l650 2E60                           l627 39D0  
                         l584 348A                           l907 17B0                           l923 391C  
                         l940 22DE                           l908 179E                           l597 353A  
                         l935 24BA                           l937 231A                           l881 15C6  
                         l946 2360                           l890 1896                           l882 15B4  
                         l971 2120                           l883 157A                           l948 23D8  
                         l949 23C6                           l974 1FB2                           l967 1DBC  
                         l984 20E2                           l976 202A                           l977 2018  
                         l898 16E0                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _pad 3302                  ___awmod@sign 0006                           wreg 000FE8  
                __CFG_FOSC$HS 000000                  ___flmul@aexp 0012                  ___flmul@bexp 0013  
                ___flmul@sign 000D                  ___flmul@temp 0018                  ___flmul@prod 0014  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 000A                  __CFG_WDT$OFF 000000  
                        l1011 2880                          l1022 2818                          l1015 27BC  
                        l1111 3300                          l1008 2724                          l1034 3062  
                        l1141 3A3E                          l1126 3838                          l1063 2A08  
                        l1119 3960                          l1135 37E6                          l1072 26CC  
                        l1160 372C                          l3001 2600                          l1129 3AE0  
                        l1145 3236                          l1082 3A08                          l1090 388A  
                        l1066 2A10                          l3011 26BC                          l1075 2610  
                        l3003 2634                          l1155 3724                          l3021 3A5C  
                        l3101 22E8                          l3005 2670                          l3015 39D2  
                        l3111 2340                          l3103 2306                          l3031 213E  
                        l3007 2684                          l1096 3998                          l3121 237E  
                        l3113 2346                          l3105 2308                          l3033 214E  
                        l3041 2178                          l3025 2122                          l3009 26AC  
                        l4001 366C                          l4011 3602                          l3019 3A40  
                        l3131 23E8                          l3123 2382                          l3115 2350  
                        l3107 2318                          l3051 21A4                          l3043 2188  
                        l3035 215E                          l3027 212E                          l3211 1E28  
                        l3203 1DF0                          l4003 3674                          l4021 364C  
                        l4013 361A                          l3301 33CC                          l3141 244A  
                        l3133 23F4                          l3125 2390                          l3117 235E  
                        l3109 232A                          l3053 21B4                          l3061 21DE  
                        l3045 218E                          l3037 216E                          l3029 213C  
                        l3221 1E72                          l3213 1E40                          l3205 1DFC  
                        l4005 3682                          l4101 2A22                          l4031 3756  
                        l4023 3652                          l4015 3620                          l3311 33FC  
                        l3303 33DA                          l3151 24A8                          l3143 2460  
                        l3135 2402                          l3127 23BE                          l3119 2370  
                        l3071 2220                          l3063 21EE                          l3055 21C4  
                        l3047 2194                          l3039 2170                          l3231 1EC8  
                        l3223 1E82                          l3215 1E4C                          l3207 1E06  
                        l4007 36A8                          l4111 2A4E                          l4103 2A28  
                        l4033 375A                          l4017 3636                          l4009 35E6  
                        l4025 3AAA                          l3321 342A                          l3313 3400  
                        l3305 33E2                          l3153 24AE                          l3145 247A  
                        l3137 242C                          l3065 2204                          l3057 21D4  
                        l3049 21A2                          l3401 2ECE                          l3241 1F6C  
                        l3233 1EE4                          l3225 1E8E                          l3217 1E58  
                        l3209 1E1C                          l4041 3802                          l4121 2A64  
                        l4113 2A50                          l4105 2A34                          l4027 372E  
                        l4019 363E                          l4035 3A9E                          l4051 26E0  
                        l3331 345E                          l3323 3438                          l3315 3408  
                        l3307 33E6                          l3155 24B0                          l3147 2496  
                        l3139 2430                          l3091 22A2                          l3083 2258  
                        l3067 2214                          l3075 2234                          l3059 21D6  
                        l3411 2F5C                          l3403 2EDE                          l3251 1FC2  
                        l3243 1F7A                          l3235 1EF0                          l3227 1E9E  
                        l3219 1E66                          l3171 1D24                          l3163 1CF8  
                        l4043 380A                          l4131 2AE4                          l4123 2A74  
                        l4115 2A52                          l4107 2A3A                          l3501 312E  
                        l4029 3732                          l4061 275E                          l4053 26EE  
                        l3333 3464                          l3325 343E                          l3317 341A  
                        l3309 33F4                          l3149 249A                          l3093 22AA  
                        l3085 2272                          l3077 2244                          l3069 221C  
                        l3413 2F62                          l3405 2EEC                          l3253 1FD0  
                        l3245 1F98                          l3237 1F0C                          l3229 1EB8  
                        l3181 1D60                          l3173 1D34                          l3165 1D04  
                        l3421 39C0                          l2701 391E                          l4045 3826  
                        l4037 37E8                          l4133 2B08                          l4125 2A7C  
                        l4117 2A5A                          l4109 2A46                          l3511 3148  
                        l3503 3130                          l4071 27B2                          l4063 2766  
                        l4055 2734                          l4207 293E                          l3327 3454  
                        l3319 3422                          l3335 346A                          l3351 34AA  
                        l3343 348C                          l3095 22BA                          l3087 2282  
                        l3079 2244                          l3407 2EFE                          l3263 203A  
                        l3271 2082                          l3255 1FD4                          l3247 1FA2  
                        l3239 1F36                          l3191 1D96                          l3183 1D66  
                        l3175 1D44                          l3167 1D12                          l3431 2D86  
                        l2703 392A                          l2711 3A16                          l4039 37FA  
                        l4135 2B0E                          l4127 2A8C                          l4119 2A5C  
                        l3505 3132                          l4081 2828                          l4073 27EE  
                        l4065 2772                          l4057 274A                          l4049 26D0  
                        l3337 347A                          l3329 345C                          l3361 34E2  
                        l3353 34B8                          l3345 3490                          l3097 22CE  
                        l3089 2292                          l3409 2F0C                          l3281 20F6  
                        l3273 209C                          l3265 2046                          l3257 1FE2  
                        l3249 1FB0                          l3193 1DA6                          l3185 1D74  
                        l3177 1D4A                          l3169 1D14                          l3417 399A  
                        l2801 1518                          l3441 2DD4                          l3433 2DB0  
                        l3425 2D5C                          l2705 393C                          l2713 3A1A  
                        l3601 0BC2                          l3521 0858                          l3513 0828  
                        l4137 2B1A                          l4129 2AAE                          l3507 3134  
                        l4091 2870                          l4083 282C                          l4075 27FA  
                        l4067 27A4                          l3339 3482                          l3363 34F0  
                        l3371 351A                          l3355 34C0                          l3347 349E  
                        l3099 22DC                          l3283 2104                          l3275 20B0  
                        l3267 2054                          l3259 2010                          l3195 1DAC  
                        l3187 1D76                          l3179 1D5A                          l3419 39B0  
                        l2811 1588                          l2803 151C                          l2731 1404  
                        l2723 13D8                          l3451 2E00                          l3435 2DB2  
                        l3427 2D72                          l2707 3940                          l2715 3A32  
                        l3603 0BD4                          l3611 0C20                          l3531 08AE  
                        l3523 087C                          l3515 0832                          l3509 313A  
                        l4085 2850                          l4077 2808                          l4069 27A6  
                        l3373 352A                          l3365 3506                          l3357 34D2  
                        l3349 34A6                          l3381 356A                          l3285 2106  
                        l3277 20CA                          l3269 207E                          l3197 1DCC  
                        l3189 1D86                          l2901 1816                          l2821 15B2  
                        l2813 1594                          l2805 1546                          l2741 143E  
                        l2733 1414                          l2725 13E4                          l3293 38D8  
                        l3461 2E30                          l3437 2DC2                          l2709 3A0A  
                        l3701 1096                          l3621 0C60                          l3605 0BE6  
                        l3541 08DC                          l3533 08C0                          l3525 0886  
                        l3517 0842                          l4087 2860                          l4079 2826  
                        l3471 383E                          l3375 3532                          l3367 350E  
                        l3359 34DA                          l3391 35E2                          l3383 357A  
                        l3279 20E6                          l3287 210C                          l3199 1DDC  
                        l2911 1868                          l2903 1826                          l2831 1608  
                        l2823 15D4                          l2815 1598                          l2807 1562  
                        l2751 146C                          l2743 1444                          l2735 1424  
                        l2727 13F2                          l3295 38E8                          l3463 2E40  
                        l3447 2DEC                          l3439 2DC6                          l2719 3962  
                        l3711 10CC                          l3703 10A6                          l3631 0CBC  
                        l3623 0C96                          l3607 0BEE                          l3551 0950  
                        l3535 08CC                          l3543 08E2                          l3527 088E  
                        l3519 0850                          l4095 2A12                          l3481 3066  
                        l4089 286E                          l3473 3852                          l3369 3514  
                        l3385 35A8                          l3289 2110                          l2921 1886  
                        l2913 186E                          l2905 1836                          l2841 1642  
                        l2833 1616                          l2825 15E4                          l2817 15A6  
                        l2809 1572                          l2761 14A0                          l2753 146E  
                        l2745 1456                          l2737 1426                          l2729 13F4  
                        l3465 2E50                          l3457 2E14                          l3449 2DF6  
                        l3801 13A0                          l3721 1100                          l3713 10D0  
                        l3705 10AA                          l3641 0D00                          l3633 0CCE  
                        l3625 0C9E                          l3617 0C32                          l3609 0C08  
                        l3553 096C                          l3545 0908                          l3561 09B6  
                        l3537 08D4                          l3529 08A0                          l4097 2A16  
                        l3491 3120                          l3483 3118                          l3475 3880  
                        l3811 2882                          l3299 33C8                          l3387 35B8  
                        l3379 353C                          l3395 2E62                          l2915 1870  
                        l2907 1856                          l2851 16AE                          l2843 1644  
                        l2835 1624                          l2819 15A8                          l2771 14DC  
                        l2755 147E                          l2763 14A8                          l2747 1458  
                        l2739 142E                          l3459 2E20                          l2691 325C  
                        l2931 3312                          l3803 13B0                          l3731 119E  
                        l3723 1104                          l3715 10D6                          l3707 10B0  
                        l3651 0D4A                          l3643 0D18                          l3635 0CDC  
                        l3619 0C44                          l3627 0CA2                          l3571 0A40  
                        l3563 09DC                          l3555 0984                          l3539 08D8  
                        l4099 2A1E                          l2925 2B3E                          l3493 3122  
                        l3485 311A                          l3477 3884                          l3469 383A  
                        l3821 28F0                          l3813 2896                          l3389 35DC  
                        l3397 2E90                          l2917 1876                          l2909 185A  
                        l2861 1706                          l2853 16B0                          l2845 164E  
                        l2837 1630                          l2829 15F8                          l2781 14F0  
                        l2773 14E0                          l2765 14B8                          l2757 148E  
                        l2749 145E                          l2693 3266                          l2941 3368  
                        l2933 3326                          l3805 13B6                          l3741 11FC  
                        l3709 10BC                          l3717 10DC                          l3725 110A  
                        l3733 11A2                          l3653 0D5E                          l3661 0E54  
                        l3645 0D2A                          l3637 0CE0                          l3629 0CAA  
                        l3581 0A76                          l3557 098E                          l3549 093E  
                        l3901 18BC                          ?_pad 0011                          l2927 2C4E  
                        l3495 3124                          l3487 311C                          l3831 2918  
                        l3823 28F4                          l3815 289A                          l3399 2EA0  
                        l2919 1884                          l2871 1734                          l2855 16C0  
                        l2839 1634                          l2847 1654                          l2791 1504  
                        l2783 14F4                          l2775 14E4                          l2767 14CA  
                        l2759 149E                          l2951 2F66                          l2695 3284  
                        l2687 3238                          l2943 336C                          l2935 3334  
                        l3751 123A                          l3743 120C                          l3735 11C0  
                        l3727 1162                          l3719 10EE                          l3671 0F20  
                        l3663 0E72                          l3655 0DC2                          l3639 0CF2  
                        l3647 0D32                          l3591 0B40                          l3567 0A12  
                        l3911 190C                          l3903 18CA                          l3497 3126  
                        l3489 311E                          l3833 2920                          l3817 289E  
                        l2873 1742                          l2865 171A                          l2881 1760  
                        l2849 167A                          l2857 16D0                          l2793 1508  
                        l2785 14F8                          l2777 14E8                          l2769 14D8  
                        l2953 2F86                          l2697 32BA                          l2689 324A  
                        l2945 339A                          l2937 3340                          l2929 3302  
                        l3761 1270                          l3753 124A                          l3745 1210  
                        l3737 11DC                          l3729 1196                          l3681 0F98  
                        l3673 0F30                          l3665 0EA6                          l3657 0E1A  
                        l3649 0D3A                          l3593 0B74                          l3585 0AAC  
                        l3569 0A24                          l3921 19A6                          l3913 191A  
                        l3905 18DC                          l3499 3128                          l3843 29C8  
                        l3835 2954                          l3827 28FA                          l3819 28BA  
                        l2875 174A                          l2867 1724                          l2859 16F6  
                        l2883 176E                          l2795 150C                          l2787 14FC  
                        l2779 14EC                          l2955 2FC4                          l2963 3004  
                        l2947 33AE                          l2939 3354                          l3771 12CC  
                        l3763 127C                          l3755 1252                          l3747 1220  
                        l3739 11EE                          l3691 104E                          l3683 0FA4  
                        l3675 0F40                          l3667 0ED8                          l3659 0E4E  
                        l3595 0B7C                          l3587 0AE0                          l3579 0A5C  
                        l3931 1A2E                          l3915 193E                          l3907 18E0  
                        l3845 29DA                          l3829 2910                          l2893 17C0  
                        l2885 1772                          l2877 174E                          l2869 1732  
                        l2797 1510                          l2789 1500                          l2965 3016  
                        l2957 2FEC                          l2973 378C                          l2981 3704  
                        l3781 1316                          l3765 1282                          l3773 12D2  
                        l3757 1260                          l3749 1232                          l3693 1060  
                        l3685 0FC8                          l3677 0F74                          l3669 0EEE  
                        l3589 0AE6                          l3597 0BAE                          l3861 31A6  
                        l3853 3162                          l3941 1AC6                          l3933 1A5E  
                        l3925 19EC                          l3917 1978                          l3909 1904  
                        l3847 29EC                          l3839 298A                          l2895 17CC  
                        l2887 1780                          l2879 175E                          l2799 1514  
                        l2959 2FF8                          l2991 2532                          l2975 379C  
                        l2983 3716                          l3791 1346                          l3783 1322  
                        l3775 12E4                          l3767 12A8                          l3759 1268  
                        l3695 106E                          l3687 102C                          l3679 0F84  
                        l3599 0BBE                          l3863 31BE                          l3855 318C  
                        l3951 1B5E                          l3943 1AD4                          l3935 1A6E  
                        l3919 1998                          l3927 19FE                          l3873 3AB6  
                        l2897 17DA                          l2889 1796                          l2969 305A  
                        l2993 2546                          l2977 36CE                          l3785 132A  
                        l3777 12FE                          l3769 12C4                          l3689 103C  
                        l3697 1076                          l3865 31DA                          l3945 1B04  
                        l3937 1A9E                          l3929 1A1E                          l3891 38CE  
                        l3883 38A6                          l3875 3AB8                          l2899 1814  
                        l2995 2554                          l2987 24BC                          l3795 137A  
                        l3787 133A                          l3779 1304                          l3699 1088  
                        l3867 31EC                          l3859 3198                          l3971 1C9A  
                        l3955 1BCA                          l3939 1AB0                          l3877 388E  
                        l2989 24DC                          l3797 138C                          l3789 1340  
                        l3869 3214                          l3957 1BDC                          l3965 1C54  
                        l3949 1B30                          l3981 1CC0                          l3895 38D4  
                        l3879 38A0                          l3991 3AD0                          l2999 25C4  
                        l3799 1398                          l3983 1CE4                          l3967 1C78  
                        l3975 1CA6                          l3959 1C10                          l3889 38BC  
                        l3993 3AC0                          l3977 1CB4                          l3969 1C86  
                        l3995 3AC8                          l3899 1898                          l3997 3A8A  
                        l3989 3AD8                          l3999 3A8C                          STR_1 0801  
                        STR_2 0823                          STR_3 080B                          STR_4 0810  
                        STR_5 0818                          STR_8 0814                          STR_9 081C  
                        u3000 3960                          u3001 395C                          u3010 3A32  
                        u3011 3A2E                          u3100 148E                          u3020 3992  
                        u3101 148A                          u3021 398C                          u3110 14CA  
                        u3030 3994                          u3111 14C6                          u3200 15E4  
                        u3120 14D8                          u3040 13F2                          u4000 26AC  
                        u3201 15E0                          u3121 14D4                          u3041 13EE  
                        u4001 26A8                          u4010 3A02                          u3210 1616  
                        u3130 1546                          u3050 1404                          u4011 39FC  
                        u3211 1612                          u3131 1542                          u3051 1400  
                        u4020 3A04                          u4100 2244                          u3300 175E  
                        u3220 1624                          u3140 155E                          u3060 1414  
                        u4101 2240                          u3301 175A                          u3221 1620  
                        u3141 1558                          u3061 1410                          u4110 22BA  
                        u4030 213C                          u3310 176E                          u3230 1642  
                        u3150 1560                          u3070 1456                          u4111 22B6  
                        u4031 2138                          u3311 176A                          u3231 163E  
                        u3071 1452                          u4200 23D4                          u4120 22DC  
                        u4040 214E                          u3400 1856                          u3320 1780  
                        u3240 167A                          u3160 1588                          u3080 146C  
                        u5000 0A0A                          u4201 23D0                          u4121 22D8  
                        u4041 214A                          u3401 1852                          u3321 177C  
                        u3241 1676                          u3161 1584                          u3081 1468  
                        u5001 0A04                          u4210 23E8                          u4130 2306  
                        u4050 215E                          u3410 1868                          u3330 1796  
                        u3250 16C0                          u3170 15A6                          u3090 147E  
                        u5010 0A0C                          u4211 23E4                          u4131 2302  
                        u4051 215A                          u3411 1864                          u3331 1792  
                        u3251 16BC                          u3171 15A2                          u3091 147A  
                        u4220 2402                          u4140 232A                          u4060 21A2  
                        u4300 1D86                          u3420 1884                          u3340 17AC  
                        u3260 16F6                          u3180 15C6                          u5100 0C44  
                        u5020 0A24                          u4221 23FE                          u4141 2326  
                        u4061 219E                          u4301 1D82                          u3421 1880  
                        u3341 17A8                          u3261 16F2                          u3181 15C2  
                        u5101 0C40                          u5021 0A20                          u3510 2BD8  
                        u3430 2B50                          u4230 244A                          u4150 2340  
                        u4070 21B4                          u4310 1D96                          u3350 17C0  
                        u3270 1706                          u3190 15D4                          u5110 0C60  
                        u5030 0AA8                          u3511 2BD0                          u3431 2B48  
                        u4231 2446                          u4151 233C                          u4071 21B0  
                        u4311 1D92                          u3351 17BC                          u3271 1702  
                        u3191 15D0                          u5111 0C5C                          u5031 0AA4  
                        u4240 247A                          u4160 235E                          u4080 21C4  
                        u4400 203A                          u4320 1DCC                          u3360 17DA  
                        u3280 1732                          u5200 0ED8                          u5120 0C96  
                        u5040 0B3C                          u4241 2476                          u4161 235A  
                        u4081 21C0                          u4401 2036                          u4321 1DC8  
                        u3361 17D6                          u3281 172E                          u5201 0ED4  
                        u5121 0C92                          u5041 0B38                          u3610 2C82  
                        u3530 2BFC                          u3450 2B72                          u4250 24A8  
                        u4170 237E                          u4090 2204                          u4410 2054  
                        u4330 1DDC                          u3370 1814                          u3290 1742  
                        u5210 0F20                          u5130 0CBC                          u5050 0BAE  
                        u3611 2C7A                          u3531 2BF4                          u3451 2B6A  
                        u4251 24A4                          u4171 237A                          u4091 2200  
                        u4411 2050                          u4331 1DD8                          u3371 1810  
                        u3291 173E                          u5211 0F1C                          u5131 0CB8  
                        u5051 0BAA                          u3508 2BBA                          u4500 347A  
                        u4180 2390                          u4420 209C                          u4340 1F56  
                        u4260 1D12                          u3380 1826                          u5300 10EE  
                        u5220 0F30                          u5140 0CCE                          u5060 0BD4  
                        u4501 3476                          u4181 238C                          u4421 2098  
                        u4261 1D0E                          u3381 1822                          u5301 10EA  
                        u5221 0F2C                          u5141 0CCA                          u5061 0BD0  
                        u3710 2D2E                          u3630 2CA6                          u3550 2C1E  
                        u3470 2B96                          u4510 349E                          u4190 23BE  
                        u4430 20CA                          u4350 1FB0                          u4270 1D24  
                        u3390 1836                          u5310 11C0                          u5230 0F98  
                        u5150 0CDC                          u5070 0BE6                          u3711 2D26  
                        u3631 2C9E                          u3551 2C16                          u3471 2B8E  
                        u6007 315A                          u4511 349A                          u4191 23BA  
                        u4431 20C6                          u4351 1FAC                          u4271 1D20  
                        u3391 1832                          u5311 11BC                          u5231 0F94  
                        u5151 0CD8                          u5071 0BE2                          u3608 2C62  
                        u3528 2BDA                          u3448 2B52                          u4520 34B8  
                        u4600 2E90                          u4440 2104                          u4360 1FD0  
                        u4280 1D34                          u3800 2FC4                          u5400 1374  
                        u5320 11DC                          u5240 103C                          u5160 0CF2  
                        u5080 0C08                          u4521 34B4                          u4601 2E8C  
                        u4441 2100                          u4361 1FCC                          u4345 1F4C  
                        u4281 1D30                          u3801 2FC0                          u5401 136E  
                        u5321 11D8                          u5241 1038                          u5161 0CEE  
                        u5081 0C04                          u3730 2D4E                          u3650 2CC8  
                        u3570 2C3E                          u3490 2BB8                          u4450 33DA  
                        u4530 34D2                          u4610 2ECE                          u4370 1FE2  
                        u4290 1D74                          u3810 2FEC                          u5410 1376  
                        u5330 11EE                          u5250 104E                          u5170 0D00  
                        u5090 0C2E                          u3731 2D46                          u3651 2CC0  
                        u3571 2C36                          u3491 2BB0                          u4451 33D6  
                        u4531 34CE                          u4611 2ECA                          u4371 1FDE  
                        u4291 1D70                          u3811 2FE8                          u5331 11EA  
                        u5251 104A                          u5171 0CFC                          u5091 0C2A  
                        u3708 2D0E                          u3628 2C84                          u3548 2BFE  
                        u3468 2B74                          u4460 33F4                          u4540 34F0  
                        u4620 2EEC                          u4380 2010                          u4700 2E10  
                        u3820 3016                          u3900 3716                          u5420 138C  
                        u5340 11FC                          u5260 1060                          u5180 0D2A  
                        u5500 318C                          u4461 33F0                          u4541 34EC  
                        u4621 2EE8                          u4381 200C                          u4701 2E0C  
                        u3821 3012                          u3901 3712                          u5421 1388  
                        u5341 11F8                          u5261 105C                          u5181 0D26  
                        u5501 3188                          u3670 2CE8                          u3590 2C60  
                        u5430 28BA                          u4470 341A                          u4550 3506  
                        u4630 2F0C                          u4390 2026                          u4710 2E30  
                        u3910 2504                          u3750 3312                          u5350 1232  
                        u5270 106E                          u5190 0E72                          u5510 31BE  
                        u3671 2CE0                          u3591 2C58                          u5431 28B6  
                        u4471 3416                          u4551 3502                          u4631 2F08  
                        u4391 2022                          u4711 2E2C                          u3751 330E  
                        u5351 122E                          u5271 106A                          u5191 0E6E  
                        u5511 31BA                          u3728 2D30                          u3648 2CA8  
                        u3568 2C20                          u3488 2B98                          u4800 30B4  
                        u5440 28F0                          u4480 3438                          u4560 352A  
                        u4640 2F5C                          u4720 2E40                          u3840 3050  
                        u3920 2532                          u2960 324A                          u3760 3334  
                        u5360 1260                          u5280 1088                          u5520 31DA  
                        u5600 193E                          u4801 30AC                          u5441 28EC  
                        u4481 3434                          u4561 3526                          u4641 2F58  
                        u4721 2E3C                          u3841 304A                          u3921 252E  
                        u2961 3246                          u3761 3330                          u5361 125C  
                        u5281 1084                          u5521 31D6                          u5601 193A  
                        u3690 2D0C                          u4730 3852                          u5450 290C  
                        u4490 3454                          u4570 356A                          u4650 39B0  
                        u3850 3052                          u3930 2554                          u2970 325C  
                        u3770 338A                          u5370 12E4                          u5290 1096  
                        u5530 31EC                          u5610 19E6                          u3691 2D04  
                        u4731 384E                          u5451 2908                          u4491 3450  
                        u4571 3566                          u4651 39AC                          u3835 3028  
                        u3931 2550                          u3915 24FA                          u2971 3258  
                        u3771 3386                          u5371 12E0                          u5291 1092  
                        u5531 31E8                          u5611 19E0                          u3748 2D50  
                        u3668 2CCA                          u3588 2C40                          u4900 3148  
                        u4820 30C8                          u4740 3880                          u5460 29C2  
                        u4580 35A8                          u4660 2D72                          u2980 3284  
                        u3780 339A                          u3860 37D4                          u5380 12FE  
                        u5540 3214                          u5700 1BDC                          u5620 19E8  
                        u4901 3144                          u4821 30C0                          u4741 387C  
                        u5461 29BC                          u4581 35A4                          u4661 2D6E  
                        u2981 3280                          u3781 3396                          u5381 12FA  
                        u5541 3210                          u5701 1BD8                          u5550 38A0  
                        u4750 3078                          u5470 29C4                          u4590 35DC  
                        u4670 2DA6                          u3790 2FA6                          u3950 25C0  
                        u2990 32BA                          u3870 37E6                          u5390 1316  
                        u4910 0850                          u5710 1C78                          u5630 19FE  
                        u5551 389C                          u4815 30B6                          u4751 3070  
                        u4591 35D8                          u3951 25BC                          u2991 32B6  
                        u3871 37E2                          u5391 1312                          u4911 084C  
                        u5711 1C74                          u5631 19FA                          u5560 38B8  
                        u3688 2CEA                          u4840 30DC                          u4760 308C  
                        u5800 27EA                          u5480 29DA                          u4680 2DD4  
                        u3960 25E4                          u3880 36FE                          u4920 08A0  
                        u5640 1A2E                          u5720 36C4                          u5561 38B4  
                        u4841 30D4                          u4761 3084                          u5801 27E6  
                        u5481 29D6                          u4681 2DD0                          u3945 2568  
                        u3881 36F8                          u4921 089C                          u5641 1A2A  
                        u5721 36C0                          u5570 38CE                          u5730 3752  
                        u5810 2808                          u5490 29EC                          u4690 2DE8  
                        u3970 2600                          u3946 2572                          u3890 3700  
                        u4930 08AE                          u5650 1A6E                          u5571 38CA  
                        u4835 30CA                          u5811 2804                          u5491 29E8  
                        u4691 2DE4                          u4675 2D9C                          u3795 2F9C  
                        u3971 25FC                          u3947 2582                          u3867 37CA  
                        u4931 08AA                          u5651 1A6A                          u4860 30F0  
                        u4780 30A0                          u5740 377A                          u5820 2818  
                        u3980 2654                          u4940 08C0                          u5660 1AB0  
                        u5580 18BC                          u4861 30E8                          u4781 3098  
                        u5821 2814                          u3965 25DA                          u4941 08BC  
                        u5661 1AAC                          u5581 18B8                          u4758 307A  
                        u5750 378A                          u5830 2826                          u3990 2670  
                        u4950 0908                          u5670 1B5E                          u5590 1904  
                        u4855 30DE                          u4775 308E                          u5751 3786  
                        u5831 2822                          u3991 266C                          u4951 0904  
                        u5671 1B5A                          u5591 1900                          u4880 3104  
                        u5840 2860                          u5760 26E0                          u4960 0936  
                        u5680 1BC4                          u4881 30FC                          u5737 3748  
                        u5841 285C                          u5761 26DC                          u3985 264A  
                        u4961 0930                          u5681 1BBE                          u5850 286E  
                        u5770 26EE                          u4970 0938                          u5690 1BC6  
                        u4875 30F2                          u4795 30A2                          u5747 3770  
                        u5851 286A                          u5771 26EA                          u5780 274A  
                        u4980 0950                          u5860 2A74                          u5781 2746  
                        u4981 094C                          u5861 2A70                          u5917 2A54  
                        u5790 27A0                          u4990 09DC                          u5870 2A8C  
                        u4895 3106                          u5791 279C                          u4991 09D8  
                        u5871 2A88                          u5927 2A5E                          u5937 2B26  
                        u5947 360C                          u5957 3626                          u5967 3638  
                        u5977 3646                          u5987 3654                          u5997 314E  
                        _TMR1 000FCE        __end_of_LCD_Inicializa 366C                  __CFG_PWRT$ON 000000  
                        _dbuf 0100                          _atoi 2882                          _main 2A12  
                        _prec 00BC                          _nout 00B8                          pad@i 0018  
                        pad@p 0015                          fsr0h 000FEA                          fsr1h 000FE2  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          pad@w 001A  
                        fsr2l 000FD9            __size_of_LCD_Borra 0008            __size_of_LCD_Envia 00FE  
               ___fpclassifyf 2F66                          prodh 000FF4                          prodl 000FF3  
                        start 0000                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0012  
              ?_LCD_CursorOFF 0001                  _tolower$1204 000D        __end_of_LCD_CursorIncr 3AD0  
     __end_of_LCD_EnviaCadena 378C                  ___param_bank 000000                         ??_pad 0017  
            __end_of_LCD_Port 2C4C                 __CFG_PLLDIV$1 000000         ??_LCD_2Lineas8Bits5x7 000E  
              __CFG_CCP2MX$ON 000000                 ___fltol@sign1 0009                         ?_atoi 0008  
             __end_of___fladd 1898                         ?_main 0001               __end_of___fldiv 24BC  
             __end_of___awdiv 348C               __end_of___flneg 39D2                         STR_12 0820  
                       STR_14 0820               __end_of___awmod 353C               __end_of___flmul 2122  
             __end_of___flsub 391E               __end_of___fltol 2E62               ___awdiv@divisor 0003  
                       _T1CON 000FCD               ___awdiv@counter 0005                  vfpfcnvrt@fmt 003C  
               __CFG_USBDIV$1 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _flags 00BE  
                       _fputc 3238                         _fputs 391E               __end_of_isdigit 3A0A  
                       atoi@n 0015                         pad@fp 0011                         atoi@s 0008  
                       _width 00BA                         _putch 3AE0                         main@a 00AC  
             __end_of_isspace 388C         LCD_PosicionLinea1@Pos 000E         LCD_PosicionLinea2@Pos 000E  
             __end_of_isupper 399A                         tablat 000FF5              ?_LCD_CodigoCGROM 0001  
             ?_LCD_Inicializa 0001                         status 000FD8               __end_of_sprintf 383A  
              ?___fpclassifyf 0001               __end_of_tolower 372E               __end_of_strncmp 3238  
              __CFG_ICPRT$OFF 000000                __CFG_MCLRE$OFF 000000               ?_LCD_CursorIncr 0001  
             __initialization 3A66                  __end_of_atoi 2A12                  __end_of_main 2B3C  
    __end_of_LCD_EnviaComando 3AC0                        ??_atoi 000A                        ??_main 00A2  
               __activetblptr 000002             __end_of_LCD_Borra 3AD8             __end_of_LCD_Envia 3162  
                LCD_Port@Dato 0002                        _ADCON1 000FC1                        ?_fputc 0001  
                      ?_fputs 000A              ___awdiv@dividend 0001                        ?_putch 0001  
            __end_of___xxtofl 2882               ??_LCD_CursorOFF 000E                __CFG_XINST$OFF 000000  
            ?_LCD_EnviaCadena 000E                  vfprintf@cfmt 0056                        ___flge 2E62  
                      ___fleq 353C                     ??___fladd 0009                        ___wmul 3A40  
                   ??___fldiv 0009                     ??___awdiv 0005                     ??___flneg 0005  
              __CFG_STVREN$ON 000000                     ??___awmod 0005                     ??___flmul 0009  
                   ??___flsub 0022                     ??___fltol 0005                        _efgtoa 0828  
        __size_of_LCD_CfgPort 0110                        _floorf 24BC                        clear_0 3A6C  
                      clear_1 3A78              ___awdiv@quotient 0007               ___awmod@divisor 0003  
             ___awmod@counter 0005                        pad@buf 0013                        _strcpy 378C  
                      _strlen 3A0A                        fputc@c 0001                        fputs@c 000E  
                      fputs@i 000F                        fputs@s 000A                     ??_isdigit 0003  
             ___fpclassifyf@e 0009               ___fpclassifyf@u 000B               ___fpclassifyf@x 0001  
                __mediumconst 0000                     ??_isspace 0003                        tblptrh 000FF7  
                   ??_isupper 0003                        tblptrl 000FF6                        tblptru 000FF8  
                      putch@c 0001              __end_of_vfprintf 36CE                 LCD_Envia@Dato 000B  
                   ??_sprintf 0060                     ??_tolower 0009                     ??_strncmp 0007  
                  ___flge@ff1 001A                    ___flge@ff2 001E               ??___fpclassifyf 0005  
                ___xxtofl@arg 000B                  ___xxtofl@exp 000A            _LCD_PosicionLinea1 3AA8  
          _LCD_PosicionLinea2 3A9C                  ___xxtofl@val 0001                    ___fleq@ff1 0001  
                  ___fleq@ff2 0005                    __accesstop 0060       __end_of__initialization 3A7E  
             __CFG_PBADEN$OFF 000000                    ___flneg@f1 0001                     ?_LCD_Port 0001  
               ___rparam_used 000001                    ___fltol@f1 0001           ?_LCD_PosicionLinea1 0001  
         ?_LCD_PosicionLinea2 0001                __pcstackCOMRAM 0001                 __end_of_fputc 3302  
               __end_of_fputs 3962                 __end_of_putch 3AE2          ??_LCD_PosicionLinea1 000E  
        ??_LCD_PosicionLinea2 000E                       ??_fputc 0005                       ??_fputs 000E  
              LCD_CfgPort@Cfg 0002                       ??_putch 0001                    __pbssBANK0 00B0  
                  __pbssBANK1 0100                    ??_LCD_Port 0001                    _efgtoa$593 0068  
                  _efgtoa$587 0064                    _efgtoa$588 0066                    _efgtoa$597 006A  
                  _efgtoa$598 006C                    _efgtoa$599 006E                       ?___flge 001A  
                     ?___fleq 0001                       ?___wmul 0001                       ?_efgtoa 002E  
                     ?_floorf 001A                       ?_strcpy 0001                       ?_strlen 0001  
                   ?___xxtofl 0001            __size_of_vfpfcnvrt 0460              ??_LCD_Inicializa 000E  
             __CFG_VREGEN$OFF 000000              ??_LCD_CursorIncr 000E                       __Hparam 0000  
                     __Lparam 0000   __end_of_LCD_2Lineas8Bits5x7 3AE0               __size_of___flge 0104  
             __size_of___fleq 00AA                       ___fladd 13D8                       ___fldiv 2122  
                     ___awdiv 33C8                       ___flneg 399A                       ___awmod 348C  
                     ___flmul 1CF8                       ___flsub 38D8                       ___fltol 2D5C  
             __size_of___wmul 0026                     ?_vfprintf 0050             ?_LCD_EnviaComando 0001  
                __psmallconst 0800               __size_of_efgtoa 0BB0               __size_of_floorf 0212  
                     __pcinit 3A66                       __ramtop 0800            ??_LCD_EnviaComando 000D  
                     __ptext0 2A12                       __ptext1 37E8                       __ptext2 366C  
                     __ptext3 1898                       __ptext4 3162                       __ptext5 0828  
                     __ptext6 36CE                       __ptext7 3962                       __ptext8 378C  
                     __ptext9 3302               __size_of_strcpy 005C               __size_of_strlen 0036  
                   _T1CONbits 000FCD                  __size_of_pad 00C6                       _isdigit 39D2  
                  ??___xxtofl 0005              ___awmod@dividend 0001                       _isspace 383A  
                     _isupper 3962                       efgtoa@c 0034                       efgtoa@d 0078  
                     efgtoa@e 0090                       efgtoa@f 0030                       efgtoa@g 008C  
                     efgtoa@h 0082                       efgtoa@i 008A                       efgtoa@l 0086  
                     efgtoa@m 0074                       efgtoa@n 0092                       efgtoa@p 007C  
                     efgtoa@t 0070                       efgtoa@u 0094                       efgtoa@w 007F  
                   _LCD_Borra 3AD0                       atoi@neg 000E                     _LCD_Envia 3064  
                     main@Lon 00A8                       _sprintf 37E8                       _tolower 36CE  
                     _strncmp 3162          end_of_initialization 3A7E                       floorf@e 0028  
                     floorf@m 0024                       floorf@u 002A                       floorf@x 001A  
                     fputc@fp 0003                 __Lmediumconst 0000                       fputs@fp 000C  
    __size_of_LCD_CodigoCGROM 004C             __end_of_vfpfcnvrt 1CF8                    efgtoa@mode 0081  
                  efgtoa@sign 007A                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 0056  
                     strcpy@d 0009                       strlen@a 0003                       strcpy@s 0007  
                     strlen@s 0001                     _PORTBbits 000F81                     _PORTDbits 000F83  
                 ___fladd@grs 0010                 ___xxtofl@sign 0009                     _TRISBbits 000F93  
                   _TRISDbits 000F95         LCD_EnviaCadena@Cadena 000E                    ?_LCD_Borra 0001  
                  ?_LCD_Envia 0001                   ___fldiv@grs 0014                   ___fldiv@rem 000D  
                 ___flmul@grs 000E             __size_of_LCD_Port 0110         __end_of_LCD_CursorOFF 3AC8  
               ??_LCD_CfgPort 0001                __end_of___flge 2F66                __end_of___fleq 35E6  
                 vfpfcnvrt@ap 003E                   vfpfcnvrt@ct 004C                   vfpfcnvrt@fp 003A  
              __end_of___wmul 3A66                __end_of_efgtoa 13D8                __end_of_floorf 26CE  
                  floorf@F524 00B0      __size_of_LCD_EnviaCadena 005E                __end_of_strcpy 37E8  
              __end_of_strlen 3A40           start_initialization 3A66                   __end_of_pad 33C8  
     LCD_EnviaComando@Comando 000D     LCD_EnviaCaracter@Caracter 000D         __end_of___fpclassifyf 3064  
                 vfprintf@fmt 0052                      ??___flge 0022                      ??___fleq 0009  
                    ??___wmul 0005                      ??_efgtoa 0035                      ??_floorf 001E  
            __CFG_LPT1OSC$OFF 000000             ??_LCD_CodigoCGROM 0001           __end_of_LCD_CfgPort 2D5C  
                    ??_strcpy 0005                      ??_strlen 0003                     ___fladd@a 0005  
                   ___fladd@b 0001                     ___fldiv@a 0005                     ___fldiv@b 0001  
                   ___flmul@a 0005                     ___flmul@b 0001                     ___flsub@a 001E  
                   ___flsub@b 001A   __size_of_LCD_PosicionLinea1 000C   __size_of_LCD_PosicionLinea2 000C  
               __pcstackBANK0 0060                   ??_LCD_Borra 000E                   ??_LCD_Envia 0003  
           __size_of___xxtofl 01B4                     _atoi$1090 0012                     _atoi$1088 0010  
                   _atoi$1089 0014                      ?___fladd 0001                      ?___fldiv 0001  
                    ?___awdiv 0001                      ?___flneg 0001                      ?___awmod 0001  
                    ?___flmul 0001                      ?___flsub 001A                      ?___fltol 0001  
           __size_of_vfprintf 0062                   __smallconst 0800                      ?_isdigit 0001  
                    ?_isspace 0001                      ?_isupper 0001             ??_LCD_EnviaCadena 0010  
                    ?_sprintf 0058                      ?_tolower 0007     __size_of_LCD_EnviaComando 000C  
              __size_of_fputc 00CA                __size_of_fputs 0044                      ?_strncmp 0001  
              __size_of_putch 0002                ___wmul@product 0005                      _LCD_Port 2B3C  
                 _LCD_CfgPort 2C4C              __CFG_WDTPS$32768 000000                     _vfpfcnvrt 1898  
__size_of_LCD_2Lineas8Bits5x7 0008             ___wmul@multiplier 0001                  _isspace$1119 0007  
                  vfpfcnvrt@c 004F                    vfpfcnvrt@f 0048       __size_of_LCD_Inicializa 0086  
                    __Hrparam 0000                    vfprintf@ap 0054                      __Lrparam 0000  
                  vfprintf@fp 0050             _LCD_EnviaCaracter 3A88            ?_LCD_EnviaCaracter 0001  
     __size_of_LCD_CursorIncr 0008              __size_of___fladd 04C0              __size_of___fldiv 039A  
            __size_of___awdiv 00C4              __size_of___flneg 0038              __size_of___awmod 00B0  
            __size_of___flmul 042A              __size_of___flsub 0046              __size_of___fltol 0106  
                  ?_vfpfcnvrt 003A       LCD_CodigoCGROM@Caracter 0001            ___fpclassifyf@F463 00B4  
         ??_LCD_EnviaCaracter 000D       LCD_Envia@LCD_GuardaTRIS 000C                    sprintf@fmt 005A  
                    ___xxtofl 26CE              __size_of_isdigit 0038              __size_of_isspace 0052  
                    __ptext10 3A0A                      __ptext11 391E                      __ptext20 1CF8  
                    __ptext12 3238                      __ptext21 2E62                      __ptext13 3AE0  
                    __ptext30 26CE                      __ptext22 353C                      __ptext14 24BC  
                    __ptext31 3A9C                      __ptext23 2122                      __ptext15 2F66  
                    __ptext40 3A88                      __ptext32 3AA8                      __ptext24 348C  
                    __ptext16 2D5C                      __ptext41 3064                      __ptext33 35E6  
                    __ptext25 33C8                      __ptext17 38D8                      __ptext42 2B3C  
                    __ptext34 3AC0                      __ptext26 2882                      __ptext18 13D8  
                    __ptext43 2C4C                      __ptext35 3AC8                      __ptext27 383A  
                    __ptext19 399A                      __ptext44 388C                      __ptext36 3AD0  
                    __ptext28 39D2                      __ptext37 3AD8                      __ptext29 3A40  
                    __ptext38 3AB4                      __ptext39 372E              __size_of_isupper 0038  
            __size_of_sprintf 0052              __size_of_tolower 0060                    strcpy@dest 0001  
            __size_of_strncmp 00D6                 __size_of_atoi 0190                 __size_of_main 012A  
   __end_of_LCD_EnviaCaracter 3A9C               _LCD_CodigoCGROM 388C                      efgtoa@fp 002E  
                    efgtoa@ne 0076                      efgtoa@pp 0072                      efgtoa@ou 0060  
                    _vfprintf 366C                      main@pepe 00A4         __CFG_CPUDIV$OSC1_PLL2 000000  
      __size_of_LCD_CursorOFF 0008                      isdigit@c 0001              _LCD_EnviaComando 3AB4  
                   sprintf@ap 009A                      isspace@c 0001                     strcpy@src 0003  
                    isupper@c 0001                     strncmp@_l 0001                     strncmp@_r 0003  
                 efgtoa@nmode 007E                   ??_vfpfcnvrt 0040                 _vfpfcnvrt$613 0044  
               _vfpfcnvrt$617 0046               _LCD_EnviaCadena 372E    __end_of_LCD_PosicionLinea1 3AB4  
  __end_of_LCD_PosicionLinea2 3AA8                      sprintf@f 009C                      tolower@c 0007  
                    sprintf@s 0058        __size_of___fpclassifyf 00FE                      strncmp@l 0008  
                    strncmp@n 0005                      strncmp@r 000A                 ___fladd@signs 000D  
     __end_of_LCD_CodigoCGROM 38D8           _LCD_2Lineas8Bits5x7 3AD8                  ___fladd@aexp 000E  
                ___fladd@bexp 000F                _LCD_Inicializa 35E6    __size_of_LCD_EnviaCaracter 0014  
