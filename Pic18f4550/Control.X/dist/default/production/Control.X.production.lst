

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 15 18:37:41 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000F04                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for _Iniciar_acumulacion_de_datos
    73  000F04  01                 	db	1
    74  0000                     _TMR1L	set	4046
    75  0000                     _TMR1H	set	4047
    76  0000                     _T1CONbits	set	4045
    77  0000                     _TMR0L	set	4054
    78  0000                     _TMR0H	set	4055
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _RCREG	set	4014
    81  0000                     _TXREG	set	4013
    82  0000                     _BAUDCONbits	set	4024
    83  0000                     _TXSTAbits	set	4012
    84  0000                     _RCSTAbits	set	4011
    85  0000                     _SPBRG	set	4015
    86  0000                     _CCPR1H	set	4031
    87  0000                     _CCPR1L	set	4030
    88  0000                     _PR2	set	4043
    89  0000                     _CCP1CONbits	set	4029
    90  0000                     _T2CONbits	set	4042
    91  0000                     _TRISCbits	set	3988
    92  0000                     _PORTDbits	set	3971
    93  0000                     _OSCCONbits	set	4051
    94  0000                     _TRISDbits	set	3989
    95  0000                     _ADRESL	set	4035
    96  0000                     _ADRESH	set	4036
    97  0000                     _ADCON1bits	set	4033
    98  0000                     _ADCON2bits	set	4032
    99  0000                     _IPR1bits	set	3999
   100  0000                     _PIE1bits	set	3997
   101  0000                     _TRISAbits	set	3986
   102  0000                     _PIR1bits	set	3998
   103  0000                     _ADCON0bits	set	4034
   104  0000                     _INTCONbits	set	4082
   105  0000                     _T0CONbits	set	4053
   106  0000                     _RCONbits	set	4048
   107  0000                     _RD1	set	31769
   108  0000                     _TRISD1	set	31913
   109                           
   110                           	psect	smallconst
   111  000800                     __psmallconst:
   112                           	opt callstack 0
   113  000800  00                 	db	0
   114  000801                     STR_1:
   115  000801  41                 	db	65	;'A'
   116  000802  3D                 	db	61	;'='
   117  000803  5B                 	db	91	;'['
   118  000804  00                 	db	0
   119  000805                     STR_2:
   120  000805  42                 	db	66	;'B'
   121  000806  3D                 	db	61	;'='
   122  000807  5B                 	db	91	;'['
   123  000808  00                 	db	0
   124  000809                     STR_3:
   125  000809  43                 	db	67	;'C'
   126  00080A  3D                 	db	61	;'='
   127  00080B  5B                 	db	91	;'['
   128  00080C  00                 	db	0
   129  00080D                     STR_4:
   130  00080D  44                 	db	68	;'D'
   131  00080E  3D                 	db	61	;'='
   132  00080F  5B                 	db	91	;'['
   133  000810  00                 	db	0
   134  000811                     STR_5:
   135  000811  45                 	db	69	;'E'
   136  000812  3D                 	db	61	;'='
   137  000813  5B                 	db	91	;'['
   138  000814  00                 	db	0
   139  000815                     STR_6:
   140  000815  46                 	db	70	;'F'
   141  000816  3D                 	db	61	;'='
   142  000817  5B                 	db	91	;'['
   143  000818  00                 	db	0
   144  000819                     STR_9:
   145  000819  0A                 	db	10
   146  00081A  0D                 	db	13
   147  00081B  00                 	db	0
   148  00081C                     STR_8:
   149  00081C  5D                 	db	93	;']'
   150  00081D  3B                 	db	59	;';'
   151  00081E  00                 	db	0
   152  00081F                     STR_7:
   153  00081F  2C                 	db	44
   154  000820  00                 	db	0
   155                           
   156                           ; #config settings
   157  000821  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           	psect	cinit
   160  000D68                     __pcinit:
   161                           	opt callstack 0
   162  000D68                     start_initialization:
   163                           	opt callstack 0
   164  000D68                     __initialization:
   165                           	opt callstack 0
   166                           
   167                           ; Initialize objects allocated to COMRAM (1 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169  000D68  0E04               	movlw	low __pidataCOMRAM
   170  000D6A  6EF6               	movwf	tblptrl,c
   171  000D6C  0E0F               	movlw	high __pidataCOMRAM
   172  000D6E  6EF7               	movwf	tblptrh,c
   173  000D70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174  000D72  6EF8               	movwf	tblptru,c
   175  000D74  0009               	tblrd		*+	;fetch initializer
   176  000D76  CFF5 F038          	movff	tablat,__pdataCOMRAM
   177                           
   178                           ; Clear objects allocated to BIGRAM (500 bytes)
   179  000D7A  EE06  F00C         	lfsr	0,__pbssBIGRAM
   180  000D7E  EE11 F0F4          	lfsr	1,500
   181  000D82                     clear_0:
   182  000D82  6AEE               	clrf	postinc0,c
   183  000D84  50E5               	movf	postdec1,w,c
   184  000D86  50E1               	movf	fsr1l,w,c
   185  000D88  E1FC               	bnz	clear_0
   186  000D8A  50E2               	movf	fsr1h,w,c
   187  000D8C  E1FA               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to COMRAM (14 bytes)
   190  000D8E  EE00  F02A         	lfsr	0,__pbssCOMRAM
   191  000D92  0E0E               	movlw	14
   192  000D94                     clear_1:
   193  000D94  6AEE               	clrf	postinc0,c
   194  000D96  06E8               	decf	wreg,f,c
   195  000D98  E1FD               	bnz	clear_1
   196  000D9A                     end_of_initialization:
   197                           	opt callstack 0
   198  000D9A                     __end_of__initialization:
   199                           	opt callstack 0
   200  000D9A  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   201  000D9C  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   202  000D9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203  000DA0  6EF8               	movwf	tblptru,c
   204  000DA2  0100               	movlb	0
   205  000DA4  EF11  F004         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  00002A                     __pbssCOMRAM:
   209                           	opt callstack 0
   210  00002A                     _aux:
   211                           	opt callstack 0
   212  00002A                     	ds	4
   213  00002E                     _conta_100us:
   214                           	opt callstack 0
   215  00002E                     	ds	2
   216  000030                     _Lectura_del_brillo:
   217                           	opt callstack 0
   218  000030                     	ds	2
   219  000032                     _Brillo:
   220                           	opt callstack 0
   221  000032                     	ds	2
   222  000034                     _Bandera_de_Lectura:
   223                           	opt callstack 0
   224  000034                     	ds	1
   225  000035                     _a:
   226                           	opt callstack 0
   227  000035                     	ds	1
   228  000036                     _i:
   229                           	opt callstack 0
   230  000036                     	ds	1
   231  000037                     _Indice:
   232                           	opt callstack 0
   233  000037                     	ds	1
   234                           
   235                           	psect	dataCOMRAM
   236  000038                     __pdataCOMRAM:
   237                           	opt callstack 0
   238  000038                     _Iniciar_acumulacion_de_datos:
   239                           	opt callstack 0
   240  000038                     	ds	1
   241                           
   242                           	psect	bssBIGRAM
   243  00060C                     __pbssBIGRAM:
   244                           	opt callstack 0
   245  00060C                     _valores:
   246                           	opt callstack 0
   247  00060C                     	ds	500
   248                           
   249                           	psect	cstackCOMRAM
   250  000001                     __pcstackCOMRAM:
   251                           	opt callstack 0
   252  000001                     ??_Adc:
   253  000001                     
   254                           ; 1 bytes @ 0x0
   255  000001                     	ds	3
   256  000004                     ??_Led_Twinkle:
   257  000004                     ?_LecturaADC:
   258                           	opt callstack 0
   259  000004                     ?___aldiv:
   260                           	opt callstack 0
   261  000004                     ?___almod:
   262                           	opt callstack 0
   263  000004                     Tx_str@data:
   264                           	opt callstack 0
   265  000004                     ___aldiv@dividend:
   266                           	opt callstack 0
   267  000004                     ___almod@dividend:
   268                           	opt callstack 0
   269                           
   270                           ; 4 bytes @ 0x3
   271  000004                     	ds	1
   272  000005                     UART0_Tx_String@str:
   273                           	opt callstack 0
   274                           
   275                           ; 2 bytes @ 0x4
   276  000005                     	ds	1
   277  000006                     ??_LecturaADC:
   278                           
   279                           ; 1 bytes @ 0x5
   280  000006                     	ds	1
   281  000007                     
   282                           ; 1 bytes @ 0x6
   283  000007                     	ds	1
   284  000008                     LecturaADC@canal:
   285                           	opt callstack 0
   286  000008                     ___aldiv@divisor:
   287                           	opt callstack 0
   288  000008                     ___almod@divisor:
   289                           	opt callstack 0
   290                           
   291                           ; 4 bytes @ 0x7
   292  000008                     	ds	4
   293  00000C                     ___aldiv@counter:
   294                           	opt callstack 0
   295  00000C                     ___almod@counter:
   296                           	opt callstack 0
   297                           
   298                           ; 1 bytes @ 0xB
   299  00000C                     	ds	1
   300  00000D                     ___aldiv@sign:
   301                           	opt callstack 0
   302  00000D                     ___almod@sign:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0xC
   306  00000D                     	ds	1
   307  00000E                     ___aldiv@quotient:
   308                           	opt callstack 0
   309                           
   310                           ; 4 bytes @ 0xD
   311  00000E                     	ds	4
   312  000012                     UART0_Tx_Integer@num:
   313                           	opt callstack 0
   314                           
   315                           ; 4 bytes @ 0x11
   316  000012                     	ds	4
   317  000016                     UART0_Tx_Integer@signo_y_digitos:
   318                           	opt callstack 0
   319                           
   320                           ; 12 bytes @ 0x15
   321  000016                     	ds	12
   322  000022                     UART0_Tx_Integer@digito:
   323                           	opt callstack 0
   324                           
   325                           ; 4 bytes @ 0x21
   326  000022                     	ds	4
   327  000026                     UART0_Tx_Integer@signo:
   328                           	opt callstack 0
   329                           
   330                           ; 1 bytes @ 0x25
   331  000026                     	ds	1
   332  000027                     UART0_Tx_Integer@indice:
   333                           	opt callstack 0
   334                           
   335                           ; 1 bytes @ 0x26
   336  000027                     	ds	1
   337  000028                     ??_main:
   338                           
   339                           ; 1 bytes @ 0x27
   340  000028                     	ds	2
   341                           
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 29 in file "Principal.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   361 ;;      Params:         0       0       0       0       0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0       0       0       0       0
   363 ;;      Temps:          2       0       0       0       0       0       0       0       0
   364 ;;      Totals:         2       0       0       0       0       0       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels required when called:    6
   367 ;; This function calls:
   368 ;;		_Inicializacion
   369 ;;		_LecturaADC
   370 ;;		_Led_Twinkle
   371 ;;		_UART0_Tx_Integer
   372 ;;		_UART0_Tx_String
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text0
   379  000822                     __ptext0:
   380                           	opt callstack 0
   381  000822                     _main:
   382                           	opt callstack 25
   383  000822                     
   384                           ;Principal.c: 30:     Inicializacion();
   385  000822  EC66  F007         	call	_Inicializacion	;wreg free
   386  000826                     
   387                           ;Principal.c: 32:     Led_Twinkle();
   388  000826  ECF0  F006         	call	_Led_Twinkle	;wreg free
   389  00082A                     
   390                           ;Principal.c: 33:     TRISD1 = 0;
   391  00082A  9295               	bcf	3989,1,c	;volatile
   392  00082C                     
   393                           ;Principal.c: 34:     RCONbits.IPEN = 1;
   394  00082C  8ED0               	bsf	208,7,c	;volatile
   395  00082E                     
   396                           ;Principal.c: 35:     T0CONbits.TMR0ON = 1;
   397  00082E  8ED5               	bsf	213,7,c	;volatile
   398  000830                     l1395:
   399                           
   400                           ;Principal.c: 37:         for (a = 0; a < 6; a++) {
   401  000830  0E00               	movlw	0
   402  000832  6E35               	movwf	_a^0,c
   403  000834                     l54:
   404                           
   405                           ;Principal.c: 38:             RD1 = 0;
   406  000834  9283               	bcf	3971,1,c	;volatile
   407  000836                     
   408                           ;Principal.c: 39:             _delay((unsigned long)((250)*(8000000/4000.0)));
   409  000836  0E03               	movlw	3
   410  000838  6E29               	movwf	(??_main+1)^0,c
   411  00083A  0E8A               	movlw	138
   412  00083C  6E28               	movwf	??_main^0,c
   413  00083E  0E56               	movlw	86
   414  000840                     u607:
   415  000840  2EE8               	decfsz	wreg,f,c
   416  000842  D7FE               	bra	u607
   417  000844  2E28               	decfsz	??_main^0,f,c
   418  000846  D7FC               	bra	u607
   419  000848  2E29               	decfsz	(??_main+1)^0,f,c
   420  00084A  D7FA               	bra	u607
   421                           
   422                           ;Principal.c: 40:             while (Iniciar_acumulacion_de_datos) {
   423  00084C  EFE9  F004         	goto	l1453
   424  000850                     l1403:
   425                           
   426                           ;Principal.c: 41:                 if (Bandera_de_Lectura == 1) {
   427  000850  0434               	decf	_Bandera_de_Lectura^0,w,c	;volatile
   428  000852  A4D8               	btfss	status,2,c
   429  000854  EF2E  F004         	goto	u521
   430  000858  EF30  F004         	goto	u520
   431  00085C                     u521:
   432  00085C  EFE9  F004         	goto	l1453
   433  000860                     u520:
   434  000860                     
   435                           ;Principal.c: 42:                     Bandera_de_Lectura = 0;
   436  000860  0E00               	movlw	0
   437  000862  6E34               	movwf	_Bandera_de_Lectura^0,c	;volatile
   438  000864                     
   439                           ;Principal.c: 43:                     valores[Indice] = LecturaADC(0);
   440  000864  0E00               	movlw	0
   441  000866  EC1F  F007         	call	_LecturaADC
   442  00086A  5037               	movf	_Indice^0,w,c
   443  00086C  0D02               	mullw	2
   444  00086E  0E0C               	movlw	low _valores
   445  000870  24F3               	addwf	243,w,c
   446  000872  6ED9               	movwf	fsr2l,c
   447  000874  0E06               	movlw	high _valores
   448  000876  20F4               	addwfc	prodh,w,c
   449  000878  6EDA               	movwf	fsr2h,c
   450  00087A  C004  FFDE         	movff	?_LecturaADC,postinc2
   451  00087E  C005  FFDD         	movff	?_LecturaADC+1,postdec2
   452  000882                     
   453                           ;Principal.c: 44:                     if (Indice == 20) RD1 = 1;
   454  000882  0E14               	movlw	20
   455  000884  1837               	xorwf	_Indice^0,w,c
   456  000886  A4D8               	btfss	status,2,c
   457  000888  EF48  F004         	goto	u531
   458  00088C  EF4A  F004         	goto	u530
   459  000890                     u531:
   460  000890  EF4B  F004         	goto	l1413
   461  000894                     u530:
   462  000894  8283               	bsf	3971,1,c	;volatile
   463  000896                     l1413:
   464                           
   465                           ;Principal.c: 45:                     Indice++;
   466  000896  2A37               	incf	_Indice^0,f,c
   467  000898                     
   468                           ;Principal.c: 46:                     if (Indice == 250) {
   469  000898  0EFA               	movlw	250
   470  00089A  1837               	xorwf	_Indice^0,w,c
   471  00089C  A4D8               	btfss	status,2,c
   472  00089E  EF53  F004         	goto	u541
   473  0008A2  EF55  F004         	goto	u540
   474  0008A6                     u541:
   475  0008A6  EFE9  F004         	goto	l1453
   476  0008AA                     u540:
   477  0008AA                     
   478                           ;Principal.c: 47:                         Indice = 0;
   479  0008AA  0E00               	movlw	0
   480  0008AC  6E37               	movwf	_Indice^0,c
   481                           
   482                           ;Principal.c: 48:                         Iniciar_acumulacion_de_datos = 0;
   483  0008AE  0E00               	movlw	0
   484  0008B0  6E38               	movwf	_Iniciar_acumulacion_de_datos^0,c
   485                           
   486                           ;Principal.c: 50:                         switch (a) {
   487  0008B2  EF8B  F004         	goto	l1433
   488  0008B6                     l1419:
   489                           
   490                           ;Principal.c: 52:                                 UART0_Tx_String("A=[");
   491  0008B6  0E01               	movlw	low STR_1
   492  0008B8  6E05               	movwf	UART0_Tx_String@str^0,c
   493  0008BA  0E08               	movlw	high STR_1
   494  0008BC  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   495  0008BE  EC85  F006         	call	_UART0_Tx_String	;wreg free
   496                           
   497                           ;Principal.c: 53:                                 break;
   498  0008C2  EFB0  F004         	goto	l1435
   499  0008C6                     l1421:
   500                           
   501                           ;Principal.c: 55:                                 UART0_Tx_String("B=[");
   502  0008C6  0E05               	movlw	low STR_2
   503  0008C8  6E05               	movwf	UART0_Tx_String@str^0,c
   504  0008CA  0E08               	movlw	high STR_2
   505  0008CC  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   506  0008CE  EC85  F006         	call	_UART0_Tx_String	;wreg free
   507                           
   508                           ;Principal.c: 56:                                 break;
   509  0008D2  EFB0  F004         	goto	l1435
   510  0008D6                     l1423:
   511                           
   512                           ;Principal.c: 58:                                 UART0_Tx_String("C=[");
   513  0008D6  0E09               	movlw	low STR_3
   514  0008D8  6E05               	movwf	UART0_Tx_String@str^0,c
   515  0008DA  0E08               	movlw	high STR_3
   516  0008DC  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   517  0008DE  EC85  F006         	call	_UART0_Tx_String	;wreg free
   518                           
   519                           ;Principal.c: 59:                                 break;
   520  0008E2  EFB0  F004         	goto	l1435
   521  0008E6                     l1425:
   522                           
   523                           ;Principal.c: 61:                                 UART0_Tx_String("D=[");
   524  0008E6  0E0D               	movlw	low STR_4
   525  0008E8  6E05               	movwf	UART0_Tx_String@str^0,c
   526  0008EA  0E08               	movlw	high STR_4
   527  0008EC  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   528  0008EE  EC85  F006         	call	_UART0_Tx_String	;wreg free
   529                           
   530                           ;Principal.c: 62:                                 break;
   531  0008F2  EFB0  F004         	goto	l1435
   532  0008F6                     l1427:
   533                           
   534                           ;Principal.c: 64:                                 UART0_Tx_String("E=[");
   535  0008F6  0E11               	movlw	low STR_5
   536  0008F8  6E05               	movwf	UART0_Tx_String@str^0,c
   537  0008FA  0E08               	movlw	high STR_5
   538  0008FC  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   539  0008FE  EC85  F006         	call	_UART0_Tx_String	;wreg free
   540                           
   541                           ;Principal.c: 65:                                 break;
   542  000902  EFB0  F004         	goto	l1435
   543  000906                     l1429:
   544                           
   545                           ;Principal.c: 67:                                 UART0_Tx_String("F=[");
   546  000906  0E15               	movlw	low STR_6
   547  000908  6E05               	movwf	UART0_Tx_String@str^0,c
   548  00090A  0E08               	movlw	high STR_6
   549  00090C  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   550  00090E  EC85  F006         	call	_UART0_Tx_String	;wreg free
   551                           
   552                           ;Principal.c: 68:                                 break;
   553  000912  EFB0  F004         	goto	l1435
   554  000916                     l1433:
   555  000916  5035               	movf	_a^0,w,c
   556  000918  6E28               	movwf	??_main^0,c
   557  00091A  6A29               	clrf	(??_main+1)^0,c
   558                           
   559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   560                           ; Switch size 1, requested type "simple"
   561                           ; Number of cases is 1, Range of values is 0 to 0
   562                           ; switch strategies available:
   563                           ; Name         Instructions Cycles
   564                           ; simple_byte            4     3 (average)
   565                           ;	Chosen strategy is simple_byte
   566  00091C  5029               	movf	(??_main+1)^0,w,c
   567  00091E  0A00               	xorlw	0	; case 0
   568  000920  B4D8               	btfsc	status,2,c
   569  000922  EF95  F004         	goto	l1471
   570  000926  EFB0  F004         	goto	l1435
   571  00092A                     l1471:
   572                           
   573                           ; Switch size 1, requested type "simple"
   574                           ; Number of cases is 6, Range of values is 0 to 5
   575                           ; switch strategies available:
   576                           ; Name         Instructions Cycles
   577                           ; simple_byte           19    10 (average)
   578                           ;	Chosen strategy is simple_byte
   579  00092A  5028               	movf	??_main^0,w,c
   580  00092C  0A00               	xorlw	0	; case 0
   581  00092E  B4D8               	btfsc	status,2,c
   582  000930  EF5B  F004         	goto	l1419
   583  000934  0A01               	xorlw	1	; case 1
   584  000936  B4D8               	btfsc	status,2,c
   585  000938  EF63  F004         	goto	l1421
   586  00093C  0A03               	xorlw	3	; case 2
   587  00093E  B4D8               	btfsc	status,2,c
   588  000940  EF6B  F004         	goto	l1423
   589  000944  0A01               	xorlw	1	; case 3
   590  000946  B4D8               	btfsc	status,2,c
   591  000948  EF73  F004         	goto	l1425
   592  00094C  0A07               	xorlw	7	; case 4
   593  00094E  B4D8               	btfsc	status,2,c
   594  000950  EF7B  F004         	goto	l1427
   595  000954  0A01               	xorlw	1	; case 5
   596  000956  B4D8               	btfsc	status,2,c
   597  000958  EF83  F004         	goto	l1429
   598  00095C  EFB0  F004         	goto	l1435
   599  000960                     l1435:
   600                           
   601                           ;Principal.c: 70:                         for (i = 0; i < 250; i++) {
   602  000960  0E00               	movlw	0
   603  000962  6E36               	movwf	_i^0,c
   604  000964                     l1441:
   605                           
   606                           ;Principal.c: 71:                             UART0_Tx_Integer(valores[i]);
   607  000964  5036               	movf	_i^0,w,c
   608  000966  0D02               	mullw	2
   609  000968  0E0C               	movlw	low _valores
   610  00096A  24F3               	addwf	243,w,c
   611  00096C  6ED9               	movwf	fsr2l,c
   612  00096E  0E06               	movlw	high _valores
   613  000970  20F4               	addwfc	prodh,w,c
   614  000972  6EDA               	movwf	fsr2h,c
   615  000974  CFDE F028          	movff	postinc2,??_main
   616  000978  CFDD F029          	movff	postdec2,??_main+1
   617  00097C  C028  F012         	movff	??_main,UART0_Tx_Integer@num
   618  000980  C029  F013         	movff	??_main+1,UART0_Tx_Integer@num+1
   619  000984  6A14               	clrf	(UART0_Tx_Integer@num+2)^0,c
   620  000986  6A15               	clrf	(UART0_Tx_Integer@num+3)^0,c
   621  000988  EC8F  F005         	call	_UART0_Tx_Integer	;wreg free
   622  00098C                     
   623                           ;Principal.c: 72:                             if (i < 250 - 1)UART0_Tx_String(",");
   624  00098C  0EF9               	movlw	249
   625  00098E  6036               	cpfslt	_i^0,c
   626  000990  EFCC  F004         	goto	u551
   627  000994  EFCE  F004         	goto	u550
   628  000998                     u551:
   629  000998  EFD4  F004         	goto	l1447
   630  00099C                     u550:
   631  00099C  0E1F               	movlw	low STR_7
   632  00099E  6E05               	movwf	UART0_Tx_String@str^0,c
   633  0009A0  0E08               	movlw	high STR_7
   634  0009A2  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   635  0009A4  EC85  F006         	call	_UART0_Tx_String	;wreg free
   636  0009A8                     l1447:
   637                           
   638                           ;Principal.c: 73:                         }
   639  0009A8  2A36               	incf	_i^0,f,c
   640  0009AA  0EF9               	movlw	249
   641  0009AC  6436               	cpfsgt	_i^0,c
   642  0009AE  EFDB  F004         	goto	u561
   643  0009B2  EFDD  F004         	goto	u560
   644  0009B6                     u561:
   645  0009B6  EFB2  F004         	goto	l1441
   646  0009BA                     u560:
   647  0009BA                     
   648                           ;Principal.c: 74:                         UART0_Tx_String("];");
   649  0009BA  0E1C               	movlw	low STR_8
   650  0009BC  6E05               	movwf	UART0_Tx_String@str^0,c
   651  0009BE  0E08               	movlw	high STR_8
   652  0009C0  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   653  0009C2  EC85  F006         	call	_UART0_Tx_String	;wreg free
   654                           
   655                           ;Principal.c: 75:                         UART0_Tx_String("\n\r");
   656  0009C6  0E19               	movlw	low STR_9
   657  0009C8  6E05               	movwf	UART0_Tx_String@str^0,c
   658  0009CA  0E08               	movlw	high STR_9
   659  0009CC  6E06               	movwf	(UART0_Tx_String@str+1)^0,c
   660  0009CE  EC85  F006         	call	_UART0_Tx_String	;wreg free
   661  0009D2                     l1453:
   662                           
   663                           ;Principal.c: 40:             while (Iniciar_acumulacion_de_datos) {
   664  0009D2  5038               	movf	_Iniciar_acumulacion_de_datos^0,w,c
   665  0009D4  A4D8               	btfss	status,2,c
   666  0009D6  EFEF  F004         	goto	u571
   667  0009DA  EFF1  F004         	goto	u570
   668  0009DE                     u571:
   669  0009DE  EF28  F004         	goto	l1403
   670  0009E2                     u570:
   671  0009E2                     
   672                           ;Principal.c: 79:             Iniciar_acumulacion_de_datos=1;
   673  0009E2  0E01               	movlw	1
   674  0009E4  6E38               	movwf	_Iniciar_acumulacion_de_datos^0,c
   675  0009E6                     
   676                           ;Principal.c: 80:         }
   677  0009E6  2A35               	incf	_a^0,f,c
   678  0009E8  0E05               	movlw	5
   679  0009EA  6435               	cpfsgt	_a^0,c
   680  0009EC  EFFA  F004         	goto	u581
   681  0009F0  EFFC  F004         	goto	u580
   682  0009F4                     u581:
   683  0009F4  EF1A  F004         	goto	l54
   684  0009F8                     u580:
   685  0009F8                     l1461:
   686  0009F8  0E06               	movlw	6
   687  0009FA  1835               	xorwf	_a^0,w,c
   688  0009FC  B4D8               	btfsc	status,2,c
   689  0009FE  EF03  F005         	goto	u591
   690  000A02  EF05  F005         	goto	u590
   691  000A06                     u591:
   692  000A06  EFFC  F004         	goto	l1461
   693  000A0A                     u590:
   694  000A0A  EF18  F004         	goto	l1395
   695  000A0E  EF25  F000         	goto	start
   696  000A12                     __end_of_main:
   697                           	opt callstack 0
   698                           
   699 ;; *************** function _UART0_Tx_Integer *****************
   700 ;; Defined at:
   701 ;;		line 79 in file "Usart.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  num             4   17[COMRAM] long 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  signo_y_digi   12   21[COMRAM] unsigned char [12]
   706 ;;  digito          4   33[COMRAM] long 
   707 ;;  indice          1   38[COMRAM] char 
   708 ;;  signo           1   37[COMRAM] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   718 ;;      Params:         4       0       0       0       0       0       0       0       0
   719 ;;      Locals:        18       0       0       0       0       0       0       0       0
   720 ;;      Temps:          0       0       0       0       0       0       0       0       0
   721 ;;      Totals:        22       0       0       0       0       0       0       0       0
   722 ;;Total ram usage:       22 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    5
   725 ;; This function calls:
   726 ;;		_UART0_Tx_String
   727 ;;		___aldiv
   728 ;;		___almod
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text1
   735  000B1E                     __ptext1:
   736                           	opt callstack 0
   737  000B1E                     _UART0_Tx_Integer:
   738                           	opt callstack 25
   739  000B1E                     
   740                           ;Usart.c: 81:  char signo_y_digitos[12];;Usart.c: 82:  uint8_t signo = 0;
   741  000B1E  0E00               	movlw	0
   742  000B20  6E26               	movwf	UART0_Tx_Integer@signo^0,c
   743                           
   744                           ;Usart.c: 83:  int32_t digito;;Usart.c: 84:  int8_t indice = 11;
   745  000B22  0E0B               	movlw	11
   746  000B24  6E27               	movwf	UART0_Tx_Integer@indice^0,c
   747  000B26                     
   748                           ;Usart.c: 87:  if(num < 0){
   749  000B26  BE15               	btfsc	(UART0_Tx_Integer@num+3)^0,7,c
   750  000B28  EF9A  F005         	goto	u490
   751  000B2C  EF98  F005         	goto	u491
   752  000B30                     u491:
   753  000B30  EFA4  F005         	goto	l1363
   754  000B34                     u490:
   755  000B34                     
   756                           ;Usart.c: 88:   signo = 1;
   757  000B34  0E01               	movlw	1
   758  000B36  6E26               	movwf	UART0_Tx_Integer@signo^0,c
   759  000B38                     
   760                           ;Usart.c: 89:   num = -num;
   761  000B38  1E15               	comf	(UART0_Tx_Integer@num+3)^0,f,c
   762  000B3A  1E14               	comf	(UART0_Tx_Integer@num+2)^0,f,c
   763  000B3C  1E13               	comf	(UART0_Tx_Integer@num+1)^0,f,c
   764  000B3E  6C12               	negf	UART0_Tx_Integer@num^0,c
   765  000B40  0E00               	movlw	0
   766  000B42  2213               	addwfc	(UART0_Tx_Integer@num+1)^0,f,c
   767  000B44  2214               	addwfc	(UART0_Tx_Integer@num+2)^0,f,c
   768  000B46  2215               	addwfc	(UART0_Tx_Integer@num+3)^0,f,c
   769  000B48                     l1363:
   770                           
   771                           ;Usart.c: 93:  signo_y_digitos[indice--] = '\0';
   772  000B48  0E00               	movlw	0
   773  000B4A  6E21               	movwf	(UART0_Tx_Integer@signo_y_digitos+11)^0,c
   774  000B4C  0627               	decf	UART0_Tx_Integer@indice^0,f,c
   775  000B4E                     l1367:
   776                           
   777                           ;Usart.c: 97:   digito = (num % 10) + '0';
   778  000B4E  C012  F004         	movff	UART0_Tx_Integer@num,___almod@dividend
   779  000B52  C013  F005         	movff	UART0_Tx_Integer@num+1,___almod@dividend+1
   780  000B56  C014  F006         	movff	UART0_Tx_Integer@num+2,___almod@dividend+2
   781  000B5A  C015  F007         	movff	UART0_Tx_Integer@num+3,___almod@dividend+3
   782  000B5E  0E0A               	movlw	10
   783  000B60  6E08               	movwf	___almod@divisor^0,c
   784  000B62  0E00               	movlw	0
   785  000B64  6E09               	movwf	(___almod@divisor+1)^0,c
   786  000B66  0E00               	movlw	0
   787  000B68  6E0A               	movwf	(___almod@divisor+2)^0,c
   788  000B6A  0E00               	movlw	0
   789  000B6C  6E0B               	movwf	(___almod@divisor+3)^0,c
   790  000B6E  EC0F  F006         	call	___almod	;wreg free
   791  000B72  0E30               	movlw	48
   792  000B74  2404               	addwf	?___almod^0,w,c
   793  000B76  6E22               	movwf	UART0_Tx_Integer@digito^0,c
   794  000B78  0E00               	movlw	0
   795  000B7A  2005               	addwfc	(?___almod+1)^0,w,c
   796  000B7C  6E23               	movwf	(UART0_Tx_Integer@digito+1)^0,c
   797  000B7E  0E00               	movlw	0
   798  000B80  2006               	addwfc	(?___almod+2)^0,w,c
   799  000B82  6E24               	movwf	(UART0_Tx_Integer@digito+2)^0,c
   800  000B84  0E00               	movlw	0
   801  000B86  2007               	addwfc	(?___almod+3)^0,w,c
   802  000B88  6E25               	movwf	(UART0_Tx_Integer@digito+3)^0,c
   803  000B8A                     
   804                           ;Usart.c: 98:   signo_y_digitos[indice--] = (char)digito;
   805  000B8A  0E16               	movlw	low UART0_Tx_Integer@signo_y_digitos
   806  000B8C  2427               	addwf	UART0_Tx_Integer@indice^0,w,c
   807  000B8E  6ED9               	movwf	fsr2l,c
   808  000B90  6ADA               	clrf	fsr2h,c
   809  000B92  0E00               	movlw	high UART0_Tx_Integer@signo_y_digitos
   810  000B94  22DA               	addwfc	fsr2h,f,c
   811  000B96  C022  FFDF         	movff	UART0_Tx_Integer@digito,indf2
   812  000B9A  0627               	decf	UART0_Tx_Integer@indice^0,f,c
   813  000B9C                     
   814                           ;Usart.c: 99:   num /= 10;
   815  000B9C  C012  F004         	movff	UART0_Tx_Integer@num,___aldiv@dividend
   816  000BA0  C013  F005         	movff	UART0_Tx_Integer@num+1,___aldiv@dividend+1
   817  000BA4  C014  F006         	movff	UART0_Tx_Integer@num+2,___aldiv@dividend+2
   818  000BA8  C015  F007         	movff	UART0_Tx_Integer@num+3,___aldiv@dividend+3
   819  000BAC  0E0A               	movlw	10
   820  000BAE  6E08               	movwf	___aldiv@divisor^0,c
   821  000BB0  0E00               	movlw	0
   822  000BB2  6E09               	movwf	(___aldiv@divisor+1)^0,c
   823  000BB4  0E00               	movlw	0
   824  000BB6  6E0A               	movwf	(___aldiv@divisor+2)^0,c
   825  000BB8  0E00               	movlw	0
   826  000BBA  6E0B               	movwf	(___aldiv@divisor+3)^0,c
   827  000BBC  EC09  F005         	call	___aldiv	;wreg free
   828  000BC0  C004  F012         	movff	?___aldiv,UART0_Tx_Integer@num
   829  000BC4  C005  F013         	movff	?___aldiv+1,UART0_Tx_Integer@num+1
   830  000BC8  C006  F014         	movff	?___aldiv+2,UART0_Tx_Integer@num+2
   831  000BCC  C007  F015         	movff	?___aldiv+3,UART0_Tx_Integer@num+3
   832  000BD0                     
   833                           ;Usart.c: 100:  }while(num);
   834  000BD0  5012               	movf	UART0_Tx_Integer@num^0,w,c
   835  000BD2  1013               	iorwf	(UART0_Tx_Integer@num+1)^0,w,c
   836  000BD4  1014               	iorwf	(UART0_Tx_Integer@num+2)^0,w,c
   837  000BD6  1015               	iorwf	(UART0_Tx_Integer@num+3)^0,w,c
   838  000BD8  A4D8               	btfss	status,2,c
   839  000BDA  EFF1  F005         	goto	u501
   840  000BDE  EFF3  F005         	goto	u500
   841  000BE2                     u501:
   842  000BE2  EFA7  F005         	goto	l1367
   843  000BE6                     u500:
   844  000BE6                     
   845                           ;Usart.c: 103:  if(signo){
   846  000BE6  5026               	movf	UART0_Tx_Integer@signo^0,w,c
   847  000BE8  B4D8               	btfsc	status,2,c
   848  000BEA  EFF9  F005         	goto	u511
   849  000BEE  EFFB  F005         	goto	u510
   850  000BF2                     u511:
   851  000BF2  EF05  F006         	goto	l1381
   852  000BF6                     u510:
   853  000BF6                     
   854                           ;Usart.c: 104:   signo_y_digitos[indice] = '-';
   855  000BF6  0E16               	movlw	low UART0_Tx_Integer@signo_y_digitos
   856  000BF8  2427               	addwf	UART0_Tx_Integer@indice^0,w,c
   857  000BFA  6ED9               	movwf	fsr2l,c
   858  000BFC  6ADA               	clrf	fsr2h,c
   859  000BFE  0E00               	movlw	high UART0_Tx_Integer@signo_y_digitos
   860  000C00  22DA               	addwfc	fsr2h,f,c
   861  000C02  0E2D               	movlw	45
   862  000C04  6EDF               	movwf	indf2,c
   863                           
   864                           ;Usart.c: 105:  }else{
   865  000C06  EF06  F006         	goto	l1383
   866  000C0A                     l1381:
   867                           
   868                           ;Usart.c: 106:   indice++;
   869  000C0A  2A27               	incf	UART0_Tx_Integer@indice^0,f,c
   870  000C0C                     l1383:
   871                           
   872                           ;Usart.c: 110:  UART0_Tx_String(&signo_y_digitos[indice]);
   873  000C0C  0E16               	movlw	low UART0_Tx_Integer@signo_y_digitos
   874  000C0E  2427               	addwf	UART0_Tx_Integer@indice^0,w,c
   875  000C10  6E05               	movwf	UART0_Tx_String@str^0,c
   876  000C12  6A06               	clrf	(UART0_Tx_String@str+1)^0,c
   877  000C14  0E00               	movlw	high UART0_Tx_Integer@signo_y_digitos
   878  000C16  2206               	addwfc	(UART0_Tx_String@str+1)^0,f,c
   879  000C18  EC85  F006         	call	_UART0_Tx_String	;wreg free
   880  000C1C  0012               	return		;funcret
   881  000C1E                     __end_of_UART0_Tx_Integer:
   882                           	opt callstack 0
   883                           
   884 ;; *************** function ___almod *****************
   885 ;; Defined at:
   886 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  dividend        4    3[COMRAM] long 
   889 ;;  divisor         4    7[COMRAM] long 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  sign            1   12[COMRAM] unsigned char 
   892 ;;  counter         1   11[COMRAM] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  4    3[COMRAM] long 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         8       0       0       0       0       0       0       0       0
   903 ;;      Locals:         2       0       0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0
   905 ;;      Totals:        10       0       0       0       0       0       0       0       0
   906 ;;Total ram usage:       10 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    3
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_UART0_Tx_Integer
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text2
   917  000C1E                     __ptext2:
   918                           	opt callstack 0
   919  000C1E                     ___almod:
   920                           	opt callstack 26
   921  000C1E  0E00               	movlw	0
   922  000C20  6E0D               	movwf	___almod@sign^0,c
   923  000C22  BE07               	btfsc	(___almod@dividend+3)^0,7,c
   924  000C24  EF18  F006         	goto	u430
   925  000C28  EF16  F006         	goto	u431
   926  000C2C                     u431:
   927  000C2C  EF22  F006         	goto	l1323
   928  000C30                     u430:
   929  000C30  1E07               	comf	(___almod@dividend+3)^0,f,c
   930  000C32  1E06               	comf	(___almod@dividend+2)^0,f,c
   931  000C34  1E05               	comf	(___almod@dividend+1)^0,f,c
   932  000C36  6C04               	negf	___almod@dividend^0,c
   933  000C38  0E00               	movlw	0
   934  000C3A  2205               	addwfc	(___almod@dividend+1)^0,f,c
   935  000C3C  2206               	addwfc	(___almod@dividend+2)^0,f,c
   936  000C3E  2207               	addwfc	(___almod@dividend+3)^0,f,c
   937  000C40  0E01               	movlw	1
   938  000C42  6E0D               	movwf	___almod@sign^0,c
   939  000C44                     l1323:
   940  000C44  BE0B               	btfsc	(___almod@divisor+3)^0,7,c
   941  000C46  EF29  F006         	goto	u440
   942  000C4A  EF27  F006         	goto	u441
   943  000C4E                     u441:
   944  000C4E  EF31  F006         	goto	l1327
   945  000C52                     u440:
   946  000C52  1E0B               	comf	(___almod@divisor+3)^0,f,c
   947  000C54  1E0A               	comf	(___almod@divisor+2)^0,f,c
   948  000C56  1E09               	comf	(___almod@divisor+1)^0,f,c
   949  000C58  6C08               	negf	___almod@divisor^0,c
   950  000C5A  0E00               	movlw	0
   951  000C5C  2209               	addwfc	(___almod@divisor+1)^0,f,c
   952  000C5E  220A               	addwfc	(___almod@divisor+2)^0,f,c
   953  000C60  220B               	addwfc	(___almod@divisor+3)^0,f,c
   954  000C62                     l1327:
   955  000C62  5008               	movf	___almod@divisor^0,w,c
   956  000C64  1009               	iorwf	(___almod@divisor+1)^0,w,c
   957  000C66  100A               	iorwf	(___almod@divisor+2)^0,w,c
   958  000C68  100B               	iorwf	(___almod@divisor+3)^0,w,c
   959  000C6A  B4D8               	btfsc	status,2,c
   960  000C6C  EF3A  F006         	goto	u451
   961  000C70  EF3C  F006         	goto	u450
   962  000C74                     u451:
   963  000C74  EF6C  F006         	goto	l1343
   964  000C78                     u450:
   965  000C78  0E01               	movlw	1
   966  000C7A  6E0C               	movwf	___almod@counter^0,c
   967  000C7C  EF46  F006         	goto	l1333
   968  000C80                     l1331:
   969  000C80  90D8               	bcf	status,0,c
   970  000C82  3608               	rlcf	___almod@divisor^0,f,c
   971  000C84  3609               	rlcf	(___almod@divisor+1)^0,f,c
   972  000C86  360A               	rlcf	(___almod@divisor+2)^0,f,c
   973  000C88  360B               	rlcf	(___almod@divisor+3)^0,f,c
   974  000C8A  2A0C               	incf	___almod@counter^0,f,c
   975  000C8C                     l1333:
   976  000C8C  AE0B               	btfss	(___almod@divisor+3)^0,7,c
   977  000C8E  EF4B  F006         	goto	u461
   978  000C92  EF4D  F006         	goto	u460
   979  000C96                     u461:
   980  000C96  EF40  F006         	goto	l1331
   981  000C9A                     u460:
   982  000C9A                     l1335:
   983  000C9A  5008               	movf	___almod@divisor^0,w,c
   984  000C9C  5C04               	subwf	___almod@dividend^0,w,c
   985  000C9E  5009               	movf	(___almod@divisor+1)^0,w,c
   986  000CA0  5805               	subwfb	(___almod@dividend+1)^0,w,c
   987  000CA2  500A               	movf	(___almod@divisor+2)^0,w,c
   988  000CA4  5806               	subwfb	(___almod@dividend+2)^0,w,c
   989  000CA6  500B               	movf	(___almod@divisor+3)^0,w,c
   990  000CA8  5807               	subwfb	(___almod@dividend+3)^0,w,c
   991  000CAA  A0D8               	btfss	status,0,c
   992  000CAC  EF5A  F006         	goto	u471
   993  000CB0  EF5C  F006         	goto	u470
   994  000CB4                     u471:
   995  000CB4  EF64  F006         	goto	l1339
   996  000CB8                     u470:
   997  000CB8  5008               	movf	___almod@divisor^0,w,c
   998  000CBA  5E04               	subwf	___almod@dividend^0,f,c
   999  000CBC  5009               	movf	(___almod@divisor+1)^0,w,c
  1000  000CBE  5A05               	subwfb	(___almod@dividend+1)^0,f,c
  1001  000CC0  500A               	movf	(___almod@divisor+2)^0,w,c
  1002  000CC2  5A06               	subwfb	(___almod@dividend+2)^0,f,c
  1003  000CC4  500B               	movf	(___almod@divisor+3)^0,w,c
  1004  000CC6  5A07               	subwfb	(___almod@dividend+3)^0,f,c
  1005  000CC8                     l1339:
  1006  000CC8  90D8               	bcf	status,0,c
  1007  000CCA  320B               	rrcf	(___almod@divisor+3)^0,f,c
  1008  000CCC  320A               	rrcf	(___almod@divisor+2)^0,f,c
  1009  000CCE  3209               	rrcf	(___almod@divisor+1)^0,f,c
  1010  000CD0  3208               	rrcf	___almod@divisor^0,f,c
  1011  000CD2  2E0C               	decfsz	___almod@counter^0,f,c
  1012  000CD4  EF4D  F006         	goto	l1335
  1013  000CD8                     l1343:
  1014  000CD8  500D               	movf	___almod@sign^0,w,c
  1015  000CDA  B4D8               	btfsc	status,2,c
  1016  000CDC  EF72  F006         	goto	u481
  1017  000CE0  EF74  F006         	goto	u480
  1018  000CE4                     u481:
  1019  000CE4  EF7C  F006         	goto	l1347
  1020  000CE8                     u480:
  1021  000CE8  1E07               	comf	(___almod@dividend+3)^0,f,c
  1022  000CEA  1E06               	comf	(___almod@dividend+2)^0,f,c
  1023  000CEC  1E05               	comf	(___almod@dividend+1)^0,f,c
  1024  000CEE  6C04               	negf	___almod@dividend^0,c
  1025  000CF0  0E00               	movlw	0
  1026  000CF2  2205               	addwfc	(___almod@dividend+1)^0,f,c
  1027  000CF4  2206               	addwfc	(___almod@dividend+2)^0,f,c
  1028  000CF6  2207               	addwfc	(___almod@dividend+3)^0,f,c
  1029  000CF8                     l1347:
  1030  000CF8  C004  F004         	movff	___almod@dividend,?___almod
  1031  000CFC  C005  F005         	movff	___almod@dividend+1,?___almod+1
  1032  000D00  C006  F006         	movff	___almod@dividend+2,?___almod+2
  1033  000D04  C007  F007         	movff	___almod@dividend+3,?___almod+3
  1034  000D08  0012               	return		;funcret
  1035  000D0A                     __end_of___almod:
  1036                           	opt callstack 0
  1037                           
  1038 ;; *************** function ___aldiv *****************
  1039 ;; Defined at:
  1040 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  dividend        4    3[COMRAM] long 
  1043 ;;  divisor         4    7[COMRAM] long 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  quotient        4   13[COMRAM] long 
  1046 ;;  sign            1   12[COMRAM] unsigned char 
  1047 ;;  counter         1   11[COMRAM] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  4    3[COMRAM] long 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         8       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1060 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1061 ;;Total ram usage:       14 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    3
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_UART0_Tx_Integer
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text3
  1072  000A12                     __ptext3:
  1073                           	opt callstack 0
  1074  000A12                     ___aldiv:
  1075                           	opt callstack 26
  1076  000A12  0E00               	movlw	0
  1077  000A14  6E0D               	movwf	___aldiv@sign^0,c
  1078  000A16  BE0B               	btfsc	(___aldiv@divisor+3)^0,7,c
  1079  000A18  EF12  F005         	goto	u370
  1080  000A1C  EF10  F005         	goto	u371
  1081  000A20                     u371:
  1082  000A20  EF1C  F005         	goto	l1279
  1083  000A24                     u370:
  1084  000A24  1E0B               	comf	(___aldiv@divisor+3)^0,f,c
  1085  000A26  1E0A               	comf	(___aldiv@divisor+2)^0,f,c
  1086  000A28  1E09               	comf	(___aldiv@divisor+1)^0,f,c
  1087  000A2A  6C08               	negf	___aldiv@divisor^0,c
  1088  000A2C  0E00               	movlw	0
  1089  000A2E  2209               	addwfc	(___aldiv@divisor+1)^0,f,c
  1090  000A30  220A               	addwfc	(___aldiv@divisor+2)^0,f,c
  1091  000A32  220B               	addwfc	(___aldiv@divisor+3)^0,f,c
  1092  000A34  0E01               	movlw	1
  1093  000A36  6E0D               	movwf	___aldiv@sign^0,c
  1094  000A38                     l1279:
  1095  000A38  BE07               	btfsc	(___aldiv@dividend+3)^0,7,c
  1096  000A3A  EF23  F005         	goto	u380
  1097  000A3E  EF21  F005         	goto	u381
  1098  000A42                     u381:
  1099  000A42  EF2D  F005         	goto	l1285
  1100  000A46                     u380:
  1101  000A46  1E07               	comf	(___aldiv@dividend+3)^0,f,c
  1102  000A48  1E06               	comf	(___aldiv@dividend+2)^0,f,c
  1103  000A4A  1E05               	comf	(___aldiv@dividend+1)^0,f,c
  1104  000A4C  6C04               	negf	___aldiv@dividend^0,c
  1105  000A4E  0E00               	movlw	0
  1106  000A50  2205               	addwfc	(___aldiv@dividend+1)^0,f,c
  1107  000A52  2206               	addwfc	(___aldiv@dividend+2)^0,f,c
  1108  000A54  2207               	addwfc	(___aldiv@dividend+3)^0,f,c
  1109  000A56  0E01               	movlw	1
  1110  000A58  1A0D               	xorwf	___aldiv@sign^0,f,c
  1111  000A5A                     l1285:
  1112  000A5A  0E00               	movlw	0
  1113  000A5C  6E0E               	movwf	___aldiv@quotient^0,c
  1114  000A5E  0E00               	movlw	0
  1115  000A60  6E0F               	movwf	(___aldiv@quotient+1)^0,c
  1116  000A62  0E00               	movlw	0
  1117  000A64  6E10               	movwf	(___aldiv@quotient+2)^0,c
  1118  000A66  0E00               	movlw	0
  1119  000A68  6E11               	movwf	(___aldiv@quotient+3)^0,c
  1120  000A6A  5008               	movf	___aldiv@divisor^0,w,c
  1121  000A6C  1009               	iorwf	(___aldiv@divisor+1)^0,w,c
  1122  000A6E  100A               	iorwf	(___aldiv@divisor+2)^0,w,c
  1123  000A70  100B               	iorwf	(___aldiv@divisor+3)^0,w,c
  1124  000A72  B4D8               	btfsc	status,2,c
  1125  000A74  EF3E  F005         	goto	u391
  1126  000A78  EF40  F005         	goto	u390
  1127  000A7C                     u391:
  1128  000A7C  EF76  F005         	goto	l1307
  1129  000A80                     u390:
  1130  000A80  0E01               	movlw	1
  1131  000A82  6E0C               	movwf	___aldiv@counter^0,c
  1132  000A84  EF4A  F005         	goto	l1293
  1133  000A88                     l1291:
  1134  000A88  90D8               	bcf	status,0,c
  1135  000A8A  3608               	rlcf	___aldiv@divisor^0,f,c
  1136  000A8C  3609               	rlcf	(___aldiv@divisor+1)^0,f,c
  1137  000A8E  360A               	rlcf	(___aldiv@divisor+2)^0,f,c
  1138  000A90  360B               	rlcf	(___aldiv@divisor+3)^0,f,c
  1139  000A92  2A0C               	incf	___aldiv@counter^0,f,c
  1140  000A94                     l1293:
  1141  000A94  AE0B               	btfss	(___aldiv@divisor+3)^0,7,c
  1142  000A96  EF4F  F005         	goto	u401
  1143  000A9A  EF51  F005         	goto	u400
  1144  000A9E                     u401:
  1145  000A9E  EF44  F005         	goto	l1291
  1146  000AA2                     u400:
  1147  000AA2                     l1295:
  1148  000AA2  90D8               	bcf	status,0,c
  1149  000AA4  360E               	rlcf	___aldiv@quotient^0,f,c
  1150  000AA6  360F               	rlcf	(___aldiv@quotient+1)^0,f,c
  1151  000AA8  3610               	rlcf	(___aldiv@quotient+2)^0,f,c
  1152  000AAA  3611               	rlcf	(___aldiv@quotient+3)^0,f,c
  1153  000AAC  5008               	movf	___aldiv@divisor^0,w,c
  1154  000AAE  5C04               	subwf	___aldiv@dividend^0,w,c
  1155  000AB0  5009               	movf	(___aldiv@divisor+1)^0,w,c
  1156  000AB2  5805               	subwfb	(___aldiv@dividend+1)^0,w,c
  1157  000AB4  500A               	movf	(___aldiv@divisor+2)^0,w,c
  1158  000AB6  5806               	subwfb	(___aldiv@dividend+2)^0,w,c
  1159  000AB8  500B               	movf	(___aldiv@divisor+3)^0,w,c
  1160  000ABA  5807               	subwfb	(___aldiv@dividend+3)^0,w,c
  1161  000ABC  A0D8               	btfss	status,0,c
  1162  000ABE  EF63  F005         	goto	u411
  1163  000AC2  EF65  F005         	goto	u410
  1164  000AC6                     u411:
  1165  000AC6  EF6E  F005         	goto	l1303
  1166  000ACA                     u410:
  1167  000ACA  5008               	movf	___aldiv@divisor^0,w,c
  1168  000ACC  5E04               	subwf	___aldiv@dividend^0,f,c
  1169  000ACE  5009               	movf	(___aldiv@divisor+1)^0,w,c
  1170  000AD0  5A05               	subwfb	(___aldiv@dividend+1)^0,f,c
  1171  000AD2  500A               	movf	(___aldiv@divisor+2)^0,w,c
  1172  000AD4  5A06               	subwfb	(___aldiv@dividend+2)^0,f,c
  1173  000AD6  500B               	movf	(___aldiv@divisor+3)^0,w,c
  1174  000AD8  5A07               	subwfb	(___aldiv@dividend+3)^0,f,c
  1175  000ADA  800E               	bsf	___aldiv@quotient^0,0,c
  1176  000ADC                     l1303:
  1177  000ADC  90D8               	bcf	status,0,c
  1178  000ADE  320B               	rrcf	(___aldiv@divisor+3)^0,f,c
  1179  000AE0  320A               	rrcf	(___aldiv@divisor+2)^0,f,c
  1180  000AE2  3209               	rrcf	(___aldiv@divisor+1)^0,f,c
  1181  000AE4  3208               	rrcf	___aldiv@divisor^0,f,c
  1182  000AE6  2E0C               	decfsz	___aldiv@counter^0,f,c
  1183  000AE8  EF51  F005         	goto	l1295
  1184  000AEC                     l1307:
  1185  000AEC  500D               	movf	___aldiv@sign^0,w,c
  1186  000AEE  B4D8               	btfsc	status,2,c
  1187  000AF0  EF7C  F005         	goto	u421
  1188  000AF4  EF7E  F005         	goto	u420
  1189  000AF8                     u421:
  1190  000AF8  EF86  F005         	goto	l1311
  1191  000AFC                     u420:
  1192  000AFC  1E11               	comf	(___aldiv@quotient+3)^0,f,c
  1193  000AFE  1E10               	comf	(___aldiv@quotient+2)^0,f,c
  1194  000B00  1E0F               	comf	(___aldiv@quotient+1)^0,f,c
  1195  000B02  6C0E               	negf	___aldiv@quotient^0,c
  1196  000B04  0E00               	movlw	0
  1197  000B06  220F               	addwfc	(___aldiv@quotient+1)^0,f,c
  1198  000B08  2210               	addwfc	(___aldiv@quotient+2)^0,f,c
  1199  000B0A  2211               	addwfc	(___aldiv@quotient+3)^0,f,c
  1200  000B0C                     l1311:
  1201  000B0C  C00E  F004         	movff	___aldiv@quotient,?___aldiv
  1202  000B10  C00F  F005         	movff	___aldiv@quotient+1,?___aldiv+1
  1203  000B14  C010  F006         	movff	___aldiv@quotient+2,?___aldiv+2
  1204  000B18  C011  F007         	movff	___aldiv@quotient+3,?___aldiv+3
  1205  000B1C  0012               	return		;funcret
  1206  000B1E                     __end_of___aldiv:
  1207                           	opt callstack 0
  1208                           
  1209 ;; *************** function _UART0_Tx_String *****************
  1210 ;; Defined at:
  1211 ;;		line 65 in file "Usart.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  str             2    4[COMRAM] PTR unsigned char 
  1214 ;;		 -> UART0_Tx_Integer@signo_y_digitos(12), STR_9(3), STR_8(3), STR_7(2), 
  1215 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  1216 ;;		 -> STR_2(4), STR_1(4), 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         2       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        2 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    4
  1235 ;; This function calls:
  1236 ;;		_Tx_str
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;;		_UART0_Tx_Integer
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text4
  1244  000D0A                     __ptext4:
  1245                           	opt callstack 0
  1246  000D0A                     _UART0_Tx_String:
  1247                           	opt callstack 26
  1248  000D0A                     
  1249                           ;Usart.c: 68:  while(*str != '\0'){
  1250  000D0A  EF9B  F006         	goto	l1269
  1251  000D0E                     l1265:
  1252                           
  1253                           ;Usart.c: 70:   Tx_str(*str);
  1254  000D0E  C005  FFF6         	movff	UART0_Tx_String@str,tblptrl
  1255  000D12  C006  FFF7         	movff	UART0_Tx_String@str+1,tblptrh
  1256  000D16  6AF8               	clrf	tblptru,c
  1257  000D18  0E07               	movlw	(high __ramtop+-1)
  1258  000D1A  64F7               	cpfsgt	tblptrh,c
  1259  000D1C  D003               	bra	u347
  1260  000D1E  0008               	tblrd		*
  1261  000D20  50F5               	movf	tablat,w,c
  1262  000D22  D005               	bra	u340
  1263  000D24                     u347:
  1264  000D24  CFF6 FFE9          	movff	tblptrl,fsr0l
  1265  000D28  CFF7 FFEA          	movff	tblptrh,fsr0h
  1266  000D2C  50EF               	movf	indf0,w,c
  1267  000D2E                     u340:
  1268  000D2E  EC72  F007         	call	_Tx_str
  1269  000D32                     
  1270                           ;Usart.c: 73:   str++;
  1271  000D32  4A05               	infsnz	UART0_Tx_String@str^0,f,c
  1272  000D34  2A06               	incf	(UART0_Tx_String@str+1)^0,f,c
  1273  000D36                     l1269:
  1274                           
  1275                           ;Usart.c: 68:  while(*str != '\0'){
  1276  000D36  C005  FFF6         	movff	UART0_Tx_String@str,tblptrl
  1277  000D3A  C006  FFF7         	movff	UART0_Tx_String@str+1,tblptrh
  1278  000D3E  6AF8               	clrf	tblptru,c
  1279  000D40  0E07               	movlw	(high __ramtop+-1)
  1280  000D42  64F7               	cpfsgt	tblptrh,c
  1281  000D44  D003               	bra	u357
  1282  000D46  0008               	tblrd		*
  1283  000D48  50F5               	movf	tablat,w,c
  1284  000D4A  D005               	bra	u350
  1285  000D4C                     u357:
  1286  000D4C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1287  000D50  CFF7 FFEA          	movff	tblptrh,fsr0h
  1288  000D54  50EF               	movf	indf0,w,c
  1289  000D56                     u350:
  1290  000D56  0900               	iorlw	0
  1291  000D58  A4D8               	btfss	status,2,c
  1292  000D5A  EFB1  F006         	goto	u361
  1293  000D5E  EFB3  F006         	goto	u360
  1294  000D62                     u361:
  1295  000D62  EF87  F006         	goto	l1265
  1296  000D66                     u360:
  1297  000D66  0012               	return		;funcret
  1298  000D68                     __end_of_UART0_Tx_String:
  1299                           	opt callstack 0
  1300                           
  1301 ;; *************** function _Tx_str *****************
  1302 ;; Defined at:
  1303 ;;		line 46 in file "Usart.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  data            1    wreg     unsigned char 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  data            1    3[COMRAM] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0
  1318 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1320 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1321 ;;Total ram usage:        1 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    3
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_UART0_Tx_String
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text5
  1332  000EE4                     __ptext5:
  1333                           	opt callstack 0
  1334  000EE4                     _Tx_str:
  1335                           	opt callstack 26
  1336                           
  1337                           ;incstack = 0
  1338                           ;Tx_str@data stored from wreg
  1339  000EE4  6E04               	movwf	Tx_str@data^0,c
  1340  000EE6                     l192:
  1341  000EE6  A2AC               	btfss	172,1,c	;volatile
  1342  000EE8  EF78  F007         	goto	u11
  1343  000EEC  EF7A  F007         	goto	u10
  1344  000EF0                     u11:
  1345  000EF0  EF73  F007         	goto	l192
  1346  000EF4                     u10:
  1347  000EF4                     
  1348                           ;Usart.c: 48:     TXREG = data;
  1349  000EF4  C004  FFAD         	movff	Tx_str@data,4013	;volatile
  1350  000EF8  0012               	return		;funcret
  1351  000EFA                     __end_of_Tx_str:
  1352                           	opt callstack 0
  1353                           
  1354 ;; *************** function _Led_Twinkle *****************
  1355 ;; Defined at:
  1356 ;;		line 93 in file "Confi.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1372 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1374 ;;Total ram usage:        2 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    3
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text6
  1385  000DE0                     __ptext6:
  1386                           	opt callstack 0
  1387  000DE0                     _Led_Twinkle:
  1388                           	opt callstack 27
  1389  000DE0  8083               	bsf	131,0,c	;volatile
  1390  000DE2  0E03               	movlw	3
  1391  000DE4  6E05               	movwf	(??_Led_Twinkle+1)^0,c
  1392  000DE6  0E8A               	movlw	138
  1393  000DE8  6E04               	movwf	??_Led_Twinkle^0,c
  1394  000DEA  0E56               	movlw	86
  1395  000DEC                     u617:
  1396  000DEC  2EE8               	decfsz	wreg,f,c
  1397  000DEE  D7FE               	bra	u617
  1398  000DF0  2E04               	decfsz	??_Led_Twinkle^0,f,c
  1399  000DF2  D7FC               	bra	u617
  1400  000DF4  2E05               	decfsz	(??_Led_Twinkle+1)^0,f,c
  1401  000DF6  D7FA               	bra	u617
  1402  000DF8  9083               	bcf	131,0,c	;volatile
  1403  000DFA  0E02               	movlw	2
  1404  000DFC  6E05               	movwf	(??_Led_Twinkle+1)^0,c
  1405  000DFE  0E04               	movlw	4
  1406  000E00  6E04               	movwf	??_Led_Twinkle^0,c
  1407  000E02  0EBA               	movlw	186
  1408  000E04                     u627:
  1409  000E04  2EE8               	decfsz	wreg,f,c
  1410  000E06  D7FE               	bra	u627
  1411  000E08  2E04               	decfsz	??_Led_Twinkle^0,f,c
  1412  000E0A  D7FC               	bra	u627
  1413  000E0C  2E05               	decfsz	(??_Led_Twinkle+1)^0,f,c
  1414  000E0E  D7FA               	bra	u627
  1415  000E10  D000               	nop2	
  1416  000E12  0012               	return		;funcret
  1417  000E14                     __end_of_Led_Twinkle:
  1418                           	opt callstack 0
  1419                           
  1420 ;; *************** function _LecturaADC *****************
  1421 ;; Defined at:
  1422 ;;		line 41 in file "MiADC.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  canal           1    wreg     unsigned char 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  canal           1    7[COMRAM] unsigned char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  2    3[COMRAM] unsigned short 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1436 ;;      Params:         2       0       0       0       0       0       0       0       0
  1437 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1438 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1439 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1440 ;;Total ram usage:        5 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    3
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text7
  1451  000E3E                     __ptext7:
  1452                           	opt callstack 0
  1453  000E3E                     _LecturaADC:
  1454                           	opt callstack 27
  1455                           
  1456                           ;incstack = 0
  1457                           ;LecturaADC@canal stored from wreg
  1458  000E3E  6E08               	movwf	LecturaADC@canal^0,c
  1459  000E40                     
  1460                           ;MiADC.c: 41: uint16_t LecturaADC(uint8_t canal);MiADC.c: 42: {;MiADC.c: 43:     ADCON0b
      +                          its.CHS = canal;
  1461  000E40  C008  F006         	movff	LecturaADC@canal,??_LecturaADC
  1462  000E44  4606               	rlncf	??_LecturaADC^0,f,c
  1463  000E46  4606               	rlncf	??_LecturaADC^0,f,c
  1464  000E48  50C2               	movf	194,w,c	;volatile
  1465  000E4A  1806               	xorwf	??_LecturaADC^0,w,c
  1466  000E4C  0BC3               	andlw	-61
  1467  000E4E  1806               	xorwf	??_LecturaADC^0,w,c
  1468  000E50  6EC2               	movwf	194,c	;volatile
  1469                           
  1470                           ;MiADC.c: 44:     return (ADRESH<<8) + (ADRESL);
  1471  000E52  50C4               	movf	196,w,c	;volatile
  1472  000E54  6E07               	movwf	(??_LecturaADC+1)^0,c
  1473  000E56  6A06               	clrf	??_LecturaADC^0,c
  1474  000E58  50C3               	movf	195,w,c	;volatile
  1475  000E5A  2406               	addwf	??_LecturaADC^0,w,c
  1476  000E5C  6E04               	movwf	?_LecturaADC^0,c
  1477  000E5E  0E00               	movlw	0
  1478  000E60  2007               	addwfc	(??_LecturaADC+1)^0,w,c
  1479  000E62  6E05               	movwf	(?_LecturaADC+1)^0,c
  1480  000E64  0012               	return		;funcret
  1481  000E66                     __end_of_LecturaADC:
  1482                           	opt callstack 0
  1483                           
  1484 ;; *************** function _Inicializacion *****************
  1485 ;; Defined at:
  1486 ;;		line 77 in file "Confi.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    4
  1507 ;; This function calls:
  1508 ;;		_Confi_Blue
  1509 ;;		_Confi_PWM
  1510 ;;		_Confi_TMR0
  1511 ;;		_ConfigADC
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text8
  1518  000ECC                     __ptext8:
  1519                           	opt callstack 0
  1520  000ECC                     _Inicializacion:
  1521                           	opt callstack 26
  1522  000ECC  9095               	bcf	149,0,c	;volatile
  1523  000ECE  EC0A  F007         	call	_ConfigADC	;wreg free
  1524  000ED2  EC47  F007         	call	_Confi_PWM	;wreg free
  1525  000ED6  EC59  F007         	call	_Confi_Blue	;wreg free
  1526  000EDA  EC33  F007         	call	_Confi_TMR0	;wreg free
  1527  000EDE  0E70               	movlw	112
  1528  000EE0  12D3               	iorwf	211,f,c	;volatile
  1529  000EE2  0012               	return		;funcret
  1530  000EE4                     __end_of_Inicializacion:
  1531                           	opt callstack 0
  1532                           
  1533 ;; *************** function _ConfigADC *****************
  1534 ;; Defined at:
  1535 ;;		line 16 in file "MiADC.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    3
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_Inicializacion
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text9
  1564  000E14                     __ptext9:
  1565                           	opt callstack 0
  1566  000E14                     _ConfigADC:
  1567                           	opt callstack 26
  1568  000E14                     
  1569                           ;MiADC.c: 18:     TRISAbits.RA0=1;
  1570  000E14  8092               	bsf	146,0,c	;volatile
  1571                           
  1572                           ;MiADC.c: 20:     PIR1bits.ADIF=0;
  1573  000E16  9C9E               	bcf	158,6,c	;volatile
  1574                           
  1575                           ;MiADC.c: 21:     PIE1bits.ADIE=1;
  1576  000E18  8C9D               	bsf	157,6,c	;volatile
  1577                           
  1578                           ;MiADC.c: 22:     IPR1bits.ADIP=0;
  1579  000E1A  9C9F               	bcf	159,6,c	;volatile
  1580  000E1C                     
  1581                           ;MiADC.c: 24:     ADCON2bits.ACQT = 0b010;
  1582  000E1C  50C0               	movf	192,w,c	;volatile
  1583  000E1E  0BC7               	andlw	-57
  1584  000E20  0910               	iorlw	16
  1585  000E22  6EC0               	movwf	192,c	;volatile
  1586                           
  1587                           ;MiADC.c: 25:     ADCON2bits.ADCS = 0b101;
  1588  000E24  50C0               	movf	192,w,c	;volatile
  1589  000E26  0BF8               	andlw	-8
  1590  000E28  0905               	iorlw	5
  1591  000E2A  6EC0               	movwf	192,c	;volatile
  1592  000E2C                     
  1593                           ;MiADC.c: 26:     ADCON2bits.ADFM = 1;
  1594  000E2C  8EC0               	bsf	192,7,c	;volatile
  1595                           
  1596                           ;MiADC.c: 27:     ADCON1bits.PCFG = 0b1101;
  1597  000E2E  50C1               	movf	193,w,c	;volatile
  1598  000E30  0BF0               	andlw	-16
  1599  000E32  090D               	iorlw	13
  1600  000E34  6EC1               	movwf	193,c	;volatile
  1601                           
  1602                           ;MiADC.c: 28:     ADCON1bits.VCFG = 0b00;
  1603  000E36  0ECF               	movlw	-49
  1604  000E38  16C1               	andwf	193,f,c	;volatile
  1605  000E3A                     
  1606                           ;MiADC.c: 29:     ADCON0bits.ADON = 1;
  1607  000E3A  80C2               	bsf	194,0,c	;volatile
  1608  000E3C  0012               	return		;funcret
  1609  000E3E                     __end_of_ConfigADC:
  1610                           	opt callstack 0
  1611                           
  1612 ;; *************** function _Confi_TMR0 *****************
  1613 ;; Defined at:
  1614 ;;		line 8 in file "TMRs.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1628 ;;      Params:         0       0       0       0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    3
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_Inicializacion
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text10
  1643  000E66                     __ptext10:
  1644                           	opt callstack 0
  1645  000E66                     _Confi_TMR0:
  1646                           	opt callstack 26
  1647  000E66                     
  1648                           ;TMRs.c: 9:     INTCONbits.GIE=1;
  1649  000E66  8EF2               	bsf	242,7,c	;volatile
  1650                           
  1651                           ;TMRs.c: 10:     RCONbits.IPEN=1;
  1652  000E68  8ED0               	bsf	208,7,c	;volatile
  1653                           
  1654                           ;TMRs.c: 11:     INTCONbits.PEIE=1;
  1655  000E6A  8CF2               	bsf	242,6,c	;volatile
  1656                           
  1657                           ;TMRs.c: 13:     T0CONbits.TMR0ON= 0;
  1658  000E6C  9ED5               	bcf	213,7,c	;volatile
  1659                           
  1660                           ;TMRs.c: 14:     INTCONbits.TMR0IF = 0;
  1661  000E6E  94F2               	bcf	242,2,c	;volatile
  1662                           
  1663                           ;TMRs.c: 15:     INTCONbits.T0IE=1;
  1664  000E70  8AF2               	bsf	242,5,c	;volatile
  1665                           
  1666                           ;TMRs.c: 16:     INTCON2bits.T0IP=1;
  1667  000E72  84F1               	bsf	241,2,c	;volatile
  1668                           
  1669                           ;TMRs.c: 17:     INTCON2bits.INTEDG0=0;
  1670  000E74  9CF1               	bcf	241,6,c	;volatile
  1671                           
  1672                           ;TMRs.c: 20:     TMR0H=((65496)>>8)&0xff;
  1673  000E76  68D7               	setf	215,c	;volatile
  1674  000E78                     
  1675                           ;TMRs.c: 21:     TMR0L=(65496)&0xff;
  1676  000E78  0ED8               	movlw	216
  1677  000E7A  6ED6               	movwf	214,c	;volatile
  1678  000E7C                     
  1679                           ;TMRs.c: 23:     T0CONbits.T08BIT=0;
  1680  000E7C  9CD5               	bcf	213,6,c	;volatile
  1681  000E7E                     
  1682                           ;TMRs.c: 27:     T0CONbits.PSA=1;
  1683  000E7E  86D5               	bsf	213,3,c	;volatile
  1684  000E80                     
  1685                           ;TMRs.c: 31:     T0CONbits.T0CS=0;
  1686  000E80  9AD5               	bcf	213,5,c	;volatile
  1687  000E82                     
  1688                           ;TMRs.c: 35:     T0CONbits.T0SE=0;
  1689  000E82  98D5               	bcf	213,4,c	;volatile
  1690                           
  1691                           ;TMRs.c: 39:     T0CONbits.T0PS=0b001;
  1692  000E84  50D5               	movf	213,w,c	;volatile
  1693  000E86  0BF8               	andlw	-8
  1694  000E88  0901               	iorlw	1
  1695  000E8A  6ED5               	movwf	213,c	;volatile
  1696  000E8C  0012               	return		;funcret
  1697  000E8E                     __end_of_Confi_TMR0:
  1698                           	opt callstack 0
  1699                           
  1700 ;; *************** function _Confi_PWM *****************
  1701 ;; Defined at:
  1702 ;;		line 6 in file "PWM.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    3
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_Inicializacion
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text11
  1731  000E8E                     __ptext11:
  1732                           	opt callstack 0
  1733  000E8E                     _Confi_PWM:
  1734                           	opt callstack 26
  1735  000E8E                     
  1736                           ;PWM.c: 7:     TRISCbits.RC2=0;
  1737  000E8E  9494               	bcf	148,2,c	;volatile
  1738                           
  1739                           ;PWM.c: 8:     T2CONbits.TMR2ON=0;
  1740  000E90  94CA               	bcf	202,2,c	;volatile
  1741  000E92                     
  1742                           ;PWM.c: 11:     CCP1CONbits.CCP1M=0b1100;
  1743  000E92  50BD               	movf	189,w,c	;volatile
  1744  000E94  0BF0               	andlw	-16
  1745  000E96  090C               	iorlw	12
  1746  000E98  6EBD               	movwf	189,c	;volatile
  1747                           
  1748                           ;PWM.c: 33:     T2CONbits.TOUTPS=0b0000;
  1749  000E9A  0E87               	movlw	-121
  1750  000E9C  16CA               	andwf	202,f,c	;volatile
  1751                           
  1752                           ;PWM.c: 39:     T2CONbits.T2CKPS=0b00;
  1753  000E9E  0EFC               	movlw	-4
  1754  000EA0  16CA               	andwf	202,f,c	;volatile
  1755                           
  1756                           ;PWM.c: 48:     PR2=249;
  1757  000EA2  0EF9               	movlw	249
  1758  000EA4  6ECB               	movwf	203,c	;volatile
  1759                           
  1760                           ;PWM.c: 49:     CCPR1L= 0xff & (20);
  1761  000EA6  0E14               	movlw	20
  1762  000EA8  6EBE               	movwf	190,c	;volatile
  1763                           
  1764                           ;PWM.c: 50:     CCPR1H= 0xff & (8>>20);
  1765  000EAA  0E08               	movlw	8
  1766  000EAC  6EBF               	movwf	191,c	;volatile
  1767  000EAE                     
  1768                           ;PWM.c: 51:     T2CONbits.TMR2ON=1;
  1769  000EAE  84CA               	bsf	202,2,c	;volatile
  1770  000EB0  0012               	return		;funcret
  1771  000EB2                     __end_of_Confi_PWM:
  1772                           	opt callstack 0
  1773                           
  1774 ;; *************** function _Confi_Blue *****************
  1775 ;; Defined at:
  1776 ;;		line 6 in file "Usart.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1793 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    3
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_Inicializacion
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text12
  1805  000EB2                     __ptext12:
  1806                           	opt callstack 0
  1807  000EB2                     _Confi_Blue:
  1808                           	opt callstack 26
  1809  000EB2                     
  1810                           ;Usart.c: 7:     TRISCbits.RC7=1;
  1811  000EB2  8E94               	bsf	148,7,c	;volatile
  1812                           
  1813                           ;Usart.c: 8:     TRISCbits.RC6=0;
  1814  000EB4  9C94               	bcf	148,6,c	;volatile
  1815  000EB6                     
  1816                           ;Usart.c: 9:     SPBRG=35;
  1817  000EB6  0E23               	movlw	35
  1818  000EB8  6EAF               	movwf	175,c	;volatile
  1819  000EBA                     
  1820                           ;Usart.c: 11:     RCSTAbits.SPEN = 1;
  1821  000EBA  8EAB               	bsf	171,7,c	;volatile
  1822  000EBC                     
  1823                           ;Usart.c: 12:     TXSTAbits.SYNC = 0;
  1824  000EBC  98AC               	bcf	172,4,c	;volatile
  1825  000EBE                     
  1826                           ;Usart.c: 13:     BAUDCONbits.BRG16=1;
  1827  000EBE  86B8               	bsf	184,3,c	;volatile
  1828  000EC0                     
  1829                           ;Usart.c: 14:     TXSTAbits.BRGH = 1;
  1830  000EC0  84AC               	bsf	172,2,c	;volatile
  1831  000EC2                     
  1832                           ;Usart.c: 21:         TXSTAbits.TX9 = 0;
  1833  000EC2  9CAC               	bcf	172,6,c	;volatile
  1834  000EC4                     
  1835                           ;Usart.c: 22:         TXSTAbits.TXEN = 1;
  1836  000EC4  8AAC               	bsf	172,5,c	;volatile
  1837  000EC6                     
  1838                           ;Usart.c: 24:         RCSTAbits.RC9 = 0;
  1839  000EC6  9CAB               	bcf	171,6,c	;volatile
  1840  000EC8                     
  1841                           ;Usart.c: 25:         RCSTAbits.CREN = 1;
  1842  000EC8  88AB               	bsf	171,4,c	;volatile
  1843  000ECA  0012               	return		;funcret
  1844  000ECC                     __end_of_Confi_Blue:
  1845                           	opt callstack 0
  1846                           
  1847 ;; *************** function _Adc *****************
  1848 ;; Defined at:
  1849 ;;		line 96 in file "Principal.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1863 ;;      Params:         0       0       0       0       0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1865 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1866 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1867 ;;Total ram usage:        3 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    2
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		Interrupt level 1
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	intcodelo
  1878  000018                     __pintcodelo:
  1879                           	opt callstack 0
  1880  000018                     _Adc:
  1881                           	opt callstack 25
  1882                           
  1883                           ;incstack = 0
  1884  000018  8039               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1885  00001A  CFD8 F001          	movff	status,??_Adc
  1886  00001E  CFE8 F002          	movff	wreg,??_Adc+1
  1887  000022  CFE0 F003          	movff	bsr,??_Adc+2
  1888  000026                     
  1889                           ;Principal.c: 97:     if (PIR1bits.ADIF == 1) {
  1890  000026  AC9E               	btfss	158,6,c	;volatile
  1891  000028  EF18  F000         	goto	i1u30_21
  1892  00002C  EF1A  F000         	goto	i1u30_20
  1893  000030                     i1u30_21:
  1894  000030  EF1D  F000         	goto	i1l91
  1895  000034                     i1u30_20:
  1896  000034                     
  1897                           ;Principal.c: 98:         PIR1bits.ADIF = 0;
  1898  000034  9C9E               	bcf	158,6,c	;volatile
  1899  000036                     
  1900                           ;Principal.c: 99:         Bandera_de_Lectura = 1;
  1901  000036  0E01               	movlw	1
  1902  000038  6E34               	movwf	_Bandera_de_Lectura^0,c	;volatile
  1903  00003A                     i1l91:
  1904  00003A  C003  FFE0         	movff	??_Adc+2,bsr
  1905  00003E  C002  FFE8         	movff	??_Adc+1,wreg
  1906  000042  C001  FFD8         	movff	??_Adc,status
  1907  000046  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1908  000048  0010               	retfie	
  1909  00004A                     __end_of_Adc:
  1910                           	opt callstack 0
  1911                           
  1912 ;; *************** function _Timer *****************
  1913 ;; Defined at:
  1914 ;;		line 85 in file "Principal.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1931 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    1
  1935 ;; This function calls:
  1936 ;;		_TMR0_Reset
  1937 ;; This function is called by:
  1938 ;;		Interrupt level 2
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	intcode
  1943  000008                     __pintcode:
  1944                           	opt callstack 0
  1945  000008                     _Timer:
  1946                           	opt callstack 25
  1947                           
  1948                           ;incstack = 0
  1949  000008  8239               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1950  00000A  EDD4  F006         	call	int_func,f	;refresh shadow registers
  1951                           
  1952                           	psect	intcode_body
  1953  000DA8                     __pintcode_body:
  1954                           	opt callstack 25
  1955  000DA8                     int_func:
  1956                           	opt callstack 25
  1957  000DA8  0006               	pop		; remove dummy address from shadow register refresh
  1958  000DAA                     
  1959                           ;Principal.c: 86:     if (INTCONbits.TMR0IF == 1) {
  1960  000DAA  A4F2               	btfss	242,2,c	;volatile
  1961  000DAC  EFDA  F006         	goto	i2u28_41
  1962  000DB0  EFDC  F006         	goto	i2u28_40
  1963  000DB4                     i2u28_41:
  1964  000DB4  EFEE  F006         	goto	i2l85
  1965  000DB8                     i2u28_40:
  1966  000DB8                     
  1967                           ;Principal.c: 87:         TMR0_Reset();
  1968  000DB8  EC7D  F007         	call	_TMR0_Reset	;wreg free
  1969  000DBC                     
  1970                           ;Principal.c: 88:         conta_100us++;
  1971  000DBC  4A2E               	infsnz	_conta_100us^0,f,c	;volatile
  1972  000DBE  2A2F               	incf	(_conta_100us+1)^0,f,c	;volatile
  1973  000DC0                     
  1974                           ;Principal.c: 89:         if (conta_100us == 1) {
  1975  000DC0  042E               	decf	_conta_100us^0,w,c	;volatile
  1976  000DC2  102F               	iorwf	(_conta_100us+1)^0,w,c	;volatile
  1977  000DC4  A4D8               	btfss	status,2,c
  1978  000DC6  EFE7  F006         	goto	i2u29_41
  1979  000DCA  EFE9  F006         	goto	i2u29_40
  1980  000DCE                     i2u29_41:
  1981  000DCE  EFEE  F006         	goto	i2l85
  1982  000DD2                     i2u29_40:
  1983  000DD2                     
  1984                           ;Principal.c: 90:             conta_100us = 0;
  1985  000DD2  0E00               	movlw	0
  1986  000DD4  6E2F               	movwf	(_conta_100us+1)^0,c	;volatile
  1987  000DD6  0E00               	movlw	0
  1988  000DD8  6E2E               	movwf	_conta_100us^0,c	;volatile
  1989  000DDA                     
  1990                           ;Principal.c: 91:             ADCON0bits.GO = 1;
  1991  000DDA  82C2               	bsf	194,1,c	;volatile
  1992  000DDC                     i2l85:
  1993  000DDC  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1994  000DDE  0011               	retfie		f
  1995  000DE0                     __end_of_Timer:
  1996                           	opt callstack 0
  1997                           
  1998 ;; *************** function _TMR0_Reset *****************
  1999 ;; Defined at:
  2000 ;;		line 50 in file "TMRs.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_Timer
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text15
  2028  000EFA                     __ptext15:
  2029                           	opt callstack 0
  2030  000EFA                     _TMR0_Reset:
  2031                           	opt callstack 25
  2032  000EFA                     
  2033                           ;TMRs.c: 51:     TMR0H=((65496)>>8)&0xff;
  2034  000EFA  68D7               	setf	215,c	;volatile
  2035  000EFC                     
  2036                           ;TMRs.c: 52:     TMR0L=(65496)&0xff;
  2037  000EFC  0ED8               	movlw	216
  2038  000EFE  6ED6               	movwf	214,c	;volatile
  2039  000F00                     
  2040                           ;TMRs.c: 53:     INTCONbits.TMR0IF = 0;
  2041  000F00  94F2               	bcf	242,2,c	;volatile
  2042  000F02  0012               	return		;funcret
  2043  000F04                     __end_of_TMR0_Reset:
  2044                           	opt callstack 0
  2045                           
  2046                           	psect	rparam
  2047  0000                     
  2048                           	psect	temp
  2049  000039                     btemp:
  2050                           	opt callstack 0
  2051  000039                     	ds	1
  2052  0000                     int$flags	set	btemp
  2053  0000                     wtemp8	set	btemp+1
  2054  0000                     ttemp5	set	btemp+1
  2055  0000                     ttemp6	set	btemp+4
  2056  0000                     ttemp7	set	btemp+8
  2057                           tosu	equ	0xFFF
  2058                           tosh	equ	0xFFE
  2059                           tosl	equ	0xFFD
  2060                           stkptr	equ	0xFFC
  2061                           pclatu	equ	0xFFB
  2062                           pclath	equ	0xFFA
  2063                           pcl	equ	0xFF9
  2064                           tblptru	equ	0xFF8
  2065                           tblptrh	equ	0xFF7
  2066                           tblptrl	equ	0xFF6
  2067                           tablat	equ	0xFF5
  2068                           prodh	equ	0xFF4
  2069                           prodl	equ	0xFF3
  2070                           indf0	equ	0xFEF
  2071                           postinc0	equ	0xFEE
  2072                           postdec0	equ	0xFED
  2073                           preinc0	equ	0xFEC
  2074                           plusw0	equ	0xFEB
  2075                           fsr0h	equ	0xFEA
  2076                           fsr0l	equ	0xFE9
  2077                           wreg	equ	0xFE8
  2078                           indf1	equ	0xFE7
  2079                           postinc1	equ	0xFE6
  2080                           postdec1	equ	0xFE5
  2081                           preinc1	equ	0xFE4
  2082                           plusw1	equ	0xFE3
  2083                           fsr1h	equ	0xFE2
  2084                           fsr1l	equ	0xFE1
  2085                           bsr	equ	0xFE0
  2086                           indf2	equ	0xFDF
  2087                           postinc2	equ	0xFDE
  2088                           postdec2	equ	0xFDD
  2089                           preinc2	equ	0xFDC
  2090                           plusw2	equ	0xFDB
  2091                           fsr2h	equ	0xFDA
  2092                           fsr2l	equ	0xFD9
  2093                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    0
    Data        1
    BSS         514
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    UART0_Tx_String@str	PTR unsigned char  size(2) Largest target is 12
		 -> UART0_Tx_Integer@signo_y_digitos(COMRAM[12]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[2]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_UART0_Tx_Integer
    _UART0_Tx_Integer->___aldiv
    _UART0_Tx_String->_Tx_str

Critical Paths under _Adc in COMRAM

    None.

Critical Paths under _Timer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Adc in BANK0

    None.

Critical Paths under _Timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Adc in BANK1

    None.

Critical Paths under _Timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Adc in BANK2

    None.

Critical Paths under _Timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Adc in BANK3

    None.

Critical Paths under _Timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Adc in BANK4

    None.

Critical Paths under _Timer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Adc in BANK5

    None.

Critical Paths under _Timer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Adc in BANK6

    None.

Critical Paths under _Timer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Adc in BANK7

    None.

Critical Paths under _Timer in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2985
                                             39 COMRAM     2     2      0
                     _Inicializacion
                         _LecturaADC
                        _Led_Twinkle
                   _UART0_Tx_Integer
                    _UART0_Tx_String
 ---------------------------------------------------------------------------------
 (1) _UART0_Tx_Integer                                    22    18      4    2143
                                             17 COMRAM    22    18      4
                    _UART0_Tx_String
                            ___aldiv
                            ___almod
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     448
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART0_Tx_String                                      2     0      2     820
                                              4 COMRAM     2     0      2
                             _Tx_str
 ---------------------------------------------------------------------------------
 (2) _Tx_str                                               1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Led_Twinkle                                          2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LecturaADC                                           5     3      2      22
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Inicializacion                                       0     0      0       0
                         _Confi_Blue
                          _Confi_PWM
                         _Confi_TMR0
                          _ConfigADC
 ---------------------------------------------------------------------------------
 (2) _ConfigADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Confi_TMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Confi_PWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Confi_Blue                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Adc                                                  3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer                                                0     0      0       0
                         _TMR0_Reset
 ---------------------------------------------------------------------------------
 (6) _TMR0_Reset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Inicializacion
     _Confi_Blue
     _Confi_PWM
     _Confi_TMR0
     _ConfigADC
   _LecturaADC
   _Led_Twinkle
   _UART0_Tx_Integer
     _UART0_Tx_String
       _Tx_str
     ___aldiv
     ___almod
   _UART0_Tx_String
     _Tx_str

 _Adc (ROOT)

 _Timer (ROOT)
   _TMR0_Reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     1F4      21       24.4%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      38       1       59.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38      20        0.0%
DATA                 0      0     22C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 15 18:37:41 2019

      __size_of_UART0_Tx_Integer 0100                                _a 0035  
                              _i 0036                               l54 0834  
                             u10 0EF4                               u11 0EF0  
                             bsr 000FE0                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l112 0E3C                              l115 0E64  
                            l134 0EE2                              l207 0D66  
                            l215 0C1C                              l240 0E8C  
                            l137 0E12                              l331 0B1C  
                            l157 0EB0                              l192 0EE6  
                            l344 0D08                              l186 0ECA  
                            l195 0EF8                              l941 0E2C  
                            l925 0EE6                              l951 0EB2  
                            l943 0E3A                              l927 0EF4  
                            l961 0EC0                              l953 0EB6  
                            l945 0E8E                              l937 0E14  
                            l963 0EC2                              l955 0EBA  
                            l947 0E92                              l971 0E66  
                            l939 0E1C                              l965 0EC4  
                            l957 0EBC                              l949 0EAE  
                            l981 0E82                              l973 0E78  
                            l967 0EC6                              l959 0EBE  
                            l975 0E7C                              l969 0EC8  
                            l977 0E7E                              l979 0E80  
                   __CFG_CPB$OFF 000000                              _RD1 007C19  
                            u400 0AA2                              u401 0A9E  
                            u410 0ACA                              u411 0AC6  
                            u340 0D2E                              u420 0AFC  
                            u500 0BE6                              u421 0AF8  
                            u501 0BE2                              u350 0D56  
                            u430 0C30                              u510 0BF6  
                            _PR2 000FCB                              u431 0C2C  
                            u511 0BF2                              u360 0D66  
                            u440 0C52                              u520 0860  
                            u361 0D62                              u441 0C4E  
                            u521 085C                              u370 0A24  
                            u450 0C78                              u530 0894  
                   __CFG_CPD$OFF 000000                              u347 0D24  
                            u371 0A20                              u451 0C74  
                            u531 0890                              u380 0A46  
                            u460 0C9A                              u540 08AA  
                            u357 0D4C                              u381 0A42  
                            u461 0C96                              u541 08A6  
                            u390 0A80                              u470 0CB8  
                            u550 099C                              u391 0A7C  
                            u471 0CB4                              u551 0998  
                            u607 0840                              u480 0CE8  
                            u560 09BA                              u617 0DEC  
                            u481 0CE4                              u561 09B6  
                            u490 0B34                              u570 09E2  
                            u627 0E04                              u491 0B30  
                            u571 09DE                              u580 09F8  
                            u581 09F4                              u590 0A0A  
                            u591 0A06                              _Adc 0018  
                   __CFG_BOR$OFF 000000                              _aux 002A  
                            prod 000FF3                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                             ?_Adc 0001  
                   __CFG_WDT$OFF 000000                             l1301 0ADA  
                           l1063 0ECC                             l1071 0DE2  
                           l1311 0B0C                             l1303 0ADC  
                           l1065 0ECE                             l1073 0DF8  
                           l1305 0AE6                             l1321 0C40  
                           l1401 0836                             l1067 0EDE  
                           l1307 0AEC                             l1331 0C80  
                           l1323 0C44                             l1315 0C1E  
                           l1411 0894                             l1403 0850  
                           l1069 0DE0                             l1309 0AFC  
                           l1341 0CD2                             l1333 0C8C  
                           l1325 0C52                             l1317 0C22  
                           l1421 08C6                             l1413 0896  
                           l1405 0860                             l1351 0E40  
                           l1263 0D0A                             l1271 0A12  
                           l1335 0C9A                             l1343 0CD8  
                           l1327 0C62                             l1319 0C30  
                           l1423 08D6                             l1415 0898  
                           l1407 0864                             l1265 0D0E  
                           l1281 0A46                             l1273 0A16  
                           l1345 0CE8                             l1337 0CB8  
                           l1329 0C78                             l1361 0B38  
                           l1441 0964                             l1425 08E6  
                           l1433 0916                             l1417 08AA  
                           l1409 0882                             l1267 0D32  
                           l1291 0A88                             l1283 0A56  
                           l1275 0A24                             l1347 0CF8  
                           l1339 0CC8                             l1371 0B9A  
                           l1363 0B48                             l1355 0B1E  
                           l1451 09BA                             l1443 098C  
                           l1427 08F6                             l1435 0960  
                           l1419 08B6                             l1269 0D36  
                           l1293 0A94                             l1285 0A5A  
                           l1277 0A34                             l1381 0C0A  
                           l1373 0B9C                             l1365 0B4C  
                           l1357 0B26                             l1461 09F8  
                           l1445 099C                             l1429 0906  
                           l1453 09D2                             l1295 0AA2  
                           l1287 0A6A                             l1279 0A38  
                           l1383 0C0C                             l1375 0BD0  
                           l1367 0B4E                             l1359 0B34  
                           l1455 09E2                             l1447 09A8  
                           l1471 092A                             l1391 082C  
                           l1297 0AAC                             l1289 0A80  
                           l1377 0BE6                             l1369 0B8A  
                           l1457 09E6                             l1449 09AA  
                           l1393 082E                             l1385 0822  
                           l1299 0ACA                             l1379 0BF6  
                           l1459 09E8                             l1395 0830  
                           l1387 0826                             l1389 082A  
                           STR_1 0801                             STR_2 0805  
                           STR_3 0809                             STR_4 080D  
                           STR_5 0811                             STR_6 0815  
                           STR_7 081F                             STR_8 081C  
                           STR_9 0819                             i1l91 003A  
                           i2l85 0DDC                   _Inicializacion 0ECC  
                           _main 0822                             fsr0h 000FEA  
                           fsr1h 000FE2                             indf0 000FEF  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0039                             prodl 000FF3  
                           start 004A                    __CFG_IESO$OFF 000000  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
            __end_of_Led_Twinkle 0E14                  LecturaADC@canal 0008  
                          ??_Adc 0001                    __CFG_PLLDIV$1 000000  
                 __CFG_CCP2MX$ON 000000                  __end_of___aldiv 0B1E  
                __end_of___almod 0D0A                            ?_main 0001  
                     _Confi_TMR0 0E66                       _Confi_Blue 0EB2  
                          i2l243 0F02                            _RCREG 000FAE  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                    __CFG_USBDIV$1 000000  
                          _TXREG 000FAD                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                            _Timer 0008  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                    ?_TMR0_Reset 0001                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000           __end_of_Inicializacion 0EE4  
                _UART0_Tx_String 0D0A                            tablat 000FF5  
                          ttemp5 003A                            ttemp6 003D  
                          ttemp7 0041                            status 000FD8  
                          wtemp8 003A                   __CFG_ICPRT$OFF 000000  
                     _LecturaADC 0E3E                  __initialization 0D68  
                   __end_of_main 0A12                           ??_main 0028  
                  __activetblptr 000002               __size_of_ConfigADC 002A  
             __size_of_Confi_PWM 0024                           ?_Timer 0001  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR1H 000FBF                           _CCPR1L 000FBE  
                ?_Inicializacion 0001  UART0_Tx_Integer@signo_y_digitos 0016  
                         i1l1211 0034                           i1l1213 0036  
                         i1l1209 0026                           i2l1111 0EFC  
                         i2l1113 0F00                           i2l1201 0DBC  
                         i2l1203 0DC0                           i2l1109 0EFA  
                         i2l1205 0DD2                           i2l1207 0DDA  
                         i2l1197 0DAA                           i2l1199 0DB8  
                         _TRISD1 007CA9                      _Led_Twinkle 0DE0  
                         _Brillo 0032                           _Indice 0037  
                 __CFG_XINST$OFF 000000                           _Tx_str 0EE4  
                      ??___aldiv 000C                 _UART0_Tx_Integer 0B1E  
                      ??___almod 000C              __size_of_TMR0_Reset 000A  
                 __CFG_STVREN$ON 000000                           clear_0 0D82  
                         clear_1 0D94                      ?_Confi_TMR0 0001  
                    ?_Confi_Blue 0001                     __pdataCOMRAM 0038  
        __end_of_UART0_Tx_String 0D68                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                       __accesstop 0060  
        __end_of__initialization 0D9A                  __CFG_PBADEN$OFF 000000  
                    ?_LecturaADC 0004                    ___rparam_used 000001  
              __end_of_ConfigADC 0E3E                __end_of_Confi_PWM 0EB2  
                 __pcstackCOMRAM 0001                    __end_of_Timer 0DE0  
          UART0_Tx_Integer@signo 0026                          ??_Timer 0001  
                     Tx_str@data 0004              __size_of_Confi_TMR0 0028  
            __size_of_Confi_Blue 001A                          ?_Tx_str 0001  
               ?_UART0_Tx_String 0005              __size_of_LecturaADC 0028  
                        i1u30_20 0034                          i1u30_21 0030  
                   ??_TMR0_Reset 0001                          i2u28_40 0DB8  
                        i2u28_41 0DB4                          i2u29_40 0DD2  
                        i2u29_41 0DCE     _Iniciar_acumulacion_de_datos 0038  
                __CFG_VREGEN$OFF 000000               _Bandera_de_Lectura 0034  
                        __Hparam 0000               UART0_Tx_String@str 0005  
                        __Lparam 0000                          ___aldiv 0A12  
                        ___almod 0C1E                  __size_of_Tx_str 0016  
             __end_of_TMR0_Reset 0F04                     __psmallconst 0800  
                        __pcinit 0D68                          __ramtop 0800  
                        __ptext0 0822                          __ptext1 0B1E  
                        __ptext2 0C1E                          __ptext3 0A12  
                        __ptext4 0D0A                          __ptext5 0EE4  
                        __ptext6 0DE0                          __ptext7 0E3E  
                        __ptext8 0ECC                          __ptext9 0E14  
                      _T0CONbits 000FD5                     __size_of_Adc 0032  
                      _T1CONbits 000FCD                        _T2CONbits 000FCA  
               ??_Inicializacion 0004                 ___aldiv@dividend 0004  
                        _valores 060C         __end_of_UART0_Tx_Integer 0C1E  
                 __pintcode_body 0DA8             end_of_initialization 0D9A  
                  __Lmediumconst 0000                          int_func 0DA8  
                   ?_Led_Twinkle 0001                        _RCSTAbits 000FAB  
               ___aldiv@quotient 000E                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE                        _PORTDbits 000F83  
                   ??_Confi_TMR0 0004                     ??_Confi_Blue 0004  
                      _TRISAbits 000F92                        _TRISCbits 000F94  
                      _TRISDbits 000F95                      _CCP1CONbits 000FBD  
                      _TXSTAbits 000FAC                     ??_LecturaADC 0006  
             __end_of_Confi_TMR0 0E8E               __end_of_Confi_Blue 0ECC  
                      _ConfigADC 0E14                        _Confi_PWM 0E8E  
                 __end_of_Tx_str 0EFA                      _BAUDCONbits 000FB8  
                  __pidataCOMRAM 0F04              start_initialization 0D68  
                    __end_of_Adc 004A               __end_of_LecturaADC 0E66  
         UART0_Tx_Integer@digito 0022           UART0_Tx_Integer@indice 0027  
            UART0_Tx_Integer@num 0012                         ??_Tx_str 0004  
                     ?_ConfigADC 0001                       ?_Confi_PWM 0001  
               __CFG_LPT1OSC$OFF 000000                      __pbssBIGRAM 060C  
                    __pbssCOMRAM 002A             __size_of_Led_Twinkle 0034  
                      __pintcode 0008                         ?___aldiv 0004  
                       ?___almod 0004                      __pintcodelo 0018  
               ___almod@dividend 0004                      __smallconst 0800  
                 __size_of_Timer 0DD8                ?_UART0_Tx_Integer 0012  
       __size_of_UART0_Tx_String 005E                  ___aldiv@divisor 0008  
             ??_UART0_Tx_Integer 0016                  ___aldiv@counter 000C  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                    _conta_100us 002E                         _PIR1bits 000F9E  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                    ??_ConfigADC 0004                      ??_Confi_PWM 0004  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                     _ADCON2bits 000FC0                      _INTCON2bits 000FF1  
                       __Hrparam 0000                         __Lrparam 0000  
               __size_of___aldiv 010C                 __size_of___almod 00EC  
                       __ptext10 0E66                         __ptext11 0E8E  
                       __ptext12 0EB2                         __ptext15 0EFA  
                ___almod@divisor 0008                  ___almod@counter 000C  
        __size_of_Inicializacion 0018                    __size_of_main 01F0  
              ??_UART0_Tx_String 0007                         int$flags 0039  
          __CFG_CPUDIV$OSC1_PLL2 000000                       _INTCONbits 000FF2  
                       intlevel1 0000                         intlevel2 0000  
                     _OSCCONbits 000FD3              __CFG_FOSC$INTOSC_EC 000000  
                   ___aldiv@sign 000D                       _TMR0_Reset 0EFA  
                   ___almod@sign 000D               _Lectura_del_brillo 0030  
                  ??_Led_Twinkle 0004  
